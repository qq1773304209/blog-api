"2021-03-31 === [main] == INFO  == com.jonm.BlogApiApplication == Starting BlogApiApplication using Java 1.8.0_261 on Jonm with PID 9616 (D:\Users\lhz17\Desktop\01\NBlog-master\blog-api\target\classes started by lhz17 in D:\Users\lhz17\Desktop\01\NBlog-master\blog-api)
""2021-03-31 === [main] == DEBUG == com.jonm.BlogApiApplication == Running with Spring Boot v2.4.0, Spring v5.3.1
""2021-03-31 === [main] == INFO  == com.jonm.BlogApiApplication == The following profiles are active: dev
""2021-03-31 === [main] == INFO  == o.s.d.r.config.RepositoryConfigurationDelegate == Multiple Spring Data modules found, entering strict repository configuration mode!
""2021-03-31 === [main] == INFO  == o.s.d.r.config.RepositoryConfigurationDelegate == Bootstrapping Spring Data Redis repositories in DEFAULT mode.
""2021-03-31 === [main] == INFO  == o.s.d.r.config.RepositoryConfigurationDelegate == Finished Spring Data repository scanning in 90 ms. Found 0 Redis repository interfaces.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == INFO  == o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker == Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
""2021-03-31 === [main] == INFO  == o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker == Bean 'spring.datasource.druid-com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties' of type [com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
""2021-03-31 === [main] == INFO  == o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker == Bean 'advisor' of type [org.springframework.aop.support.RegexpMethodPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
""2021-03-31 === [main] == INFO  == o.s.boot.web.embedded.tomcat.TomcatWebServer == Tomcat initialized with port(s): 8090 (http)
""2021-03-31 === [main] == INFO  == org.apache.catalina.core.StandardService == Starting service [Tomcat]
""2021-03-31 === [main] == INFO  == org.apache.catalina.core.StandardEngine == Starting Servlet engine: [Apache Tomcat/9.0.39]
""2021-03-31 === [main] == INFO  == o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] == Initializing Spring embedded WebApplicationContext
""2021-03-31 === [main] == INFO  == o.s.b.w.s.c.ServletWebServerApplicationContext == Root WebApplicationContext: initialization completed in 2593 ms
""2021-03-31 === [main] == INFO  == n.b.p.useragent.AbstractUserAgentAnalyzerDirect == - Loaded 90 files in  596 msec using expression: classpath*:UserAgents/**/*.yaml
""2021-03-31 === [main] == INFO  == nl.basjes.parse.useragent.utils.YauaaVersion == 
""2021-03-31 === [main] == INFO  == nl.basjes.parse.useragent.utils.YauaaVersion == /-----------------------------------------------------------\
""2021-03-31 === [main] == INFO  == nl.basjes.parse.useragent.utils.YauaaVersion == | Yauaa 5.20 (v5.20 @ 2020-11-22T15:39:16Z)                 |
""2021-03-31 === [main] == INFO  == nl.basjes.parse.useragent.utils.YauaaVersion == +-----------------------------------------------------------+
""2021-03-31 === [main] == INFO  == nl.basjes.parse.useragent.utils.YauaaVersion == | For more information: https://yauaa.basjes.nl             |
""2021-03-31 === [main] == INFO  == nl.basjes.parse.useragent.utils.YauaaVersion == | Copyright (C) 2013-2020 Niels Basjes - License Apache 2.0 |
""2021-03-31 === [main] == INFO  == nl.basjes.parse.useragent.utils.YauaaVersion == \-----------------------------------------------------------/
""2021-03-31 === [main] == INFO  == nl.basjes.parse.useragent.utils.YauaaVersion == 
""2021-03-31 === [main] == INFO  == n.b.p.useragent.AbstractUserAgentAnalyzerDirect == Building all needed matchers for the requested 11 fields.
""2021-03-31 === [main] == INFO  == com.alibaba.druid.pool.DruidDataSource == {dataSource-1} inited
""2021-03-31 === [main] == DEBUG == com.jonm.dao.BlogMapper.getBlogViewsList == ==>  Preparing: select id, views from blog
""2021-03-31 === [main] == DEBUG == com.jonm.dao.BlogMapper.getBlogViewsList == ==> Parameters: 
""2021-03-31 === [main] == TRACE == com.jonm.dao.BlogMapper.getBlogViewsList == <==    Columns: id, views
""2021-03-31 === [main] == TRACE == com.jonm.dao.BlogMapper.getBlogViewsList == <==        Row: 1, 0
""2021-03-31 === [main] == DEBUG == com.jonm.dao.BlogMapper.getBlogViewsList == <==      Total: 1
""2021-03-31 === [main] == INFO  == org.quartz.impl.StdSchedulerFactory == Using default implementation for ThreadExecutor
""2021-03-31 === [main] == INFO  == org.quartz.core.SchedulerSignalerImpl == Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
""2021-03-31 === [main] == INFO  == org.quartz.core.QuartzScheduler == Quartz Scheduler v.2.3.2 created.
""2021-03-31 === [main] == INFO  == org.quartz.simpl.RAMJobStore == RAMJobStore initialized.
""2021-03-31 === [main] == INFO  == org.quartz.core.QuartzScheduler == Scheduler meta-data: Quartz Scheduler (v2.3.2) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

""2021-03-31 === [main] == INFO  == org.quartz.impl.StdSchedulerFactory == Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
""2021-03-31 === [main] == INFO  == org.quartz.impl.StdSchedulerFactory == Quartz scheduler version: 2.3.2
""2021-03-31 === [main] == INFO  == org.quartz.core.QuartzScheduler == JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@60ab906e
""2021-03-31 === [main] == DEBUG == com.jonm.dao.ScheduleJobMapper.getJobList == ==>  Preparing: select job_id, bean_name, method_name, params, cron, status, remark, create_time from schedule_job
""2021-03-31 === [main] == DEBUG == com.jonm.dao.ScheduleJobMapper.getJobList == ==> Parameters: 
""2021-03-31 === [main] == TRACE == com.jonm.dao.ScheduleJobMapper.getJobList == <==    Columns: job_id, bean_name, method_name, params, cron, status, remark, create_time
""2021-03-31 === [main] == TRACE == com.jonm.dao.ScheduleJobMapper.getJobList == <==        Row: 1, redisSyncScheduleTask, syncBlogViewsToDatabase, , 0 0 1 * * ?, 1, 每天凌晨一点，从Redis将博客浏览量同步到数据库, 2020-11-17 23:45:42
""2021-03-31 === [main] == TRACE == com.jonm.dao.ScheduleJobMapper.getJobList == <==        Row: 2, visitorSyncScheduleTask, syncVisitInfoToDatabase, , 0 0 0 * * ?, 1, 清空当天Redis访客标识，记录当天的PV和UV，更新当天所有访客的PV和最后访问时间，更新城市新增访客UV数, 2021-02-05 08:14:28
""2021-03-31 === [main] == DEBUG == com.jonm.dao.ScheduleJobMapper.getJobList == <==      Total: 2
""2021-03-31 === [main] == INFO  == s.d.s.w.PropertySourcedRequestMappingHandlerMapping == Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
""2021-03-31 === [main] == INFO  == o.s.scheduling.concurrent.ThreadPoolTaskExecutor == Initializing ExecutorService 'applicationTaskExecutor'
""2021-03-31 === [main] == INFO  == o.s.security.web.DefaultSecurityFilterChain == Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@dd7b622, org.springframework.security.web.context.SecurityContextPersistenceFilter@135de93b, org.springframework.security.web.header.HeaderWriterFilter@2f087301, org.springframework.web.filter.CorsFilter@73b8c79b, org.springframework.security.web.authentication.logout.LogoutFilter@5a8a50b8, com.jonm.config.JwtLoginFilter@5c3b3f04, com.jonm.config.JwtFilter@2c174215, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@280b9922, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6472dd0c, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1c419713, org.springframework.security.web.session.SessionManagementFilter@6499fda5, org.springframework.security.web.access.ExceptionTranslationFilter@63ec3626, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@dc6c5ca]
""2021-03-31 === [main] == INFO  == o.s.boot.web.embedded.tomcat.TomcatWebServer == Tomcat started on port(s): 8090 (http) with context path ''
""2021-03-31 === [main] == INFO  == s.d.s.web.plugins.DocumentationPluginsBootstrapper == Context refreshed
""2021-03-31 === [main] == INFO  == s.d.s.web.plugins.DocumentationPluginsBootstrapper == Found 1 custom documentation plugin(s)
""2021-03-31 === [main] == INFO  == s.d.spring.web.scanners.ApiListingReferenceScanner == Scanning for api listing references
""2021-03-31 === [main] == INFO  == s.d.s.w.r.operation.CachingOperationNameGenerator == Generating unique operation named: aboutUsingGET_1
""2021-03-31 === [main] == INFO  == s.d.s.w.r.operation.CachingOperationNameGenerator == Generating unique operation named: blogsUsingGET_1
""2021-03-31 === [main] == INFO  == s.d.s.w.r.operation.CachingOperationNameGenerator == Generating unique operation named: getBlogUsingGET_1
""2021-03-31 === [main] == INFO  == s.d.s.w.r.operation.CachingOperationNameGenerator == Generating unique operation named: deleteUsingDELETE_1
""2021-03-31 === [main] == INFO  == s.d.s.w.r.operation.CachingOperationNameGenerator == Generating unique operation named: deleteUsingDELETE_2
""2021-03-31 === [main] == INFO  == s.d.s.w.r.operation.CachingOperationNameGenerator == Generating unique operation named: commentsUsingGET_1
""2021-03-31 === [main] == INFO  == s.d.s.w.r.operation.CachingOperationNameGenerator == Generating unique operation named: deleteUsingDELETE_3
""2021-03-31 === [main] == INFO  == s.d.s.w.r.operation.CachingOperationNameGenerator == Generating unique operation named: updatePublishedUsingPUT_1
""2021-03-31 === [main] == INFO  == s.d.s.w.r.operation.CachingOperationNameGenerator == Generating unique operation named: friendsUsingGET_1
""2021-03-31 === [main] == INFO  == s.d.s.w.r.operation.CachingOperationNameGenerator == Generating unique operation named: deleteUsingDELETE_4
""2021-03-31 === [main] == INFO  == s.d.s.w.r.operation.CachingOperationNameGenerator == Generating unique operation named: updatePublishedUsingPUT_2
""2021-03-31 === [main] == INFO  == s.d.s.w.r.operation.CachingOperationNameGenerator == Generating unique operation named: momentsUsingGET_1
""2021-03-31 === [main] == INFO  == s.d.s.w.r.operation.CachingOperationNameGenerator == Generating unique operation named: deleteUsingDELETE_5
""2021-03-31 === [main] == INFO  == s.d.s.w.r.operation.CachingOperationNameGenerator == Generating unique operation named: deleteUsingDELETE_6
""2021-03-31 === [main] == INFO  == s.d.s.w.r.operation.CachingOperationNameGenerator == Generating unique operation named: deleteUsingDELETE_7
""2021-03-31 === [main] == INFO  == s.d.s.w.r.operation.CachingOperationNameGenerator == Generating unique operation named: deleteUsingDELETE_8
""2021-03-31 === [main] == INFO  == s.d.s.w.r.operation.CachingOperationNameGenerator == Generating unique operation named: deleteUsingDELETE_9
""2021-03-31 === [main] == INFO  == o.s.scheduling.quartz.SchedulerFactoryBean == Starting Quartz Scheduler now
""2021-03-31 === [main] == INFO  == org.quartz.core.QuartzScheduler == Scheduler quartzScheduler_$_NON_CLUSTERED started.
""2021-03-31 === [main] == INFO  == com.jonm.BlogApiApplication == Started BlogApiApplication in 9.577 seconds (JVM running for 14.073)
""2021-03-31 === [http-nio-8090-exec-1] == INFO  == o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] == Initializing Spring DispatcherServlet 'dispatcherServlet'
""2021-03-31 === [http-nio-8090-exec-1] == INFO  == org.springframework.web.servlet.DispatcherServlet == Initializing Servlet 'dispatcherServlet'
""2021-03-31 === [http-nio-8090-exec-1] == INFO  == org.springframework.web.servlet.DispatcherServlet == Completed initialization in 1 ms
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.VisitLogMapper.countVisitLogByToday == ==>  Preparing: select count(*) from visit_log where date(create_time)=curdate()
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.VisitLogMapper.countVisitLogByToday == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.VisitLogMapper.countVisitLogByToday == <==    Columns: count(*)
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.VisitLogMapper.countVisitLogByToday == <==        Row: 0
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.VisitLogMapper.countVisitLogByToday == <==      Total: 1
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.BlogMapper.countBlog == ==>  Preparing: select count(*) from blog
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.BlogMapper.countBlog == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.BlogMapper.countBlog == <==    Columns: count(*)
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.BlogMapper.countBlog == <==        Row: 1
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.BlogMapper.countBlog == <==      Total: 1
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.CommentMapper.countComment == ==>  Preparing: select count(*) from comment
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.CommentMapper.countComment == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.CommentMapper.countComment == <==    Columns: count(*)
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.CommentMapper.countComment == <==        Row: 2
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.CommentMapper.countComment == <==      Total: 1
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.BlogMapper.getCategoryBlogCountList == ==>  Preparing: select category_id, count(category_id) as blog_count from blog group by category_id
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.BlogMapper.getCategoryBlogCountList == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.BlogMapper.getCategoryBlogCountList == <==    Columns: category_id, blog_count
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.BlogMapper.getCategoryBlogCountList == <==        Row: 2, 1
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.BlogMapper.getCategoryBlogCountList == <==      Total: 1
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.CategoryMapper.getCategoryList == ==>  Preparing: select id, category_name from category order by id desc
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.CategoryMapper.getCategoryList == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.CategoryMapper.getCategoryList == <==    Columns: id, category_name
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.CategoryMapper.getCategoryList == <==        Row: 2, 个人项目
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.CategoryMapper.getCategoryList == <==        Row: 1, 项目
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.CategoryMapper.getCategoryList == <==      Total: 2
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.TagMapper.getTagBlogCount == ==>  Preparing: select tag_id, count(tag_id) as blog_count from blog_tag group by tag_id
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.TagMapper.getTagBlogCount == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.TagMapper.getTagBlogCount == <==    Columns: tag_id, blog_count
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.TagMapper.getTagBlogCount == <==        Row: 2, 1
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.TagMapper.getTagBlogCount == <==      Total: 1
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.TagMapper.getTagList == ==>  Preparing: select id, tag_name, color from tag order by id desc
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.TagMapper.getTagList == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.TagMapper.getTagList == <==    Columns: id, tag_name, color
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.TagMapper.getTagList == <==        Row: 2, Mysql, null
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.TagMapper.getTagList == <==        Row: 1, Java, null
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.TagMapper.getTagList == <==      Total: 2
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == c.j.d.VisitRecordMapper.getVisitRecordListByLimit == ==>  Preparing: select pv, uv, date from visit_record order by id desc limit ?
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == c.j.d.VisitRecordMapper.getVisitRecordListByLimit == ==> Parameters: 7(Integer)
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == c.j.d.VisitRecordMapper.getVisitRecordListByLimit == <==      Total: 0
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.CityVisitorMapper.getCityVisitorList == ==>  Preparing: select city, uv from city_visitor order by uv desc
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.CityVisitorMapper.getCityVisitorList == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.CityVisitorMapper.getCityVisitorList == <==      Total: 0
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-5] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == ==>  Preparing: select id,name_en,name_zh,value,type from site_setting
""2021-03-31 === [http-nio-8090-exec-5] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==    Columns: id, name_en, name_zh, value, type
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 1, webTitleSuffix, 网页标题后缀, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 2, blogName, 博客名称, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 3, footerImgTitle, 页脚图片标题, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 4, footerImgUrl, 页脚图片路径, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 5, copyright, Copyright, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 6, beian, ICP备案号, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 7, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 8, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 9, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 10, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 11, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 12, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 13, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 14, avatar, 头像路径, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 15, name, 昵称, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 16, rollText, 滚动个签, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 17, github, GitHub地址, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 18, qq, QQ链接, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 19, bilibili, bilibili链接, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 20, netease, 网易云音乐, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 21, email, email, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 22, favorite, 自定义, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 24, favorite, 自定义, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 25, reward, 赞赏码路径, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 26, commentAdminFlag, 博主评论标识, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 27, friendContent, 友链页面信息, <<BLOB>>, 4
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 28, friendCommentEnabled, 友链页面评论开关, <<BLOB>>, 4
""2021-03-31 === [http-nio-8090-exec-5] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == <==      Total: 27
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-7] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == ==>  Preparing: select id,name_en,name_zh,value,type from site_setting
""2021-03-31 === [http-nio-8090-exec-7] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==    Columns: id, name_en, name_zh, value, type
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 1, webTitleSuffix, 网页标题后缀, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 2, blogName, 博客名称, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 3, footerImgTitle, 页脚图片标题, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 4, footerImgUrl, 页脚图片路径, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 5, copyright, Copyright, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 6, beian, ICP备案号, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 7, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 8, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 9, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 10, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 11, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 12, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 13, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 14, avatar, 头像路径, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 15, name, 昵称, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 16, rollText, 滚动个签, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 17, github, GitHub地址, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 18, qq, QQ链接, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 19, bilibili, bilibili链接, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 20, netease, 网易云音乐, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 21, email, email, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 22, favorite, 自定义, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 24, favorite, 自定义, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 25, reward, 赞赏码路径, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 26, commentAdminFlag, 博主评论标识, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 27, friendContent, 友链页面信息, <<BLOB>>, 4
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 28, friendCommentEnabled, 友链页面评论开关, <<BLOB>>, 4
""2021-03-31 === [http-nio-8090-exec-7] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == <==      Total: 27
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == ==>  Preparing: select id,name_en,name_zh,value,type from site_setting
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==    Columns: id, name_en, name_zh, value, type
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 1, webTitleSuffix, 网页标题后缀, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 2, blogName, 博客名称, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 3, footerImgTitle, 页脚图片标题, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 4, footerImgUrl, 页脚图片路径, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 5, copyright, Copyright, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 6, beian, ICP备案号, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 7, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 8, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 9, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 10, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 11, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 12, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 13, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 14, avatar, 头像路径, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 15, name, 昵称, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 16, rollText, 滚动个签, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 17, github, GitHub地址, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 18, qq, QQ链接, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 19, bilibili, bilibili链接, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 20, netease, 网易云音乐, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 21, email, email, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 22, favorite, 自定义, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 24, favorite, 自定义, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 25, reward, 赞赏码路径, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 26, commentAdminFlag, 博主评论标识, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 27, friendContent, 友链页面信息, <<BLOB>>, 4
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 28, friendCommentEnabled, 友链页面评论开关, <<BLOB>>, 4
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == <==      Total: 27
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-10] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == ==>  Preparing: select id,name_en,name_zh,value,type from site_setting
""2021-03-31 === [http-nio-8090-exec-10] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==    Columns: id, name_en, name_zh, value, type
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 1, webTitleSuffix, 网页标题后缀, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 2, blogName, 博客名称, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 3, footerImgTitle, 页脚图片标题, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 4, footerImgUrl, 页脚图片路径, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 5, copyright, Copyright, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 6, beian, ICP备案号, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 7, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 8, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 9, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 10, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 11, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 12, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 13, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 14, avatar, 头像路径, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 15, name, 昵称, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 16, rollText, 滚动个签, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 17, github, GitHub地址, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 18, qq, QQ链接, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 19, bilibili, bilibili链接, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 20, netease, 网易云音乐, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 21, email, email, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 22, favorite, 自定义, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 24, favorite, 自定义, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 25, reward, 赞赏码路径, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 26, commentAdminFlag, 博主评论标识, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 27, friendContent, 友链页面信息, <<BLOB>>, 4
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 28, friendCommentEnabled, 友链页面评论开关, <<BLOB>>, 4
""2021-03-31 === [http-nio-8090-exec-10] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == <==      Total: 27
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == ==>  Preparing: select id,name_en,name_zh,value,type from site_setting
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==    Columns: id, name_en, name_zh, value, type
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 1, webTitleSuffix, 网页标题后缀, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 2, blogName, 博客名称, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 3, footerImgTitle, 页脚图片标题, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 4, footerImgUrl, 页脚图片路径, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 5, copyright, Copyright, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 6, beian, ICP备案号, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 7, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 8, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 9, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 10, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 11, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 12, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 13, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 14, avatar, 头像路径, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 15, name, 昵称, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 16, rollText, 滚动个签, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 17, github, GitHub地址, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 18, qq, QQ链接, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 19, bilibili, bilibili链接, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 20, netease, 网易云音乐, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 21, email, email, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 22, favorite, 自定义, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 24, favorite, 自定义, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 25, reward, 赞赏码路径, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 26, commentAdminFlag, 博主评论标识, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 27, friendContent, 友链页面信息, <<BLOB>>, 4
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 28, friendCommentEnabled, 友链页面评论开关, <<BLOB>>, 4
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == <==      Total: 27
""2021-03-31 === [http-nio-8090-exec-2] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-6] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == ==>  Preparing: select id,name_en,name_zh,value,type from site_setting
""2021-03-31 === [http-nio-8090-exec-6] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==    Columns: id, name_en, name_zh, value, type
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 1, webTitleSuffix, 网页标题后缀, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 2, blogName, 博客名称, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 3, footerImgTitle, 页脚图片标题, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 4, footerImgUrl, 页脚图片路径, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 5, copyright, Copyright, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 6, beian, ICP备案号, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 7, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 8, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 9, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 10, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 11, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 12, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 13, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 14, avatar, 头像路径, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 15, name, 昵称, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 16, rollText, 滚动个签, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 17, github, GitHub地址, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 18, qq, QQ链接, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 19, bilibili, bilibili链接, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 20, netease, 网易云音乐, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 21, email, email, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 22, favorite, 自定义, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 24, favorite, 自定义, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 25, reward, 赞赏码路径, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 26, commentAdminFlag, 博主评论标识, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 27, friendContent, 友链页面信息, <<BLOB>>, 4
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 28, friendCommentEnabled, 友链页面评论开关, <<BLOB>>, 4
""2021-03-31 === [http-nio-8090-exec-6] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == <==      Total: 27
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-7] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == ==>  Preparing: select id,name_en,name_zh,value,type from site_setting
""2021-03-31 === [http-nio-8090-exec-7] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==    Columns: id, name_en, name_zh, value, type
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 1, webTitleSuffix, 网页标题后缀, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 2, blogName, 博客名称, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 3, footerImgTitle, 页脚图片标题, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 4, footerImgUrl, 页脚图片路径, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 5, copyright, Copyright, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 6, beian, ICP备案号, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 7, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 8, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 9, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 10, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 11, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 12, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 13, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 14, avatar, 头像路径, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 15, name, 昵称, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 16, rollText, 滚动个签, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 17, github, GitHub地址, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 18, qq, QQ链接, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 19, bilibili, bilibili链接, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 20, netease, 网易云音乐, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 21, email, email, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 22, favorite, 自定义, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 24, favorite, 自定义, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 25, reward, 赞赏码路径, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 26, commentAdminFlag, 博主评论标识, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 27, friendContent, 友链页面信息, <<BLOB>>, 4
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 28, friendCommentEnabled, 友链页面评论开关, <<BLOB>>, 4
""2021-03-31 === [http-nio-8090-exec-7] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == <==      Total: 27
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == ==>  Preparing: select id,name_en,name_zh,value,type from site_setting
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==    Columns: id, name_en, name_zh, value, type
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 1, webTitleSuffix, 网页标题后缀, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 2, blogName, 博客名称, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 3, footerImgTitle, 页脚图片标题, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 4, footerImgUrl, 页脚图片路径, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 5, copyright, Copyright, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 6, beian, ICP备案号, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 7, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 8, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 9, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 10, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 11, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 12, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 13, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 14, avatar, 头像路径, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 15, name, 昵称, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 16, rollText, 滚动个签, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 17, github, GitHub地址, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 18, qq, QQ链接, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 19, bilibili, bilibili链接, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 20, netease, 网易云音乐, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 21, email, email, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 22, favorite, 自定义, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 24, favorite, 自定义, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 25, reward, 赞赏码路径, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 26, commentAdminFlag, 博主评论标识, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 27, friendContent, 友链页面信息, <<BLOB>>, 4
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 28, friendCommentEnabled, 友链页面评论开关, <<BLOB>>, 4
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == <==      Total: 27
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == ==>  Preparing: select id,name_en,name_zh,value,type from site_setting
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==    Columns: id, name_en, name_zh, value, type
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 1, webTitleSuffix, 网页标题后缀, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 2, blogName, 博客名称, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 3, footerImgTitle, 页脚图片标题, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 4, footerImgUrl, 页脚图片路径, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 5, copyright, Copyright, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 6, beian, ICP备案号, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 7, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 8, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 9, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 10, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 11, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 12, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 13, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 14, avatar, 头像路径, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 15, name, 昵称, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 16, rollText, 滚动个签, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 17, github, GitHub地址, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 18, qq, QQ链接, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 19, bilibili, bilibili链接, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 20, netease, 网易云音乐, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 21, email, email, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 22, favorite, 自定义, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 24, favorite, 自定义, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 25, reward, 赞赏码路径, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 26, commentAdminFlag, 博主评论标识, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 27, friendContent, 友链页面信息, <<BLOB>>, 4
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 28, friendCommentEnabled, 友链页面评论开关, <<BLOB>>, 4
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == <==      Total: 27
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == ==>  Preparing: select id,name_en,name_zh,value,type from site_setting
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==    Columns: id, name_en, name_zh, value, type
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 1, webTitleSuffix, 网页标题后缀, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 2, blogName, 博客名称, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 3, footerImgTitle, 页脚图片标题, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 4, footerImgUrl, 页脚图片路径, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 5, copyright, Copyright, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 6, beian, ICP备案号, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 7, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 8, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 9, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 10, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 11, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 12, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 13, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 14, avatar, 头像路径, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 15, name, 昵称, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 16, rollText, 滚动个签, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 17, github, GitHub地址, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 18, qq, QQ链接, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 19, bilibili, bilibili链接, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 20, netease, 网易云音乐, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 21, email, email, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 22, favorite, 自定义, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 24, favorite, 自定义, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 25, reward, 赞赏码路径, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 26, commentAdminFlag, 博主评论标识, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 27, friendContent, 友链页面信息, <<BLOB>>, 4
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 28, friendCommentEnabled, 友链页面评论开关, <<BLOB>>, 4
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == <==      Total: 27
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == ==>  Preparing: select id,name_en,name_zh,value,type from site_setting
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==    Columns: id, name_en, name_zh, value, type
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 1, webTitleSuffix, 网页标题后缀, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 2, blogName, 博客名称, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 3, footerImgTitle, 页脚图片标题, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 4, footerImgUrl, 页脚图片路径, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 5, copyright, Copyright, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 6, beian, ICP备案号, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 7, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 8, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 9, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 10, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 11, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 12, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 13, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 14, avatar, 头像路径, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 15, name, 昵称, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 16, rollText, 滚动个签, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 17, github, GitHub地址, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 18, qq, QQ链接, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 19, bilibili, bilibili链接, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 20, netease, 网易云音乐, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 21, email, email, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 22, favorite, 自定义, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 24, favorite, 自定义, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 25, reward, 赞赏码路径, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 26, commentAdminFlag, 博主评论标识, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 27, friendContent, 友链页面信息, <<BLOB>>, 4
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 28, friendCommentEnabled, 友链页面评论开关, <<BLOB>>, 4
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == <==      Total: 27
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-5] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == ==>  Preparing: select id,name_en,name_zh,value,type from site_setting
""2021-03-31 === [http-nio-8090-exec-5] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==    Columns: id, name_en, name_zh, value, type
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 1, webTitleSuffix, 网页标题后缀, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 2, blogName, 博客名称, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 3, footerImgTitle, 页脚图片标题, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 4, footerImgUrl, 页脚图片路径, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 5, copyright, Copyright, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 6, beian, ICP备案号, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 7, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 8, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 9, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 10, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 11, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 12, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 13, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 14, avatar, 头像路径, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 15, name, 昵称, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 16, rollText, 滚动个签, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 17, github, GitHub地址, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 18, qq, QQ链接, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 19, bilibili, bilibili链接, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 20, netease, 网易云音乐, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 21, email, email, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 22, favorite, 自定义, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 24, favorite, 自定义, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 25, reward, 赞赏码路径, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 26, commentAdminFlag, 博主评论标识, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 27, friendContent, 友链页面信息, <<BLOB>>, 4
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 28, friendCommentEnabled, 友链页面评论开关, <<BLOB>>, 4
""2021-03-31 === [http-nio-8090-exec-5] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == <==      Total: 27
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-6] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == ==>  Preparing: select id,name_en,name_zh,value,type from site_setting
""2021-03-31 === [http-nio-8090-exec-6] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==    Columns: id, name_en, name_zh, value, type
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 1, webTitleSuffix, 网页标题后缀, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 2, blogName, 博客名称, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 3, footerImgTitle, 页脚图片标题, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 4, footerImgUrl, 页脚图片路径, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 5, copyright, Copyright, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 6, beian, ICP备案号, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 7, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 8, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 9, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 10, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 11, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 12, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 13, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 14, avatar, 头像路径, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 15, name, 昵称, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 16, rollText, 滚动个签, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 17, github, GitHub地址, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 18, qq, QQ链接, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 19, bilibili, bilibili链接, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 20, netease, 网易云音乐, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 21, email, email, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 22, favorite, 自定义, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 24, favorite, 自定义, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 25, reward, 赞赏码路径, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 26, commentAdminFlag, 博主评论标识, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 27, friendContent, 友链页面信息, <<BLOB>>, 4
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 28, friendCommentEnabled, 友链页面评论开关, <<BLOB>>, 4
""2021-03-31 === [http-nio-8090-exec-6] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == <==      Total: 27
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-8] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == ==>  Preparing: select id,name_en,name_zh,value,type from site_setting
""2021-03-31 === [http-nio-8090-exec-8] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==    Columns: id, name_en, name_zh, value, type
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 1, webTitleSuffix, 网页标题后缀, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 2, blogName, 博客名称, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 3, footerImgTitle, 页脚图片标题, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 4, footerImgUrl, 页脚图片路径, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 5, copyright, Copyright, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 6, beian, ICP备案号, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 7, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 8, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 9, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 10, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 11, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 12, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 13, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 14, avatar, 头像路径, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 15, name, 昵称, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 16, rollText, 滚动个签, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 17, github, GitHub地址, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 18, qq, QQ链接, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 19, bilibili, bilibili链接, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 20, netease, 网易云音乐, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 21, email, email, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 22, favorite, 自定义, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 24, favorite, 自定义, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 25, reward, 赞赏码路径, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 26, commentAdminFlag, 博主评论标识, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 27, friendContent, 友链页面信息, <<BLOB>>, 4
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 28, friendCommentEnabled, 友链页面评论开关, <<BLOB>>, 4
""2021-03-31 === [http-nio-8090-exec-8] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == <==      Total: 27
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-10] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == ==>  Preparing: select id,name_en,name_zh,value,type from site_setting
""2021-03-31 === [http-nio-8090-exec-10] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==    Columns: id, name_en, name_zh, value, type
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 1, webTitleSuffix, 网页标题后缀, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 2, blogName, 博客名称, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 3, footerImgTitle, 页脚图片标题, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 4, footerImgUrl, 页脚图片路径, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 5, copyright, Copyright, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 6, beian, ICP备案号, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 7, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 8, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 9, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 10, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 11, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 12, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 13, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 14, avatar, 头像路径, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 15, name, 昵称, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 16, rollText, 滚动个签, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 17, github, GitHub地址, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 18, qq, QQ链接, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 19, bilibili, bilibili链接, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 20, netease, 网易云音乐, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 21, email, email, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 22, favorite, 自定义, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 24, favorite, 自定义, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 25, reward, 赞赏码路径, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 26, commentAdminFlag, 博主评论标识, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 27, friendContent, 友链页面信息, <<BLOB>>, 4
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 28, friendCommentEnabled, 友链页面评论开关, <<BLOB>>, 4
""2021-03-31 === [http-nio-8090-exec-10] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == <==      Total: 27
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == ==>  Preparing: select id,name_en,name_zh,value,type from site_setting
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==    Columns: id, name_en, name_zh, value, type
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 1, webTitleSuffix, 网页标题后缀, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 2, blogName, 博客名称, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 3, footerImgTitle, 页脚图片标题, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 4, footerImgUrl, 页脚图片路径, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 5, copyright, Copyright, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 6, beian, ICP备案号, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 7, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 8, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 9, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 10, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 11, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 12, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 13, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 14, avatar, 头像路径, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 15, name, 昵称, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 16, rollText, 滚动个签, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 17, github, GitHub地址, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 18, qq, QQ链接, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 19, bilibili, bilibili链接, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 20, netease, 网易云音乐, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 21, email, email, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 22, favorite, 自定义, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 24, favorite, 自定义, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 25, reward, 赞赏码路径, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 26, commentAdminFlag, 博主评论标识, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 27, friendContent, 友链页面信息, <<BLOB>>, 4
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 28, friendCommentEnabled, 友链页面评论开关, <<BLOB>>, 4
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == <==      Total: 27
""2021-03-31 === [http-nio-8090-exec-2] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-2] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == ==>  Preparing: select id,name_en,name_zh,value,type from site_setting
""2021-03-31 === [http-nio-8090-exec-2] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-2] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==    Columns: id, name_en, name_zh, value, type
""2021-03-31 === [http-nio-8090-exec-2] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 1, webTitleSuffix, 网页标题后缀, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-2] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 2, blogName, 博客名称, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-2] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 3, footerImgTitle, 页脚图片标题, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-2] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 4, footerImgUrl, 页脚图片路径, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-2] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 5, copyright, Copyright, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-2] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 6, beian, ICP备案号, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-2] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 7, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-2] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 8, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-2] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 9, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-2] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 10, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-2] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 11, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-2] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 12, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-2] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 13, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-2] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 14, avatar, 头像路径, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-2] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 15, name, 昵称, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-2] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 16, rollText, 滚动个签, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-2] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 17, github, GitHub地址, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-2] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 18, qq, QQ链接, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-2] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 19, bilibili, bilibili链接, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-2] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 20, netease, 网易云音乐, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-2] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 21, email, email, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-2] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 22, favorite, 自定义, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-2] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 24, favorite, 自定义, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-2] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 25, reward, 赞赏码路径, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-2] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 26, commentAdminFlag, 博主评论标识, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-2] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 27, friendContent, 友链页面信息, <<BLOB>>, 4
""2021-03-31 === [http-nio-8090-exec-2] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 28, friendCommentEnabled, 友链页面评论开关, <<BLOB>>, 4
""2021-03-31 === [http-nio-8090-exec-2] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == <==      Total: 27
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-6] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == ==>  Preparing: select id,name_en,name_zh,value,type from site_setting
""2021-03-31 === [http-nio-8090-exec-6] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==    Columns: id, name_en, name_zh, value, type
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 1, webTitleSuffix, 网页标题后缀, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 2, blogName, 博客名称, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 3, footerImgTitle, 页脚图片标题, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 4, footerImgUrl, 页脚图片路径, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 5, copyright, Copyright, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 6, beian, ICP备案号, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 7, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 8, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 9, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 10, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 11, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 12, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 13, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 14, avatar, 头像路径, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 15, name, 昵称, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 16, rollText, 滚动个签, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 17, github, GitHub地址, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 18, qq, QQ链接, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 19, bilibili, bilibili链接, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 20, netease, 网易云音乐, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 21, email, email, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 22, favorite, 自定义, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 24, favorite, 自定义, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 25, reward, 赞赏码路径, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 26, commentAdminFlag, 博主评论标识, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 27, friendContent, 友链页面信息, <<BLOB>>, 4
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 28, friendCommentEnabled, 友链页面评论开关, <<BLOB>>, 4
""2021-03-31 === [http-nio-8090-exec-6] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == <==      Total: 27
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-8] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == ==>  Preparing: select id,name_en,name_zh,value,type from site_setting
""2021-03-31 === [http-nio-8090-exec-8] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==    Columns: id, name_en, name_zh, value, type
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 1, webTitleSuffix, 网页标题后缀, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 2, blogName, 博客名称, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 3, footerImgTitle, 页脚图片标题, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 4, footerImgUrl, 页脚图片路径, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 5, copyright, Copyright, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 6, beian, ICP备案号, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 7, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 8, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 9, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 10, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 11, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 12, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 13, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 14, avatar, 头像路径, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 15, name, 昵称, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 16, rollText, 滚动个签, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 17, github, GitHub地址, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 18, qq, QQ链接, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 19, bilibili, bilibili链接, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 20, netease, 网易云音乐, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 21, email, email, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 22, favorite, 自定义, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 24, favorite, 自定义, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 25, reward, 赞赏码路径, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 26, commentAdminFlag, 博主评论标识, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 27, friendContent, 友链页面信息, <<BLOB>>, 4
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 28, friendCommentEnabled, 友链页面评论开关, <<BLOB>>, 4
""2021-03-31 === [http-nio-8090-exec-8] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == <==      Total: 27
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-10] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == ==>  Preparing: select id,name_en,name_zh,value,type from site_setting
""2021-03-31 === [http-nio-8090-exec-10] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==    Columns: id, name_en, name_zh, value, type
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 1, webTitleSuffix, 网页标题后缀, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 2, blogName, 博客名称, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 3, footerImgTitle, 页脚图片标题, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 4, footerImgUrl, 页脚图片路径, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 5, copyright, Copyright, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 6, beian, ICP备案号, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 7, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 8, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 9, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 10, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 11, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 12, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 13, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 14, avatar, 头像路径, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 15, name, 昵称, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 16, rollText, 滚动个签, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 17, github, GitHub地址, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 18, qq, QQ链接, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 19, bilibili, bilibili链接, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 20, netease, 网易云音乐, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 21, email, email, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 22, favorite, 自定义, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 24, favorite, 自定义, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 25, reward, 赞赏码路径, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 26, commentAdminFlag, 博主评论标识, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 27, friendContent, 友链页面信息, <<BLOB>>, 4
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 28, friendCommentEnabled, 友链页面评论开关, <<BLOB>>, 4
""2021-03-31 === [http-nio-8090-exec-10] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == <==      Total: 27
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == ==>  Preparing: select id,name_en,name_zh,value,type from site_setting
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==    Columns: id, name_en, name_zh, value, type
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 1, webTitleSuffix, 网页标题后缀, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 2, blogName, 博客名称, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 3, footerImgTitle, 页脚图片标题, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 4, footerImgUrl, 页脚图片路径, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 5, copyright, Copyright, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 6, beian, ICP备案号, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 7, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 8, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 9, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 10, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 11, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 12, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 13, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 14, avatar, 头像路径, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 15, name, 昵称, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 16, rollText, 滚动个签, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 17, github, GitHub地址, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 18, qq, QQ链接, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 19, bilibili, bilibili链接, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 20, netease, 网易云音乐, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 21, email, email, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 22, favorite, 自定义, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 24, favorite, 自定义, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 25, reward, 赞赏码路径, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 26, commentAdminFlag, 博主评论标识, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 27, friendContent, 友链页面信息, <<BLOB>>, 4
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 28, friendCommentEnabled, 友链页面评论开关, <<BLOB>>, 4
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == <==      Total: 27
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == ==>  Preparing: select id,name_en,name_zh,value,type from site_setting
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==    Columns: id, name_en, name_zh, value, type
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 1, webTitleSuffix, 网页标题后缀, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 2, blogName, 博客名称, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 3, footerImgTitle, 页脚图片标题, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 4, footerImgUrl, 页脚图片路径, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 5, copyright, Copyright, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 6, beian, ICP备案号, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 7, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 8, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 9, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 10, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 11, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 12, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 13, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 14, avatar, 头像路径, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 15, name, 昵称, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 16, rollText, 滚动个签, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 17, github, GitHub地址, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 18, qq, QQ链接, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 19, bilibili, bilibili链接, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 20, netease, 网易云音乐, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 21, email, email, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 22, favorite, 自定义, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 24, favorite, 自定义, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 25, reward, 赞赏码路径, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 26, commentAdminFlag, 博主评论标识, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 27, friendContent, 友链页面信息, <<BLOB>>, 4
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 28, friendCommentEnabled, 友链页面评论开关, <<BLOB>>, 4
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == <==      Total: 27
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-5] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == ==>  Preparing: select id,name_en,name_zh,value,type from site_setting
""2021-03-31 === [http-nio-8090-exec-5] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==    Columns: id, name_en, name_zh, value, type
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 1, webTitleSuffix, 网页标题后缀, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 2, blogName, 博客名称, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 3, footerImgTitle, 页脚图片标题, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 4, footerImgUrl, 页脚图片路径, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 5, copyright, Copyright, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 6, beian, ICP备案号, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 7, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 8, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 9, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 10, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 11, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 12, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 13, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 14, avatar, 头像路径, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 15, name, 昵称, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 16, rollText, 滚动个签, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 17, github, GitHub地址, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 18, qq, QQ链接, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 19, bilibili, bilibili链接, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 20, netease, 网易云音乐, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 21, email, email, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 22, favorite, 自定义, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 24, favorite, 自定义, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 25, reward, 赞赏码路径, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 26, commentAdminFlag, 博主评论标识, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 27, friendContent, 友链页面信息, <<BLOB>>, 4
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 28, friendCommentEnabled, 友链页面评论开关, <<BLOB>>, 4
""2021-03-31 === [http-nio-8090-exec-5] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == <==      Total: 27
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-7] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == ==>  Preparing: select id,name_en,name_zh,value,type from site_setting
""2021-03-31 === [http-nio-8090-exec-7] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==    Columns: id, name_en, name_zh, value, type
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 1, webTitleSuffix, 网页标题后缀, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 2, blogName, 博客名称, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 3, footerImgTitle, 页脚图片标题, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 4, footerImgUrl, 页脚图片路径, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 5, copyright, Copyright, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 6, beian, ICP备案号, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 7, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 8, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 9, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 10, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 11, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 12, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 13, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 14, avatar, 头像路径, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 15, name, 昵称, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 16, rollText, 滚动个签, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 17, github, GitHub地址, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 18, qq, QQ链接, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 19, bilibili, bilibili链接, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 20, netease, 网易云音乐, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 21, email, email, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 22, favorite, 自定义, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 24, favorite, 自定义, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 25, reward, 赞赏码路径, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 26, commentAdminFlag, 博主评论标识, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 27, friendContent, 友链页面信息, <<BLOB>>, 4
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 28, friendCommentEnabled, 友链页面评论开关, <<BLOB>>, 4
""2021-03-31 === [http-nio-8090-exec-7] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == <==      Total: 27
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == ==>  Preparing: select id,name_en,name_zh,value,type from site_setting
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==    Columns: id, name_en, name_zh, value, type
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 1, webTitleSuffix, 网页标题后缀, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 2, blogName, 博客名称, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 3, footerImgTitle, 页脚图片标题, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 4, footerImgUrl, 页脚图片路径, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 5, copyright, Copyright, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 6, beian, ICP备案号, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 7, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 8, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 9, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 10, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 11, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 12, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 13, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 14, avatar, 头像路径, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 15, name, 昵称, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 16, rollText, 滚动个签, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 17, github, GitHub地址, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 18, qq, QQ链接, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 19, bilibili, bilibili链接, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 20, netease, 网易云音乐, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 21, email, email, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 22, favorite, 自定义, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 24, favorite, 自定义, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 25, reward, 赞赏码路径, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 26, commentAdminFlag, 博主评论标识, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 27, friendContent, 友链页面信息, <<BLOB>>, 4
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 28, friendCommentEnabled, 友链页面评论开关, <<BLOB>>, 4
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == <==      Total: 27
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == ==>  Preparing: select id,name_en,name_zh,value,type from site_setting
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==    Columns: id, name_en, name_zh, value, type
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 1, webTitleSuffix, 网页标题后缀, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 2, blogName, 博客名称, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 3, footerImgTitle, 页脚图片标题, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 4, footerImgUrl, 页脚图片路径, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 5, copyright, Copyright, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 6, beian, ICP备案号, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 7, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 8, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 9, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 10, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 11, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 12, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 13, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 14, avatar, 头像路径, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 15, name, 昵称, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 16, rollText, 滚动个签, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 17, github, GitHub地址, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 18, qq, QQ链接, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 19, bilibili, bilibili链接, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 20, netease, 网易云音乐, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 21, email, email, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 22, favorite, 自定义, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 24, favorite, 自定义, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 25, reward, 赞赏码路径, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 26, commentAdminFlag, 博主评论标识, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 27, friendContent, 友链页面信息, <<BLOB>>, 4
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 28, friendCommentEnabled, 友链页面评论开关, <<BLOB>>, 4
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == <==      Total: 27
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-5] == INFO  == com.jonm.util.fastdfs.FastDFSClient == File Name: 3.pngFile Length:744941
""2021-03-31 === [http-nio-8090-exec-5] == INFO  == com.jonm.util.fastdfs.FastDFSClient == upload_file time used:4892 ms
""2021-03-31 === [http-nio-8090-exec-5] == INFO  == com.jonm.util.fastdfs.FastDFSClient == upload file successfully!!!group_name:group1, remoteFileName: M00/00/00/n0t7aWBkGDqAIfHiAAtd7UF4NSg059.png
""2021-03-31 === [http-nio-8090-exec-5] == INFO  == com.jonm.service.impl.UploadServiceImpl == path:    --------->159.75.123.105:8888/group1/M00/00/00/n0t7aWBkGDqAIfHiAAtd7UF4NSg059.png
""2021-03-31 === [task-1] == INFO  == n.b.p.useragent.AbstractUserAgentAnalyzerDirect == Initializing Analyzer data structures
""2021-03-31 === [task-1] == INFO  == n.b.p.useragent.AbstractUserAgentAnalyzerDirect == Built in 3861 msec : Hashmap 114881, Ranges map:2900
""2021-03-31 === [task-1] == DEBUG == com.jonm.dao.OperationLogMapper.saveOperationLog == ==>  Preparing: insert into operation_log (username, uri, method, param, description, ip, ip_source, os, browser, times, create_time, user_agent) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
""2021-03-31 === [task-1] == DEBUG == com.jonm.dao.OperationLogMapper.saveOperationLog == ==> Parameters: Admin(String), /admin/uploadimages(String), POST(String), {}(String), 图片上传(String), 192.168.189.1(String), 内网IP|内网IP(String), Windows 10(String), Chrome 88.0.4324.182(String), 23839(Integer), 2021-03-31 14:35:49.039(Timestamp), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.182 Safari/537.36(String)
""2021-03-31 === [task-1] == DEBUG == com.jonm.dao.OperationLogMapper.saveOperationLog == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-7] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == ==>  Preparing: select id,name_en,name_zh,value,type from site_setting
""2021-03-31 === [http-nio-8090-exec-7] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==    Columns: id, name_en, name_zh, value, type
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 1, webTitleSuffix, 网页标题后缀, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 2, blogName, 博客名称, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 3, footerImgTitle, 页脚图片标题, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 4, footerImgUrl, 页脚图片路径, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 5, copyright, Copyright, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 6, beian, ICP备案号, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 7, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 8, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 9, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 10, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 11, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 12, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 13, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 14, avatar, 头像路径, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 15, name, 昵称, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 16, rollText, 滚动个签, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 17, github, GitHub地址, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 18, qq, QQ链接, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 19, bilibili, bilibili链接, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 20, netease, 网易云音乐, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 21, email, email, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 22, favorite, 自定义, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 24, favorite, 自定义, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 25, reward, 赞赏码路径, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 26, commentAdminFlag, 博主评论标识, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 27, friendContent, 友链页面信息, <<BLOB>>, 4
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 28, friendCommentEnabled, 友链页面评论开关, <<BLOB>>, 4
""2021-03-31 === [http-nio-8090-exec-7] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == <==      Total: 27
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-8] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == ==>  Preparing: select id,name_en,name_zh,value,type from site_setting
""2021-03-31 === [http-nio-8090-exec-8] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==    Columns: id, name_en, name_zh, value, type
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 1, webTitleSuffix, 网页标题后缀, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 2, blogName, 博客名称, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 3, footerImgTitle, 页脚图片标题, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 4, footerImgUrl, 页脚图片路径, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 5, copyright, Copyright, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 6, beian, ICP备案号, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 7, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 8, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 9, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 10, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 11, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 12, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 13, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 14, avatar, 头像路径, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 15, name, 昵称, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 16, rollText, 滚动个签, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 17, github, GitHub地址, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 18, qq, QQ链接, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 19, bilibili, bilibili链接, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 20, netease, 网易云音乐, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 21, email, email, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 22, favorite, 自定义, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 24, favorite, 自定义, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 25, reward, 赞赏码路径, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 26, commentAdminFlag, 博主评论标识, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 27, friendContent, 友链页面信息, <<BLOB>>, 4
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 28, friendCommentEnabled, 友链页面评论开关, <<BLOB>>, 4
""2021-03-31 === [http-nio-8090-exec-8] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == <==      Total: 27
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-9] == INFO  == com.jonm.util.fastdfs.FastDFSClient == File Name: avatar.jpgFile Length:31156
""2021-03-31 === [http-nio-8090-exec-9] == INFO  == com.jonm.util.fastdfs.FastDFSClient == upload_file time used:137 ms
""2021-03-31 === [http-nio-8090-exec-9] == INFO  == com.jonm.util.fastdfs.FastDFSClient == upload file successfully!!!group_name:group1, remoteFileName: M00/00/00/n0t7aWBkGPGAFnNhAAB5tNKTQyM374.jpg
""2021-03-31 === [http-nio-8090-exec-9] == INFO  == com.jonm.service.impl.UploadServiceImpl == path:    --------->159.75.123.105:8888/group1/M00/00/00/n0t7aWBkGPGAFnNhAAB5tNKTQyM374.jpg
""2021-03-31 === [task-2] == DEBUG == com.jonm.dao.OperationLogMapper.saveOperationLog == ==>  Preparing: insert into operation_log (username, uri, method, param, description, ip, ip_source, os, browser, times, create_time, user_agent) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
""2021-03-31 === [task-2] == DEBUG == com.jonm.dao.OperationLogMapper.saveOperationLog == ==> Parameters: Admin(String), /admin/uploadimages(String), POST(String), {}(String), 图片上传(String), 192.168.189.1(String), 内网IP|内网IP(String), Windows 10(String), Chrome 88.0.4324.182(String), 7743(Integer), 2021-03-31 14:38:40.501(Timestamp), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.182 Safari/537.36(String)
""2021-03-31 === [task-2] == DEBUG == com.jonm.dao.OperationLogMapper.saveOperationLog == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==>  Preparing: update site_setting set value=? where id=?
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==> Parameters:  - Jonm's Blog(String), 1(Long)
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==>  Preparing: update site_setting set value=? where id=?
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==> Parameters: Jonm's Blog(String), 2(Long)
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==>  Preparing: update site_setting set value=? where id=?
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==> Parameters: 手机看本站(String), 3(Long)
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==>  Preparing: update site_setting set value=? where id=?
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==> Parameters: /img/qr.png(String), 4(Long)
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==>  Preparing: update site_setting set value=? where id=?
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==> Parameters: {"title":"Copyright © 2020 - 2021","siteName":"JONM'S BLOG"}(String), 5(Long)
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==>  Preparing: update site_setting set value=? where id=?
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==> Parameters: (String), 6(Long)
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==>  Preparing: update site_setting set value=? where id=?
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==> Parameters: /img/reward.jpg(String), 25(Long)
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==>  Preparing: update site_setting set value=? where id=?
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==> Parameters: 咕咕(String), 26(Long)
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==>  Preparing: update site_setting set value=? where id=?
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==> Parameters: {"title":"由 Spring Boot 强力驱动","url":"https://spring.io/projects/spring-boot/","subject":"Powered","value":"Spring Boot","color":"blue"}(String), 7(Long)
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==>  Preparing: update site_setting set value=? where id=?
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==> Parameters: {"title":"Vue.js 客户端渲染","url":"https://cn.vuejs.org/","subject":"SPA","value":"Vue.js","color":"brightgreen"}(String), 8(Long)
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==>  Preparing: update site_setting set value=? where id=?
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==> Parameters: {"title":"UI 框架 Semantic-UI","url":"https://semantic-ui.com/","subject":"UI","value":"Semantic-UI","color":"semantic-ui"}(String), 9(Long)
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==>  Preparing: update site_setting set value=? where id=?
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==> Parameters: {"title":"阿里云提供服务器及域名相关服务","url":"https://www.aliyun.com/","subject":"VPS & DNS","value":"Aliyun","color":"blueviolet"}(String), 10(Long)
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==>  Preparing: update site_setting set value=? where id=?
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==> Parameters: {"title":"jsDelivr 提供 CDN 加速服务","url":"https://www.jsdelivr.com/","subject":"CDN","value":"jsDelivr","color":"orange"}(String), 11(Long)
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==>  Preparing: update site_setting set value=? where id=?
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==> Parameters: {"title":"GitHub 提供图床","url":"https://github.com/","subject":"OSS","value":"GitHub","color":"github"}(String), 12(Long)
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==>  Preparing: update site_setting set value=? where id=?
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==> Parameters: {"title":"本站点采用 CC BY 4.0 国际许可协议进行许可","url":"https://creativecommons.org/licenses/by/4.0/","subject":"CC","value":"BY 4.0","color":"lightgray"}(String), 13(Long)
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==>  Preparing: update site_setting set value=? where id=?
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==> Parameters: 159.75.123.105:8888/group1/M00/00/00/n0t7aWBkGPGAFnNhAAB5tNKTQyM374.jpg(String), 14(Long)
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==>  Preparing: update site_setting set value=? where id=?
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==> Parameters: Jonm(String), 15(Long)
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==>  Preparing: update site_setting set value=? where id=?
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==> Parameters: "现在过的每一天，都是余生中最年轻的一天。“(String), 16(Long)
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==>  Preparing: update site_setting set value=? where id=?
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==> Parameters: https://github.com/Jonm(String), 17(Long)
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==>  Preparing: update site_setting set value=? where id=?
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==> Parameters: http://sighttp.qq.com/authd?IDKEY=(String), 18(Long)
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==>  Preparing: update site_setting set value=? where id=?
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==> Parameters: https://space.bilibili.com/(String), 19(Long)
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==>  Preparing: update site_setting set value=? where id=?
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==> Parameters: https://music.163.com/#/user/home?id=(String), 20(Long)
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==>  Preparing: update site_setting set value=? where id=?
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==> Parameters: mailto:1773304209@qq.com(String), 21(Long)
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==>  Preparing: update site_setting set value=? where id=?
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==> Parameters: {"title":"最喜欢的动漫 📺","content":"海贼王、火影忍者、家庭教师、进击的巨人、鬼灭之刃"}(String), 22(Long)
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==>  Preparing: update site_setting set value=? where id=?
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==> Parameters: {"title":"最喜欢的运动🎾","content":"网球，长跑"}(String), 24(Long)
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == <==    Updates: 1
""2021-03-31 === [task-3] == DEBUG == com.jonm.dao.ExceptionLogMapper.saveExceptionLog == ==>  Preparing: insert into exception_log (uri, method, param, description, error, ip, ip_source, os, browser, create_time, user_agent) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
""2021-03-31 === [task-3] == DEBUG == com.jonm.dao.ExceptionLogMapper.saveExceptionLog == ==> Parameters: /admin/siteSettings(String), POST(String), {"map":{"settings":[{"id":1,"nameEn":"webTitleSuffix","nameZh":"网页标题后缀","value":" - Jonm's Blog","type":1},{"id":2,"nameEn":"blogName","nameZh":"博客名称","value":"Jonm's Blog","type":1},{"id":3,"nameEn":"footerImgTitle","nameZh":"页脚图片标题","value":"手机看本站","type":1},{"id":4,"nameEn":"footerImgUrl","nameZh":"页脚图片路径","value":"/img/qr.png","type":1},{"id":5,"nameEn":"copyright","nameZh":"Copyright","value":"{\"title\":\"Copyright © 2020 - 2021\",\"siteName\":\"JONM'S BLOG\"}","type":1},{"id":6,"nameEn":"beian","nameZh":"ICP备案号","value":"","type":1},{"id":25,"nameEn":"reward","nameZh":"赞赏码路径","value":"/img/reward.jpg","type":1},{"id":26,"nameEn":"commentAdminFlag","nameZh":"博主评论标识","value":"咕咕","type":1},{"id":7,"nameEn":"badge","nameZh":"徽标","value":"{\"title\":\"由 Spring Boot 强力驱动\",\"url\":\"https://spring.io/projects/spring-boot/\",\"subject\":\"Powered\",\"value\":\"Spring Boot\",\"color\":\"blue\"}","type":2},{"id":8,"nameEn":"badge","nameZh":"徽标","value":"{\"title\":\"Vue.js 客户端渲染\",\"url\":\"https://cn.vuejs.org/\",\"subject\":\"SPA\",\"value\":\"Vue.js\",\"color\":\"brightgreen\"}","type":2},{"id":9,"nameEn":"badge","nameZh":"徽标","value":"{\"title\":\"UI 框架 Semantic-UI\",\"url\":\"https://semantic-ui.com/\",\"subject\":\"UI\",\"value\":\"Semantic-UI\",\"color\":\"semantic-ui\"}","type":2},{"id":10,"nameEn":"badge","nameZh":"徽标","value":"{\"title\":\"阿里云提供服务器及域名相关服务\",\"url\":\"https://www.aliyun.com/\",\"subject\":\"VPS & DNS\",\"value\":\"Aliyun\",\"color\":\"blueviolet\"}","type":2},{"id":11,"nameEn":"badge","nameZh":"徽标","value":"{\"title\":\"jsDelivr 提供 CDN 加速服务\",\"url\":\"https://www.jsdelivr.com/\",\"subject\":\"CDN\",\"value\":\"jsDelivr\",\"color\":\"orange\"}","type":2},{"id":12,"nameEn":"badge","nameZh":"徽标","value":"{\"title\":\"GitHub 提供图床\",\"url\":\"https://github.com/\",\"subject\":\"OSS\",\"value\":\"GitHub\",\"color\":\"github\"}","type":2},{"id":13,"nameEn":"badge","nameZh":"徽标","value":"{\"title\":\"本站点采用 CC BY 4.0 国际许可协议进行许可\",\"url\":\"https://c(String), 更新站点配置信息(String), org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out after 10 second(s)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:272)
	at org.springframework.data.redis.connection.lettuce.LettuceKeyCommands.convertLettuceAccessException(LettuceKeyCommands.java:810)
	at org.springframework.data.redis.connection.lettuce.LettuceKeyCommands.del(LettuceKeyCommands.java:129)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.del(DefaultedRedisConnection.java:83)
	at org.springframework.data.redis.core.RedisTemplate.lambda$delete$2(RedisTemplate.java:714)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:229)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:189)
	at org.springframework.data.redis.core.RedisTemplate.delete(RedisTemplate.java:714)
	at com.jonm.service.impl.RedisServiceImpl.deleteCacheByKey(RedisServiceImpl.java:116)
	at com.jonm.service.impl.RedisServiceImpl$$FastClassBySpringCGLIB$$f5f6c692.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.service.impl.RedisServiceImpl$$EnhancerBySpringCGLIB$$b8025e1b.deleteCacheByKey(<generated>)
	at com.jonm.service.impl.RedisServiceImpl$$FastClassBySpringCGLIB$$f5f6c692.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.service.impl.RedisServiceImpl$$EnhancerBySpringCGLIB$$c9f3205.deleteCacheByKey(<generated>)
	at com.jonm.service.impl.SiteSettingServiceImpl.deleteSiteInfoRedisCache(SiteSettingServiceImpl.java:163)
	at com.jonm.service.impl.SiteSettingServiceImpl.updateSiteSetting(SiteSettingServiceImpl.java:135)
	at com.jonm.service.impl.SiteSettingServiceImpl$$FastClassBySpringCGLIB$$57805c44.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.service.impl.SiteSettingServiceImpl$$EnhancerBySpringCGLIB$$1627b338.updateSiteSetting(<generated>)
	at com.jonm.service.impl.SiteSettingServiceImpl$$FastClassBySpringCGLIB$$57805c44.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.service.impl.SiteSettingServiceImpl$$EnhancerBySpringCGLIB$$abd2ef2e.updateSiteSetting(<generated>)
	at com.jonm.controller.admin.SiteSettingAdminController.updateAll(SiteSettingAdminController.java:51)
	at com.jonm.controller.admin.SiteSettingAdminController$$FastClassBySpringCGLIB$$a43239d6.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at com.jonm.aspect.OperationLogAspect.logAround(OperationLogAspect.java:53)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.controller.admin.SiteSettingAdminController$$EnhancerBySpringCGLIB$$d00cc223.updateAll(<generated>)
	at com.jonm.controller.admin.SiteSettingAdminController$$FastClassBySpringCGLIB$$a43239d6.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.controller.admin.SiteSettingAdminController$$EnhancerBySpringCGLIB$$15527a9.updateAll(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:893)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:807)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1061)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:961)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.jonm.config.JwtFilter.doFilter(JwtFilter.java:57)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:218)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out after 10 second(s)
	at io.lettuce.core.internal.ExceptionFactory.createTimeoutException(ExceptionFactory.java:53)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:246)
	at io.lettuce.core.FutureSyncInvocationHandler.handleInvocation(FutureSyncInvocationHandler.java:75)
	at io.lettuce.core.internal.AbstractInvocationHandler.invoke(AbstractInvocationHandler.java:80)
	at com.sun.proxy.$Proxy115.del(Unknown Source)
	at org.springframework.data.redis.connection.lettuce.LettuceKeyCommands.del(LettuceKeyCommands.java:127)
	... 182 more
(String), 192.168.189.1(String), 内网IP|内网IP(String), Windows 10(String), Chrome 88.0.4324.182(String), 2021-03-31 14:39:14.721(Timestamp), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.182 Safari/537.36(String)
""2021-03-31 === [http-nio-8090-exec-1] == ERROR == com.jonm.handler.ControllerExceptionHandler == Request URL : http://localhost:8090/admin/siteSettings, Exception :
"org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out after 10 second(s)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:272)
	at org.springframework.data.redis.connection.lettuce.LettuceKeyCommands.convertLettuceAccessException(LettuceKeyCommands.java:810)
	at org.springframework.data.redis.connection.lettuce.LettuceKeyCommands.del(LettuceKeyCommands.java:129)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.del(DefaultedRedisConnection.java:83)
	at org.springframework.data.redis.core.RedisTemplate.lambda$delete$2(RedisTemplate.java:714)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:229)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:189)
	at org.springframework.data.redis.core.RedisTemplate.delete(RedisTemplate.java:714)
	at com.jonm.service.impl.RedisServiceImpl.deleteCacheByKey(RedisServiceImpl.java:116)
	at com.jonm.service.impl.RedisServiceImpl$$FastClassBySpringCGLIB$$f5f6c692.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.service.impl.RedisServiceImpl$$EnhancerBySpringCGLIB$$b8025e1b.deleteCacheByKey(<generated>)
	at com.jonm.service.impl.RedisServiceImpl$$FastClassBySpringCGLIB$$f5f6c692.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.service.impl.RedisServiceImpl$$EnhancerBySpringCGLIB$$c9f3205.deleteCacheByKey(<generated>)
	at com.jonm.service.impl.SiteSettingServiceImpl.deleteSiteInfoRedisCache(SiteSettingServiceImpl.java:163)
	at com.jonm.service.impl.SiteSettingServiceImpl.updateSiteSetting(SiteSettingServiceImpl.java:135)
	at com.jonm.service.impl.SiteSettingServiceImpl$$FastClassBySpringCGLIB$$57805c44.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.service.impl.SiteSettingServiceImpl$$EnhancerBySpringCGLIB$$1627b338.updateSiteSetting(<generated>)
	at com.jonm.service.impl.SiteSettingServiceImpl$$FastClassBySpringCGLIB$$57805c44.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.service.impl.SiteSettingServiceImpl$$EnhancerBySpringCGLIB$$abd2ef2e.updateSiteSetting(<generated>)
	at com.jonm.controller.admin.SiteSettingAdminController.updateAll(SiteSettingAdminController.java:51)
	at com.jonm.controller.admin.SiteSettingAdminController$$FastClassBySpringCGLIB$$a43239d6.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at com.jonm.aspect.OperationLogAspect.logAround(OperationLogAspect.java:53)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.controller.admin.SiteSettingAdminController$$EnhancerBySpringCGLIB$$d00cc223.updateAll(<generated>)
	at com.jonm.controller.admin.SiteSettingAdminController$$FastClassBySpringCGLIB$$a43239d6.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.controller.admin.SiteSettingAdminController$$EnhancerBySpringCGLIB$$15527a9.updateAll(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:893)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:807)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1061)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:961)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.jonm.config.JwtFilter.doFilter(JwtFilter.java:57)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:218)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out after 10 second(s)
	at io.lettuce.core.internal.ExceptionFactory.createTimeoutException(ExceptionFactory.java:53)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:246)
	at io.lettuce.core.FutureSyncInvocationHandler.handleInvocation(FutureSyncInvocationHandler.java:75)
	at io.lettuce.core.internal.AbstractInvocationHandler.invoke(AbstractInvocationHandler.java:80)
	at com.sun.proxy.$Proxy115.del(Unknown Source)
	at org.springframework.data.redis.connection.lettuce.LettuceKeyCommands.del(LettuceKeyCommands.java:127)
	... 182 common frames omitted
"2021-03-31 === [task-3] == DEBUG == com.jonm.dao.ExceptionLogMapper.saveExceptionLog == <==    Updates: 1
""2021-03-31 === [lettuce-eventExecutorLoop-1-5] == INFO  == io.lettuce.core.protocol.ConnectionWatchdog == Reconnecting, last destination was /159.75.123.105:6379
""2021-03-31 === [lettuce-nioEventLoop-4-2] == INFO  == io.lettuce.core.protocol.ReconnectionHandler == Reconnected to 159.75.123.105:6379
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==>  Preparing: update site_setting set value=? where id=?
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==> Parameters:  - Jonm's Blog(String), 1(Long)
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==>  Preparing: update site_setting set value=? where id=?
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==> Parameters: Jonm's Blog(String), 2(Long)
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==>  Preparing: update site_setting set value=? where id=?
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==> Parameters: 手机看本站(String), 3(Long)
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==>  Preparing: update site_setting set value=? where id=?
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==> Parameters: /img/qr.png(String), 4(Long)
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==>  Preparing: update site_setting set value=? where id=?
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==> Parameters: {"title":"Copyright © 2020 - 2021","siteName":"JONM'S BLOG"}(String), 5(Long)
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==>  Preparing: update site_setting set value=? where id=?
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==> Parameters: (String), 6(Long)
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==>  Preparing: update site_setting set value=? where id=?
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==> Parameters: /img/reward.jpg(String), 25(Long)
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==>  Preparing: update site_setting set value=? where id=?
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==> Parameters: 咕咕(String), 26(Long)
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==>  Preparing: update site_setting set value=? where id=?
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==> Parameters: {"title":"由 Spring Boot 强力驱动","url":"https://spring.io/projects/spring-boot/","subject":"Powered","value":"Spring Boot","color":"blue"}(String), 7(Long)
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==>  Preparing: update site_setting set value=? where id=?
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==> Parameters: {"title":"Vue.js 客户端渲染","url":"https://cn.vuejs.org/","subject":"SPA","value":"Vue.js","color":"brightgreen"}(String), 8(Long)
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==>  Preparing: update site_setting set value=? where id=?
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==> Parameters: {"title":"UI 框架 Semantic-UI","url":"https://semantic-ui.com/","subject":"UI","value":"Semantic-UI","color":"semantic-ui"}(String), 9(Long)
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==>  Preparing: update site_setting set value=? where id=?
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==> Parameters: {"title":"阿里云提供服务器及域名相关服务","url":"https://www.aliyun.com/","subject":"VPS & DNS","value":"Aliyun","color":"blueviolet"}(String), 10(Long)
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==>  Preparing: update site_setting set value=? where id=?
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==> Parameters: {"title":"jsDelivr 提供 CDN 加速服务","url":"https://www.jsdelivr.com/","subject":"CDN","value":"jsDelivr","color":"orange"}(String), 11(Long)
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==>  Preparing: update site_setting set value=? where id=?
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==> Parameters: {"title":"GitHub 提供图床","url":"https://github.com/","subject":"OSS","value":"GitHub","color":"github"}(String), 12(Long)
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==>  Preparing: update site_setting set value=? where id=?
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==> Parameters: {"title":"本站点采用 CC BY 4.0 国际许可协议进行许可","url":"https://creativecommons.org/licenses/by/4.0/","subject":"CC","value":"BY 4.0","color":"lightgray"}(String), 13(Long)
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==>  Preparing: update site_setting set value=? where id=?
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==> Parameters: 159.75.123.105:8888/group1/M00/00/00/n0t7aWBkGPGAFnNhAAB5tNKTQyM374.jpg(String), 14(Long)
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==>  Preparing: update site_setting set value=? where id=?
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==> Parameters: Jonm(String), 15(Long)
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==>  Preparing: update site_setting set value=? where id=?
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==> Parameters: "现在过的每一天，都是余生中最年轻的一天。“(String), 16(Long)
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==>  Preparing: update site_setting set value=? where id=?
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==> Parameters: https://github.com/Jonm(String), 17(Long)
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==>  Preparing: update site_setting set value=? where id=?
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==> Parameters: http://sighttp.qq.com/authd?IDKEY=(String), 18(Long)
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==>  Preparing: update site_setting set value=? where id=?
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==> Parameters: https://space.bilibili.com/(String), 19(Long)
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==>  Preparing: update site_setting set value=? where id=?
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==> Parameters: https://music.163.com/#/user/home?id=(String), 20(Long)
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==>  Preparing: update site_setting set value=? where id=?
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==> Parameters: mailto:1773304209@qq.com(String), 21(Long)
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==>  Preparing: update site_setting set value=? where id=?
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==> Parameters: {"title":"最喜欢的动漫 📺","content":"海贼王、火影忍者、家庭教师、进击的巨人、鬼灭之刃"}(String), 22(Long)
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==>  Preparing: update site_setting set value=? where id=?
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==> Parameters: {"title":"最喜欢的运动🎾","content":"网球，长跑"}(String), 24(Long)
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == <==    Updates: 1
""2021-03-31 === [task-4] == DEBUG == com.jonm.dao.OperationLogMapper.saveOperationLog == ==>  Preparing: insert into operation_log (username, uri, method, param, description, ip, ip_source, os, browser, times, create_time, user_agent) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
""2021-03-31 === [task-4] == DEBUG == com.jonm.dao.OperationLogMapper.saveOperationLog == ==> Parameters: Admin(String), /admin/siteSettings(String), POST(String), {"map":{"settings":[{"id":1,"nameEn":"webTitleSuffix","nameZh":"网页标题后缀","value":" - Jonm's Blog","type":1},{"id":2,"nameEn":"blogName","nameZh":"博客名称","value":"Jonm's Blog","type":1},{"id":3,"nameEn":"footerImgTitle","nameZh":"页脚图片标题","value":"手机看本站","type":1},{"id":4,"nameEn":"footerImgUrl","nameZh":"页脚图片路径","value":"/img/qr.png","type":1},{"id":5,"nameEn":"copyright","nameZh":"Copyright","value":"{\"title\":\"Copyright © 2020 - 2021\",\"siteName\":\"JONM'S BLOG\"}","type":1},{"id":6,"nameEn":"beian","nameZh":"ICP备案号","value":"","type":1},{"id":25,"nameEn":"reward","nameZh":"赞赏码路径","value":"/img/reward.jpg","type":1},{"id":26,"nameEn":"commentAdminFlag","nameZh":"博主评论标识","value":"咕咕","type":1},{"id":7,"nameEn":"badge","nameZh":"徽标","value":"{\"title\":\"由 Spring Boot 强力驱动\",\"url\":\"https://spring.io/projects/spring-boot/\",\"subject\":\"Powered\",\"value\":\"Spring Boot\",\"color\":\"blue\"}","type":2},{"id":8,"nameEn":"badge","nameZh":"徽标","value":"{\"title\":\"Vue.js 客户端渲染\",\"url\":\"https://cn.vuejs.org/\",\"subject\":\"SPA\",\"value\":\"Vue.js\",\"color\":\"brightgreen\"}","type":2},{"id":9,"nameEn":"badge","nameZh":"徽标","value":"{\"title\":\"UI 框架 Semantic-UI\",\"url\":\"https://semantic-ui.com/\",\"subject\":\"UI\",\"value\":\"Semantic-UI\",\"color\":\"semantic-ui\"}","type":2},{"id":10,"nameEn":"badge","nameZh":"徽标","value":"{\"title\":\"阿里云提供服务器及域名相关服务\",\"url\":\"https://www.aliyun.com/\",\"subject\":\"VPS & DNS\",\"value\":\"Aliyun\",\"color\":\"blueviolet\"}","type":2},{"id":11,"nameEn":"badge","nameZh":"徽标","value":"{\"title\":\"jsDelivr 提供 CDN 加速服务\",\"url\":\"https://www.jsdelivr.com/\",\"subject\":\"CDN\",\"value\":\"jsDelivr\",\"color\":\"orange\"}","type":2},{"id":12,"nameEn":"badge","nameZh":"徽标","value":"{\"title\":\"GitHub 提供图床\",\"url\":\"https://github.com/\",\"subject\":\"OSS\",\"value\":\"GitHub\",\"color\":\"github\"}","type":2},{"id":13,"nameEn":"badge","nameZh":"徽标","value":"{\"title\":\"本站点采用 CC BY 4.0 国际许可协议进行许可\",\"url\":\"https://c(String), 更新站点配置信息(String), 192.168.189.1(String), 内网IP|内网IP(String), Windows 10(String), Chrome 88.0.4324.182(String), 1138(Integer), 2021-03-31 14:39:43.836(Timestamp), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.182 Safari/537.36(String)
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [task-4] == DEBUG == com.jonm.dao.OperationLogMapper.saveOperationLog == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == ==>  Preparing: select id,name_en,name_zh,value,type from site_setting
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==    Columns: id, name_en, name_zh, value, type
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 1, webTitleSuffix, 网页标题后缀, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 2, blogName, 博客名称, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 3, footerImgTitle, 页脚图片标题, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 4, footerImgUrl, 页脚图片路径, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 5, copyright, Copyright, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 6, beian, ICP备案号, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 7, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 8, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 9, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 10, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 11, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 12, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 13, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 14, avatar, 头像路径, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 15, name, 昵称, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 16, rollText, 滚动个签, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 17, github, GitHub地址, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 18, qq, QQ链接, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 19, bilibili, bilibili链接, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 20, netease, 网易云音乐, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 21, email, email, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 22, favorite, 自定义, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 24, favorite, 自定义, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 25, reward, 赞赏码路径, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 26, commentAdminFlag, 博主评论标识, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 27, friendContent, 友链页面信息, <<BLOB>>, 4
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 28, friendCommentEnabled, 友链页面评论开关, <<BLOB>>, 4
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == <==      Total: 27
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-6] == DEBUG == com.jonm.dao.CategoryMapper.getCategoryList == ==>  Preparing: select id, category_name from category order by id desc
""2021-03-31 === [http-nio-8090-exec-6] == DEBUG == com.jonm.dao.CategoryMapper.getCategoryList == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.CategoryMapper.getCategoryList == <==    Columns: id, category_name
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.CategoryMapper.getCategoryList == <==        Row: 2, 个人项目
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.CategoryMapper.getCategoryList == <==        Row: 1, 项目
""2021-03-31 === [http-nio-8090-exec-6] == DEBUG == com.jonm.dao.CategoryMapper.getCategoryList == <==      Total: 2
""2021-03-31 === [http-nio-8090-exec-6] == DEBUG == com.jonm.dao.TagMapper.getTagList == ==>  Preparing: select id, tag_name, color from tag order by id desc
""2021-03-31 === [http-nio-8090-exec-6] == DEBUG == com.jonm.dao.TagMapper.getTagList == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.TagMapper.getTagList == <==    Columns: id, tag_name, color
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.TagMapper.getTagList == <==        Row: 2, Mysql, null
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.TagMapper.getTagList == <==        Row: 1, Java, null
""2021-03-31 === [http-nio-8090-exec-6] == DEBUG == com.jonm.dao.TagMapper.getTagList == <==      Total: 2
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-7] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == ==>  Preparing: select id,name_en,name_zh,value,type from site_setting
""2021-03-31 === [http-nio-8090-exec-7] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==    Columns: id, name_en, name_zh, value, type
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 1, webTitleSuffix, 网页标题后缀, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 2, blogName, 博客名称, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 3, footerImgTitle, 页脚图片标题, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 4, footerImgUrl, 页脚图片路径, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 5, copyright, Copyright, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 6, beian, ICP备案号, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 7, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 8, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 9, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 10, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 11, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 12, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 13, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 14, avatar, 头像路径, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 15, name, 昵称, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 16, rollText, 滚动个签, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 17, github, GitHub地址, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 18, qq, QQ链接, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 19, bilibili, bilibili链接, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 20, netease, 网易云音乐, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 21, email, email, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 22, favorite, 自定义, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 24, favorite, 自定义, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 25, reward, 赞赏码路径, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 26, commentAdminFlag, 博主评论标识, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 27, friendContent, 友链页面信息, <<BLOB>>, 4
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 28, friendCommentEnabled, 友链页面评论开关, <<BLOB>>, 4
""2021-03-31 === [http-nio-8090-exec-7] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == <==      Total: 27
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-8] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == ==>  Preparing: select id,name_en,name_zh,value,type from site_setting
""2021-03-31 === [http-nio-8090-exec-8] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==    Columns: id, name_en, name_zh, value, type
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 1, webTitleSuffix, 网页标题后缀, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 2, blogName, 博客名称, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 3, footerImgTitle, 页脚图片标题, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 4, footerImgUrl, 页脚图片路径, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 5, copyright, Copyright, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 6, beian, ICP备案号, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 7, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 8, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 9, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 10, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 11, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 12, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 13, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 14, avatar, 头像路径, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 15, name, 昵称, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 16, rollText, 滚动个签, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 17, github, GitHub地址, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 18, qq, QQ链接, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 19, bilibili, bilibili链接, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 20, netease, 网易云音乐, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 21, email, email, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 22, favorite, 自定义, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 24, favorite, 自定义, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 25, reward, 赞赏码路径, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 26, commentAdminFlag, 博主评论标识, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 27, friendContent, 友链页面信息, <<BLOB>>, 4
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 28, friendCommentEnabled, 友链页面评论开关, <<BLOB>>, 4
""2021-03-31 === [http-nio-8090-exec-8] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == <==      Total: 27
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == ==>  Preparing: select id,name_en,name_zh,value,type from site_setting
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==    Columns: id, name_en, name_zh, value, type
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 1, webTitleSuffix, 网页标题后缀, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 2, blogName, 博客名称, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 3, footerImgTitle, 页脚图片标题, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 4, footerImgUrl, 页脚图片路径, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 5, copyright, Copyright, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 6, beian, ICP备案号, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 7, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 8, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 9, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 10, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 11, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 12, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 13, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 14, avatar, 头像路径, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 15, name, 昵称, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 16, rollText, 滚动个签, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 17, github, GitHub地址, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 18, qq, QQ链接, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 19, bilibili, bilibili链接, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 20, netease, 网易云音乐, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 21, email, email, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 22, favorite, 自定义, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 24, favorite, 自定义, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 25, reward, 赞赏码路径, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 26, commentAdminFlag, 博主评论标识, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 27, friendContent, 友链页面信息, <<BLOB>>, 4
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 28, friendCommentEnabled, 友链页面评论开关, <<BLOB>>, 4
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == <==      Total: 27
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == ==>  Preparing: select id,name_en,name_zh,value,type from site_setting
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==    Columns: id, name_en, name_zh, value, type
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 1, webTitleSuffix, 网页标题后缀, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 2, blogName, 博客名称, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 3, footerImgTitle, 页脚图片标题, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 4, footerImgUrl, 页脚图片路径, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 5, copyright, Copyright, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 6, beian, ICP备案号, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 7, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 8, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 9, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 10, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 11, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 12, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 13, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 14, avatar, 头像路径, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 15, name, 昵称, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 16, rollText, 滚动个签, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 17, github, GitHub地址, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 18, qq, QQ链接, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 19, bilibili, bilibili链接, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 20, netease, 网易云音乐, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 21, email, email, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 22, favorite, 自定义, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 24, favorite, 自定义, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 25, reward, 赞赏码路径, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 26, commentAdminFlag, 博主评论标识, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 27, friendContent, 友链页面信息, <<BLOB>>, 4
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 28, friendCommentEnabled, 友链页面评论开关, <<BLOB>>, 4
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == <==      Total: 27
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == ==>  Preparing: select id,name_en,name_zh,value,type from site_setting
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==    Columns: id, name_en, name_zh, value, type
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 1, webTitleSuffix, 网页标题后缀, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 2, blogName, 博客名称, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 3, footerImgTitle, 页脚图片标题, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 4, footerImgUrl, 页脚图片路径, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 5, copyright, Copyright, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 6, beian, ICP备案号, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 7, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 8, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 9, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 10, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 11, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 12, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 13, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 14, avatar, 头像路径, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 15, name, 昵称, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 16, rollText, 滚动个签, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 17, github, GitHub地址, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 18, qq, QQ链接, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 19, bilibili, bilibili链接, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 20, netease, 网易云音乐, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 21, email, email, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 22, favorite, 自定义, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 24, favorite, 自定义, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 25, reward, 赞赏码路径, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 26, commentAdminFlag, 博主评论标识, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 27, friendContent, 友链页面信息, <<BLOB>>, 4
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 28, friendCommentEnabled, 友链页面评论开关, <<BLOB>>, 4
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == <==      Total: 27
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-2] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-2] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == ==>  Preparing: select id,name_en,name_zh,value,type from site_setting
""2021-03-31 === [http-nio-8090-exec-2] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-2] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==    Columns: id, name_en, name_zh, value, type
""2021-03-31 === [http-nio-8090-exec-2] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 1, webTitleSuffix, 网页标题后缀, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-2] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 2, blogName, 博客名称, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-2] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 3, footerImgTitle, 页脚图片标题, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-2] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 4, footerImgUrl, 页脚图片路径, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-2] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 5, copyright, Copyright, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-2] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 6, beian, ICP备案号, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-2] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 7, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-2] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 8, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-2] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 9, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-2] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 10, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-2] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 11, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-2] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 12, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-2] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 13, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-2] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 14, avatar, 头像路径, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-2] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 15, name, 昵称, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-2] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 16, rollText, 滚动个签, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-2] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 17, github, GitHub地址, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-2] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 18, qq, QQ链接, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-2] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 19, bilibili, bilibili链接, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-2] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 20, netease, 网易云音乐, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-2] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 21, email, email, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-2] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 22, favorite, 自定义, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-2] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 24, favorite, 自定义, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-2] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 25, reward, 赞赏码路径, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-2] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 26, commentAdminFlag, 博主评论标识, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-2] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 27, friendContent, 友链页面信息, <<BLOB>>, 4
""2021-03-31 === [http-nio-8090-exec-2] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 28, friendCommentEnabled, 友链页面评论开关, <<BLOB>>, 4
""2021-03-31 === [http-nio-8090-exec-2] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == <==      Total: 27
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-5] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == ==>  Preparing: select id,name_en,name_zh,value,type from site_setting
""2021-03-31 === [http-nio-8090-exec-5] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==    Columns: id, name_en, name_zh, value, type
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 1, webTitleSuffix, 网页标题后缀, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 2, blogName, 博客名称, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 3, footerImgTitle, 页脚图片标题, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 4, footerImgUrl, 页脚图片路径, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 5, copyright, Copyright, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 6, beian, ICP备案号, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 7, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 8, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 9, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 10, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 11, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 12, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 13, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 14, avatar, 头像路径, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 15, name, 昵称, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 16, rollText, 滚动个签, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 17, github, GitHub地址, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 18, qq, QQ链接, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 19, bilibili, bilibili链接, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 20, netease, 网易云音乐, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 21, email, email, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 22, favorite, 自定义, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 24, favorite, 自定义, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 25, reward, 赞赏码路径, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 26, commentAdminFlag, 博主评论标识, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 27, friendContent, 友链页面信息, <<BLOB>>, 4
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 28, friendCommentEnabled, 友链页面评论开关, <<BLOB>>, 4
""2021-03-31 === [http-nio-8090-exec-5] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == <==      Total: 27
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-7] == INFO  == com.jonm.util.fastdfs.FastDFSClient == File Name: paper-plane.pngFile Length:14659
""2021-03-31 === [http-nio-8090-exec-7] == INFO  == com.jonm.util.fastdfs.FastDFSClient == upload_file time used:127 ms
""2021-03-31 === [http-nio-8090-exec-7] == INFO  == com.jonm.util.fastdfs.FastDFSClient == upload file successfully!!!group_name:group1, remoteFileName: M00/00/00/n0t7aWBkG-mAHg5yAAA5Qy_TrhE825.png
""2021-03-31 === [http-nio-8090-exec-7] == INFO  == com.jonm.service.impl.UploadServiceImpl == path:    --------->159.75.123.105:8888/group1/M00/00/00/n0t7aWBkG-mAHg5yAAA5Qy_TrhE825.png
""2021-03-31 === [task-5] == DEBUG == com.jonm.dao.OperationLogMapper.saveOperationLog == ==>  Preparing: insert into operation_log (username, uri, method, param, description, ip, ip_source, os, browser, times, create_time, user_agent) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
""2021-03-31 === [task-5] == DEBUG == com.jonm.dao.OperationLogMapper.saveOperationLog == ==> Parameters: Admin(String), /admin/uploadimages(String), POST(String), {}(String), 图片上传(String), 192.168.189.1(String), 内网IP|内网IP(String), Windows 10(String), Chrome 88.0.4324.182(String), 129(Integer), 2021-03-31 14:51:20.753(Timestamp), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.182 Safari/537.36(String)
""2021-03-31 === [task-5] == DEBUG == com.jonm.dao.OperationLogMapper.saveOperationLog == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-4] == ERROR == com.jonm.handler.ControllerExceptionHandler == Request URL : http://localhost:8090/blogs, Exception :
"org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out after 10 second(s)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:272)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.convertLettuceAccessException(LettuceHashCommands.java:472)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.hExists(LettuceHashCommands.java:148)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.hExists(DefaultedRedisConnection.java:1131)
	at org.springframework.data.redis.core.DefaultHashOperations.lambda$hasKey$1(DefaultHashOperations.java:67)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:229)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:189)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:96)
	at org.springframework.data.redis.core.DefaultHashOperations.hasKey(DefaultHashOperations.java:67)
	at com.jonm.service.impl.RedisServiceImpl.getBlogInfoPageResultByHash(RedisServiceImpl.java:26)
	at com.jonm.service.impl.RedisServiceImpl$$FastClassBySpringCGLIB$$f5f6c692.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.service.impl.RedisServiceImpl$$EnhancerBySpringCGLIB$$b8025e1b.getBlogInfoPageResultByHash(<generated>)
	at com.jonm.service.impl.RedisServiceImpl$$FastClassBySpringCGLIB$$f5f6c692.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.service.impl.RedisServiceImpl$$EnhancerBySpringCGLIB$$c9f3205.getBlogInfoPageResultByHash(<generated>)
	at com.jonm.service.impl.BlogServiceImpl.getBlogInfoListByIsPublished(BlogServiceImpl.java:122)
	at com.jonm.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$9bf091db.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$ed7f0a5d.getBlogInfoListByIsPublished(<generated>)
	at com.jonm.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$9bf091db.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$40e05ed.getBlogInfoListByIsPublished(<generated>)
	at com.jonm.controller.BlogController.blogs(BlogController.java:46)
	at com.jonm.controller.BlogController$$FastClassBySpringCGLIB$$70670bf3.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at com.jonm.aspect.VisitLogAspect.logAround(VisitLogAspect.java:65)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.controller.BlogController$$EnhancerBySpringCGLIB$$43dcf29a.blogs(<generated>)
	at com.jonm.controller.BlogController$$FastClassBySpringCGLIB$$70670bf3.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.controller.BlogController$$EnhancerBySpringCGLIB$$87ec357e.blogs(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:893)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:807)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1061)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:961)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.jonm.config.JwtFilter.doFilter(JwtFilter.java:35)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:218)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out after 10 second(s)
	at io.lettuce.core.internal.ExceptionFactory.createTimeoutException(ExceptionFactory.java:53)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:246)
	at io.lettuce.core.FutureSyncInvocationHandler.handleInvocation(FutureSyncInvocationHandler.java:75)
	at io.lettuce.core.internal.AbstractInvocationHandler.invoke(AbstractInvocationHandler.java:80)
	at com.sun.proxy.$Proxy115.hexists(Unknown Source)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.hExists(LettuceHashCommands.java:146)
	... 182 common frames omitted
"2021-03-31 === [task-6] == DEBUG == com.jonm.dao.ExceptionLogMapper.saveExceptionLog == ==>  Preparing: insert into exception_log (uri, method, param, description, error, ip, ip_source, os, browser, create_time, user_agent) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
""2021-03-31 === [task-6] == DEBUG == com.jonm.dao.ExceptionLogMapper.saveExceptionLog == ==> Parameters: /blogs(String), GET(String), {"pageNum":1}(String), 访问页面(String), org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out after 10 second(s)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:272)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.convertLettuceAccessException(LettuceHashCommands.java:472)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.hExists(LettuceHashCommands.java:148)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.hExists(DefaultedRedisConnection.java:1131)
	at org.springframework.data.redis.core.DefaultHashOperations.lambda$hasKey$1(DefaultHashOperations.java:67)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:229)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:189)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:96)
	at org.springframework.data.redis.core.DefaultHashOperations.hasKey(DefaultHashOperations.java:67)
	at com.jonm.service.impl.RedisServiceImpl.getBlogInfoPageResultByHash(RedisServiceImpl.java:26)
	at com.jonm.service.impl.RedisServiceImpl$$FastClassBySpringCGLIB$$f5f6c692.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.service.impl.RedisServiceImpl$$EnhancerBySpringCGLIB$$b8025e1b.getBlogInfoPageResultByHash(<generated>)
	at com.jonm.service.impl.RedisServiceImpl$$FastClassBySpringCGLIB$$f5f6c692.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.service.impl.RedisServiceImpl$$EnhancerBySpringCGLIB$$c9f3205.getBlogInfoPageResultByHash(<generated>)
	at com.jonm.service.impl.BlogServiceImpl.getBlogInfoListByIsPublished(BlogServiceImpl.java:122)
	at com.jonm.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$9bf091db.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$ed7f0a5d.getBlogInfoListByIsPublished(<generated>)
	at com.jonm.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$9bf091db.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$40e05ed.getBlogInfoListByIsPublished(<generated>)
	at com.jonm.controller.BlogController.blogs(BlogController.java:46)
	at com.jonm.controller.BlogController$$FastClassBySpringCGLIB$$70670bf3.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at com.jonm.aspect.VisitLogAspect.logAround(VisitLogAspect.java:65)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.controller.BlogController$$EnhancerBySpringCGLIB$$43dcf29a.blogs(<generated>)
	at com.jonm.controller.BlogController$$FastClassBySpringCGLIB$$70670bf3.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.controller.BlogController$$EnhancerBySpringCGLIB$$87ec357e.blogs(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:893)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:807)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1061)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:961)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.jonm.config.JwtFilter.doFilter(JwtFilter.java:35)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:218)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out after 10 second(s)
	at io.lettuce.core.internal.ExceptionFactory.createTimeoutException(ExceptionFactory.java:53)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:246)
	at io.lettuce.core.FutureSyncInvocationHandler.handleInvocation(FutureSyncInvocationHandler.java:75)
	at io.lettuce.core.internal.AbstractInvocationHandler.invoke(AbstractInvocationHandler.java:80)
	at com.sun.proxy.$Proxy115.hexists(Unknown Source)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.hExists(LettuceHashCommands.java:146)
	... 182 more
(String), 192.168.189.1(String), 内网IP|内网IP(String), Windows 10(String), Chrome 88.0.4324.182(String), 2021-03-31 14:51:44.297(Timestamp), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.182 Safari/537.36(String)
""2021-03-31 === [task-6] == DEBUG == com.jonm.dao.ExceptionLogMapper.saveExceptionLog == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-1] == ERROR == com.jonm.handler.ControllerExceptionHandler == Request URL : http://localhost:8090/site, Exception :
"org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out after 10 second(s)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:272)
	at org.springframework.data.redis.connection.lettuce.LettuceStringCommands.convertLettuceAccessException(LettuceStringCommands.java:800)
	at org.springframework.data.redis.connection.lettuce.LettuceStringCommands.get(LettuceStringCommands.java:70)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.get(DefaultedRedisConnection.java:267)
	at org.springframework.data.redis.core.DefaultValueOperations$1.inRedis(DefaultValueOperations.java:57)
	at org.springframework.data.redis.core.AbstractOperations$ValueDeserializingRedisCallback.doInRedis(AbstractOperations.java:60)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:229)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:189)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:96)
	at org.springframework.data.redis.core.DefaultValueOperations.get(DefaultValueOperations.java:53)
	at com.jonm.service.impl.RedisServiceImpl.getMapByValue(RedisServiceImpl.java:73)
	at com.jonm.service.impl.RedisServiceImpl$$FastClassBySpringCGLIB$$f5f6c692.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.service.impl.RedisServiceImpl$$EnhancerBySpringCGLIB$$b8025e1b.getMapByValue(<generated>)
	at com.jonm.service.impl.RedisServiceImpl$$FastClassBySpringCGLIB$$f5f6c692.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.service.impl.RedisServiceImpl$$EnhancerBySpringCGLIB$$c9f3205.getMapByValue(<generated>)
	at com.jonm.service.impl.SiteSettingServiceImpl.getSiteInfo(SiteSettingServiceImpl.java:65)
	at com.jonm.service.impl.SiteSettingServiceImpl$$FastClassBySpringCGLIB$$57805c44.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.service.impl.SiteSettingServiceImpl$$EnhancerBySpringCGLIB$$1627b338.getSiteInfo(<generated>)
	at com.jonm.service.impl.SiteSettingServiceImpl$$FastClassBySpringCGLIB$$57805c44.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.service.impl.SiteSettingServiceImpl$$EnhancerBySpringCGLIB$$abd2ef2e.getSiteInfo(<generated>)
	at com.jonm.controller.IndexController.site(IndexController.java:43)
	at com.jonm.controller.IndexController$$FastClassBySpringCGLIB$$f0fdad99.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.controller.IndexController$$EnhancerBySpringCGLIB$$c60b5f1a.site(<generated>)
	at com.jonm.controller.IndexController$$FastClassBySpringCGLIB$$f0fdad99.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.controller.IndexController$$EnhancerBySpringCGLIB$$4e74cb4.site(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:893)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:807)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1061)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:961)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.jonm.config.JwtFilter.doFilter(JwtFilter.java:35)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:218)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out after 10 second(s)
	at io.lettuce.core.internal.ExceptionFactory.createTimeoutException(ExceptionFactory.java:53)
	at io.lettuce.core.protocol.CommandExpiryWriter.lambda$potentiallyExpire$0(CommandExpiryWriter.java:172)
	at io.netty.util.concurrent.PromiseTask.runTask(PromiseTask.java:98)
	at io.netty.util.concurrent.ScheduledFutureTask.run(ScheduledFutureTask.java:170)
	at io.netty.util.concurrent.DefaultEventExecutor.run(DefaultEventExecutor.java:66)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
"2021-03-31 === [task-7] == DEBUG == com.jonm.dao.ExceptionLogMapper.saveExceptionLog == ==>  Preparing: insert into exception_log (uri, method, param, description, error, ip, ip_source, os, browser, create_time, user_agent) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
""2021-03-31 === [task-7] == DEBUG == com.jonm.dao.ExceptionLogMapper.saveExceptionLog == ==> Parameters: /site(String), GET(String), {}(String), (String), org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out after 10 second(s)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:272)
	at org.springframework.data.redis.connection.lettuce.LettuceStringCommands.convertLettuceAccessException(LettuceStringCommands.java:800)
	at org.springframework.data.redis.connection.lettuce.LettuceStringCommands.get(LettuceStringCommands.java:70)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.get(DefaultedRedisConnection.java:267)
	at org.springframework.data.redis.core.DefaultValueOperations$1.inRedis(DefaultValueOperations.java:57)
	at org.springframework.data.redis.core.AbstractOperations$ValueDeserializingRedisCallback.doInRedis(AbstractOperations.java:60)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:229)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:189)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:96)
	at org.springframework.data.redis.core.DefaultValueOperations.get(DefaultValueOperations.java:53)
	at com.jonm.service.impl.RedisServiceImpl.getMapByValue(RedisServiceImpl.java:73)
	at com.jonm.service.impl.RedisServiceImpl$$FastClassBySpringCGLIB$$f5f6c692.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.service.impl.RedisServiceImpl$$EnhancerBySpringCGLIB$$b8025e1b.getMapByValue(<generated>)
	at com.jonm.service.impl.RedisServiceImpl$$FastClassBySpringCGLIB$$f5f6c692.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.service.impl.RedisServiceImpl$$EnhancerBySpringCGLIB$$c9f3205.getMapByValue(<generated>)
	at com.jonm.service.impl.SiteSettingServiceImpl.getSiteInfo(SiteSettingServiceImpl.java:65)
	at com.jonm.service.impl.SiteSettingServiceImpl$$FastClassBySpringCGLIB$$57805c44.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.service.impl.SiteSettingServiceImpl$$EnhancerBySpringCGLIB$$1627b338.getSiteInfo(<generated>)
	at com.jonm.service.impl.SiteSettingServiceImpl$$FastClassBySpringCGLIB$$57805c44.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.service.impl.SiteSettingServiceImpl$$EnhancerBySpringCGLIB$$abd2ef2e.getSiteInfo(<generated>)
	at com.jonm.controller.IndexController.site(IndexController.java:43)
	at com.jonm.controller.IndexController$$FastClassBySpringCGLIB$$f0fdad99.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.controller.IndexController$$EnhancerBySpringCGLIB$$c60b5f1a.site(<generated>)
	at com.jonm.controller.IndexController$$FastClassBySpringCGLIB$$f0fdad99.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.controller.IndexController$$EnhancerBySpringCGLIB$$4e74cb4.site(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:893)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:807)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1061)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:961)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.jonm.config.JwtFilter.doFilter(JwtFilter.java:35)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:218)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out after 10 second(s)
	at io.lettuce.core.internal.ExceptionFactory.createTimeoutException(ExceptionFactory.java:53)
	at io.lettuce.core.protocol.CommandExpiryWriter.lambda$potentiallyExpire$0(CommandExpiryWriter.java:172)
	at io.netty.util.concurrent.PromiseTask.runTask(PromiseTask.java:98)
	at io.netty.util.concurrent.ScheduledFutureTask.run(ScheduledFutureTask.java:170)
	at io.netty.util.concurrent.DefaultEventExecutor.run(DefaultEventExecutor.java:66)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 more
(String), 192.168.189.1(String), 内网IP|内网IP(String), Windows 10(String), Chrome 88.0.4324.182(String), 2021-03-31 14:51:44.456(Timestamp), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.182 Safari/537.36(String)
""2021-03-31 === [task-7] == DEBUG == com.jonm.dao.ExceptionLogMapper.saveExceptionLog == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-2] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [lettuce-eventExecutorLoop-1-3] == INFO  == io.lettuce.core.protocol.ConnectionWatchdog == Reconnecting, last destination was /159.75.123.105:6379
""2021-03-31 === [lettuce-nioEventLoop-4-3] == INFO  == io.lettuce.core.protocol.ReconnectionHandler == Reconnected to 159.75.123.105:6379
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == ==>  Preparing: select id,name_en,name_zh,value,type from site_setting
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==    Columns: id, name_en, name_zh, value, type
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 1, webTitleSuffix, 网页标题后缀, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 2, blogName, 博客名称, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 3, footerImgTitle, 页脚图片标题, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 4, footerImgUrl, 页脚图片路径, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 5, copyright, Copyright, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 6, beian, ICP备案号, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 7, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 8, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 9, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 10, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 11, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 12, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 13, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 14, avatar, 头像路径, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 15, name, 昵称, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 16, rollText, 滚动个签, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 17, github, GitHub地址, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 18, qq, QQ链接, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 19, bilibili, bilibili链接, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 20, netease, 网易云音乐, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 21, email, email, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 22, favorite, 自定义, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 24, favorite, 自定义, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 25, reward, 赞赏码路径, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 26, commentAdminFlag, 博主评论标识, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 27, friendContent, 友链页面信息, <<BLOB>>, 4
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 28, friendCommentEnabled, 友链页面评论开关, <<BLOB>>, 4
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == <==      Total: 27
""2021-03-31 === [http-nio-8090-exec-2] == DEBUG == c.j.d.B.getBlogInfoListByIsPublished_COUNT == ==>  Preparing: SELECT count(0) FROM blog AS b LEFT JOIN category AS c ON b.category_id = c.id WHERE b.is_published = true
""2021-03-31 === [http-nio-8090-exec-2] == DEBUG == c.j.d.B.getBlogInfoListByIsPublished_COUNT == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == c.j.d.B.getNewBlogListByIsPublishedAndIsRecommend_COUNT == ==>  Preparing: SELECT count(0) FROM blog WHERE is_published = true AND is_recommend = true
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == c.j.d.B.getNewBlogListByIsPublishedAndIsRecommend_COUNT == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-2] == TRACE == c.j.d.B.getBlogInfoListByIsPublished_COUNT == <==    Columns: count(0)
""2021-03-31 === [http-nio-8090-exec-2] == TRACE == c.j.d.B.getBlogInfoListByIsPublished_COUNT == <==        Row: 1
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == c.j.d.B.getNewBlogListByIsPublishedAndIsRecommend_COUNT == <==    Columns: count(0)
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == c.j.d.B.getNewBlogListByIsPublishedAndIsRecommend_COUNT == <==        Row: 1
""2021-03-31 === [http-nio-8090-exec-2] == DEBUG == c.j.d.B.getBlogInfoListByIsPublished_COUNT == <==      Total: 1
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == c.j.d.B.getNewBlogListByIsPublishedAndIsRecommend_COUNT == <==      Total: 1
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == c.j.d.B.getNewBlogListByIsPublishedAndIsRecommend == ==>  Preparing: select id, title, password from blog where is_published=true and is_recommend=true order by create_time desc LIMIT ?
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == c.j.d.B.getNewBlogListByIsPublishedAndIsRecommend == ==> Parameters: 3(Integer)
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == c.j.d.B.getNewBlogListByIsPublishedAndIsRecommend == <==    Columns: id, title, password
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == c.j.d.B.getNewBlogListByIsPublishedAndIsRecommend == <==        Row: 1, Test, 
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == c.j.d.B.getNewBlogListByIsPublishedAndIsRecommend == <==      Total: 1
""2021-03-31 === [http-nio-8090-exec-2] == DEBUG == c.jonm.dao.BlogMapper.getBlogInfoListByIsPublished == ==>  Preparing: SELECT b.id, b.title, b.description, b.is_top, b.create_time, b.views, b.words, b.read_time, b.password, c.category_name FROM blog AS b LEFT JOIN category AS c ON b.category_id = c.id WHERE b.is_published = true order by is_top desc, create_time desc LIMIT ?
""2021-03-31 === [http-nio-8090-exec-2] == DEBUG == c.jonm.dao.BlogMapper.getBlogInfoListByIsPublished == ==> Parameters: 5(Integer)
""2021-03-31 === [http-nio-8090-exec-2] == TRACE == c.jonm.dao.BlogMapper.getBlogInfoListByIsPublished == <==    Columns: id, title, description, is_top, create_time, views, words, read_time, password, category_name
""2021-03-31 === [http-nio-8090-exec-2] == TRACE == c.jonm.dao.BlogMapper.getBlogInfoListByIsPublished == <==        Row: 1, Test, <<BLOB>>, 0, 2021-03-28 17:00:05, 0, 1413, 7, , 个人项目
""2021-03-31 === [http-nio-8090-exec-2] == DEBUG == c.jonm.dao.BlogMapper.getBlogInfoListByIsPublished == <==      Total: 1
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.CategoryMapper.getCategoryNameList == ==>  Preparing: select category_name from category order by id desc
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.CategoryMapper.getCategoryNameList == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.CategoryMapper.getCategoryNameList == <==    Columns: category_name
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.CategoryMapper.getCategoryNameList == <==        Row: 个人项目
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.CategoryMapper.getCategoryNameList == <==        Row: 项目
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.CategoryMapper.getCategoryNameList == <==      Total: 2
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.TagMapper.getTagListNotId == ==>  Preparing: select tag_name, color from tag order by id desc
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.TagMapper.getTagListNotId == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.TagMapper.getTagListNotId == <==    Columns: tag_name, color
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.TagMapper.getTagListNotId == <==        Row: Mysql, null
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.TagMapper.getTagListNotId == <==        Row: Java, null
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.TagMapper.getTagListNotId == <==      Total: 2
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == ==>  Preparing: select b.id, b.title, b.password, c.category_name from blog as b left join category as c on b.category_id=c.id where b.is_published=true order by rand() limit ?
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == ==> Parameters: 5(Integer)
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == <==    Columns: id, title, password, category_name
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == <==        Row: 1, Test, , 个人项目
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == <==      Total: 1
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == ==>  Preparing: select t.tag_name, t.color from blog_tag as bt left join tag as t on bt.tag_id=t.id where bt.blog_id=?
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == ==> Parameters: 1(Long)
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.TagMapper.getTagListByBlogId == <==    Columns: tag_name, color
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.TagMapper.getTagListByBlogId == <==        Row: Mysql, null
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == <==      Total: 1
""2021-03-31 === [http-nio-8090-exec-2] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == ==>  Preparing: select t.tag_name, t.color from blog_tag as bt left join tag as t on bt.tag_id=t.id where bt.blog_id=?
""2021-03-31 === [http-nio-8090-exec-2] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == ==> Parameters: 1(Long)
""2021-03-31 === [http-nio-8090-exec-2] == TRACE == com.jonm.dao.TagMapper.getTagListByBlogId == <==    Columns: tag_name, color
""2021-03-31 === [http-nio-8090-exec-2] == TRACE == com.jonm.dao.TagMapper.getTagListByBlogId == <==        Row: Mysql, null
""2021-03-31 === [http-nio-8090-exec-2] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == <==      Total: 1
""2021-03-31 === [http-nio-8090-exec-2] == DEBUG == com.jonm.dao.VisitorMapper.hasUUID == ==>  Preparing: select ifnull((select 1 from visitor where uuid=? limit 1), 0)
""2021-03-31 === [http-nio-8090-exec-2] == DEBUG == com.jonm.dao.VisitorMapper.hasUUID == ==> Parameters: 4dd1655d-cd02-41a2-8621-80c525ac4cef(String)
""2021-03-31 === [http-nio-8090-exec-2] == TRACE == com.jonm.dao.VisitorMapper.hasUUID == <==    Columns: ifnull((select 1 from visitor where uuid='4dd1655d-cd02-41a2-8621-80c525ac4cef' limit 1), 0)
""2021-03-31 === [http-nio-8090-exec-2] == TRACE == com.jonm.dao.VisitorMapper.hasUUID == <==        Row: 1
""2021-03-31 === [http-nio-8090-exec-2] == DEBUG == com.jonm.dao.VisitorMapper.hasUUID == <==      Total: 1
""2021-03-31 === [task-8] == DEBUG == com.jonm.dao.VisitLogMapper.saveVisitLog == ==>  Preparing: insert into visit_log (uuid, uri, method, param, behavior, content, remark, ip, ip_source, os, browser, times, create_time, user_agent) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
""2021-03-31 === [task-8] == DEBUG == com.jonm.dao.VisitLogMapper.saveVisitLog == ==> Parameters: 4dd1655d-cd02-41a2-8621-80c525ac4cef(String), /blogs(String), GET(String), {"pageNum":1}(String), 访问页面(String), 首页(String), 第1页(String), 192.168.189.1(String), 内网IP|内网IP(String), Windows 10(String), Chrome 88.0.4324.182(String), 8348(Integer), 2021-03-31 14:51:55.746(Timestamp), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.182 Safari/537.36(String)
""2021-03-31 === [task-8] == DEBUG == com.jonm.dao.VisitLogMapper.saveVisitLog == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-7] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == ==>  Preparing: select id,name_en,name_zh,value,type from site_setting
""2021-03-31 === [http-nio-8090-exec-7] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==    Columns: id, name_en, name_zh, value, type
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 1, webTitleSuffix, 网页标题后缀, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 2, blogName, 博客名称, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 3, footerImgTitle, 页脚图片标题, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 4, footerImgUrl, 页脚图片路径, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 5, copyright, Copyright, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 6, beian, ICP备案号, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 7, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 8, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 9, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 10, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 11, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 12, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 13, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 14, avatar, 头像路径, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 15, name, 昵称, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 16, rollText, 滚动个签, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 17, github, GitHub地址, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 18, qq, QQ链接, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 19, bilibili, bilibili链接, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 20, netease, 网易云音乐, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 21, email, email, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 22, favorite, 自定义, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 24, favorite, 自定义, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 25, reward, 赞赏码路径, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 26, commentAdminFlag, 博主评论标识, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 27, friendContent, 友链页面信息, <<BLOB>>, 4
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 28, friendCommentEnabled, 友链页面评论开关, <<BLOB>>, 4
""2021-03-31 === [http-nio-8090-exec-7] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == <==      Total: 27
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-8] == INFO  == com.jonm.util.fastdfs.FastDFSClient == File Name: paper-plane.pngFile Length:14659
""2021-03-31 === [http-nio-8090-exec-8] == INFO  == com.jonm.util.fastdfs.FastDFSClient == upload_file time used:120 ms
""2021-03-31 === [http-nio-8090-exec-8] == INFO  == com.jonm.util.fastdfs.FastDFSClient == upload file successfully!!!group_name:group1, remoteFileName: M00/00/00/n0t7aWBkHLGAOzUJAAA5Qy_TrhE196.png
""2021-03-31 === [http-nio-8090-exec-8] == INFO  == com.jonm.service.impl.UploadServiceImpl == path:    --------->159.75.123.105:8888/group1/M00/00/00/n0t7aWBkHLGAOzUJAAA5Qy_TrhE196.png
""2021-03-31 === [task-9] == DEBUG == com.jonm.dao.OperationLogMapper.saveOperationLog == ==>  Preparing: insert into operation_log (username, uri, method, param, description, ip, ip_source, os, browser, times, create_time, user_agent) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
""2021-03-31 === [task-9] == DEBUG == com.jonm.dao.OperationLogMapper.saveOperationLog == ==> Parameters: Admin(String), /admin/uploadimages(String), POST(String), {}(String), 图片上传(String), 192.168.189.1(String), 内网IP|内网IP(String), Windows 10(String), Chrome 88.0.4324.182(String), 120(Integer), 2021-03-31 14:54:40.417(Timestamp), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.182 Safari/537.36(String)
""2021-03-31 === [task-9] == DEBUG == com.jonm.dao.OperationLogMapper.saveOperationLog == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==>  Preparing: update site_setting set value=? where id=?
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==> Parameters:  - Jonm's Blog(String), 1(Long)
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==>  Preparing: update site_setting set value=? where id=?
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==> Parameters: Jonm's Blog(String), 2(Long)
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==>  Preparing: update site_setting set value=? where id=?
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==> Parameters: 手机看本站(String), 3(Long)
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==>  Preparing: update site_setting set value=? where id=?
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==> Parameters: 159.75.123.105:8888/group1/M00/00/00/n0t7aWBkHLGAOzUJAAA5Qy_TrhE196.png(String), 4(Long)
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==>  Preparing: update site_setting set value=? where id=?
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==> Parameters: {"title":"Copyright © 2020 - 2021","siteName":"JONM'S BLOG"}(String), 5(Long)
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==>  Preparing: update site_setting set value=? where id=?
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==> Parameters: (String), 6(Long)
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==>  Preparing: update site_setting set value=? where id=?
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==> Parameters: /img/reward.jpg(String), 25(Long)
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==>  Preparing: update site_setting set value=? where id=?
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==> Parameters: 咕咕(String), 26(Long)
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==>  Preparing: update site_setting set value=? where id=?
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==> Parameters: {"title":"由 Spring Boot 强力驱动","url":"https://spring.io/projects/spring-boot/","subject":"Powered","value":"Spring Boot","color":"blue"}(String), 7(Long)
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==>  Preparing: update site_setting set value=? where id=?
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==> Parameters: {"title":"Vue.js 客户端渲染","url":"https://cn.vuejs.org/","subject":"SPA","value":"Vue.js","color":"brightgreen"}(String), 8(Long)
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==>  Preparing: update site_setting set value=? where id=?
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==> Parameters: {"title":"UI 框架 Semantic-UI","url":"https://semantic-ui.com/","subject":"UI","value":"Semantic-UI","color":"semantic-ui"}(String), 9(Long)
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==>  Preparing: update site_setting set value=? where id=?
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==> Parameters: {"title":"阿里云提供服务器及域名相关服务","url":"https://www.aliyun.com/","subject":"VPS & DNS","value":"Aliyun","color":"blueviolet"}(String), 10(Long)
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==>  Preparing: update site_setting set value=? where id=?
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==> Parameters: {"title":"jsDelivr 提供 CDN 加速服务","url":"https://www.jsdelivr.com/","subject":"CDN","value":"jsDelivr","color":"orange"}(String), 11(Long)
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==>  Preparing: update site_setting set value=? where id=?
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==> Parameters: {"title":"GitHub 提供图床","url":"https://github.com/","subject":"OSS","value":"GitHub","color":"github"}(String), 12(Long)
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==>  Preparing: update site_setting set value=? where id=?
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==> Parameters: {"title":"本站点采用 CC BY 4.0 国际许可协议进行许可","url":"https://creativecommons.org/licenses/by/4.0/","subject":"CC","value":"BY 4.0","color":"lightgray"}(String), 13(Long)
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==>  Preparing: update site_setting set value=? where id=?
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==> Parameters: 159.75.123.105:8888/group1/M00/00/00/n0t7aWBkGPGAFnNhAAB5tNKTQyM374.jpg(String), 14(Long)
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==>  Preparing: update site_setting set value=? where id=?
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==> Parameters: Jonm(String), 15(Long)
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==>  Preparing: update site_setting set value=? where id=?
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==> Parameters: "现在过的每一天，都是余生中最年轻的一天。“(String), 16(Long)
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==>  Preparing: update site_setting set value=? where id=?
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==> Parameters: https://github.com/Jonm(String), 17(Long)
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==>  Preparing: update site_setting set value=? where id=?
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==> Parameters: http://sighttp.qq.com/authd?IDKEY=(String), 18(Long)
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==>  Preparing: update site_setting set value=? where id=?
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==> Parameters: https://space.bilibili.com/(String), 19(Long)
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==>  Preparing: update site_setting set value=? where id=?
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==> Parameters: https://music.163.com/#/user/home?id=(String), 20(Long)
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==>  Preparing: update site_setting set value=? where id=?
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==> Parameters: mailto:1773304209@qq.com(String), 21(Long)
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==>  Preparing: update site_setting set value=? where id=?
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==> Parameters: {"title":"最喜欢的动漫 📺","content":"海贼王、火影忍者、家庭教师、进击的巨人、鬼灭之刃"}(String), 22(Long)
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==>  Preparing: update site_setting set value=? where id=?
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==> Parameters: {"title":"最喜欢的运动🎾","content":"网球，长跑"}(String), 24(Long)
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == <==    Updates: 1
""2021-03-31 === [task-10] == DEBUG == com.jonm.dao.OperationLogMapper.saveOperationLog == ==>  Preparing: insert into operation_log (username, uri, method, param, description, ip, ip_source, os, browser, times, create_time, user_agent) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
""2021-03-31 === [task-10] == DEBUG == com.jonm.dao.OperationLogMapper.saveOperationLog == ==> Parameters: Admin(String), /admin/siteSettings(String), POST(String), {"map":{"settings":[{"id":1,"nameEn":"webTitleSuffix","nameZh":"网页标题后缀","value":" - Jonm's Blog","type":1},{"id":2,"nameEn":"blogName","nameZh":"博客名称","value":"Jonm's Blog","type":1},{"id":3,"nameEn":"footerImgTitle","nameZh":"页脚图片标题","value":"手机看本站","type":1},{"id":4,"nameEn":"footerImgUrl","nameZh":"页脚图片路径","value":"159.75.123.105:8888/group1/M00/00/00/n0t7aWBkHLGAOzUJAAA5Qy_TrhE196.png","type":1},{"id":5,"nameEn":"copyright","nameZh":"Copyright","value":"{\"title\":\"Copyright © 2020 - 2021\",\"siteName\":\"JONM'S BLOG\"}","type":1},{"id":6,"nameEn":"beian","nameZh":"ICP备案号","value":"","type":1},{"id":25,"nameEn":"reward","nameZh":"赞赏码路径","value":"/img/reward.jpg","type":1},{"id":26,"nameEn":"commentAdminFlag","nameZh":"博主评论标识","value":"咕咕","type":1},{"id":7,"nameEn":"badge","nameZh":"徽标","value":"{\"title\":\"由 Spring Boot 强力驱动\",\"url\":\"https://spring.io/projects/spring-boot/\",\"subject\":\"Powered\",\"value\":\"Spring Boot\",\"color\":\"blue\"}","type":2},{"id":8,"nameEn":"badge","nameZh":"徽标","value":"{\"title\":\"Vue.js 客户端渲染\",\"url\":\"https://cn.vuejs.org/\",\"subject\":\"SPA\",\"value\":\"Vue.js\",\"color\":\"brightgreen\"}","type":2},{"id":9,"nameEn":"badge","nameZh":"徽标","value":"{\"title\":\"UI 框架 Semantic-UI\",\"url\":\"https://semantic-ui.com/\",\"subject\":\"UI\",\"value\":\"Semantic-UI\",\"color\":\"semantic-ui\"}","type":2},{"id":10,"nameEn":"badge","nameZh":"徽标","value":"{\"title\":\"阿里云提供服务器及域名相关服务\",\"url\":\"https://www.aliyun.com/\",\"subject\":\"VPS & DNS\",\"value\":\"Aliyun\",\"color\":\"blueviolet\"}","type":2},{"id":11,"nameEn":"badge","nameZh":"徽标","value":"{\"title\":\"jsDelivr 提供 CDN 加速服务\",\"url\":\"https://www.jsdelivr.com/\",\"subject\":\"CDN\",\"value\":\"jsDelivr\",\"color\":\"orange\"}","type":2},{"id":12,"nameEn":"badge","nameZh":"徽标","value":"{\"title\":\"GitHub 提供图床\",\"url\":\"https://github.com/\",\"subject\":\"OSS\",\"value\":\"GitHub\",\"color\":\"github\"}","type":2},{"id":13,"nameEn":"badge","nameZh":"徽标","value":"{(String), 更新站点配置信息(String), 192.168.189.1(String), 内网IP|内网IP(String), Windows 10(String), Chrome 88.0.4324.182(String), 1035(Integer), 2021-03-31 14:54:44.918(Timestamp), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.182 Safari/537.36(String)
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [task-10] == DEBUG == com.jonm.dao.OperationLogMapper.saveOperationLog == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-10] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == ==>  Preparing: select id,name_en,name_zh,value,type from site_setting
""2021-03-31 === [http-nio-8090-exec-10] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==    Columns: id, name_en, name_zh, value, type
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 1, webTitleSuffix, 网页标题后缀, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 2, blogName, 博客名称, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 3, footerImgTitle, 页脚图片标题, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 4, footerImgUrl, 页脚图片路径, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 5, copyright, Copyright, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 6, beian, ICP备案号, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 7, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 8, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 9, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 10, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 11, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 12, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 13, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 14, avatar, 头像路径, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 15, name, 昵称, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 16, rollText, 滚动个签, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 17, github, GitHub地址, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 18, qq, QQ链接, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 19, bilibili, bilibili链接, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 20, netease, 网易云音乐, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 21, email, email, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 22, favorite, 自定义, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 24, favorite, 自定义, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 25, reward, 赞赏码路径, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 26, commentAdminFlag, 博主评论标识, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 27, friendContent, 友链页面信息, <<BLOB>>, 4
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 28, friendCommentEnabled, 友链页面评论开关, <<BLOB>>, 4
""2021-03-31 === [http-nio-8090-exec-10] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == <==      Total: 27
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == ==>  Preparing: select id,name_en,name_zh,value,type from site_setting
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==    Columns: id, name_en, name_zh, value, type
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 1, webTitleSuffix, 网页标题后缀, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 2, blogName, 博客名称, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 3, footerImgTitle, 页脚图片标题, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 4, footerImgUrl, 页脚图片路径, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 5, copyright, Copyright, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 6, beian, ICP备案号, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 7, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 8, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 9, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 10, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 11, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 12, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 13, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 14, avatar, 头像路径, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 15, name, 昵称, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 16, rollText, 滚动个签, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 17, github, GitHub地址, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 18, qq, QQ链接, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 19, bilibili, bilibili链接, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 20, netease, 网易云音乐, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 21, email, email, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 22, favorite, 自定义, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 24, favorite, 自定义, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 25, reward, 赞赏码路径, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 26, commentAdminFlag, 博主评论标识, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 27, friendContent, 友链页面信息, <<BLOB>>, 4
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 28, friendCommentEnabled, 友链页面评论开关, <<BLOB>>, 4
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == <==      Total: 27
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.BlogMapper.getBlogViewsList == ==>  Preparing: select id, views from blog
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.BlogMapper.getBlogViewsList == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.BlogMapper.getBlogViewsList == <==    Columns: id, views
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.BlogMapper.getBlogViewsList == <==        Row: 1, 0
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.BlogMapper.getBlogViewsList == <==      Total: 1
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == ==>  Preparing: select b.id, b.title, b.password, c.category_name from blog as b left join category as c on b.category_id=c.id where b.is_published=true order by rand() limit ?
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == ==> Parameters: 5(Integer)
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == <==    Columns: id, title, password, category_name
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == <==        Row: 1, Test, , 个人项目
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == <==      Total: 1
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == ==>  Preparing: select t.tag_name, t.color from blog_tag as bt left join tag as t on bt.tag_id=t.id where bt.blog_id=?
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == ==> Parameters: 1(Long)
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.TagMapper.getTagListByBlogId == <==    Columns: tag_name, color
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.TagMapper.getTagListByBlogId == <==        Row: Mysql, null
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == <==      Total: 1
""2021-03-31 === [task-11] == DEBUG == com.jonm.dao.VisitLogMapper.saveVisitLog == ==>  Preparing: insert into visit_log (uuid, uri, method, param, behavior, content, remark, ip, ip_source, os, browser, times, create_time, user_agent) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
""2021-03-31 === [task-11] == DEBUG == com.jonm.dao.VisitLogMapper.saveVisitLog == ==> Parameters: 4dd1655d-cd02-41a2-8621-80c525ac4cef(String), /blogs(String), GET(String), {"pageNum":1}(String), 访问页面(String), 首页(String), 第1页(String), 192.168.189.1(String), 内网IP|内网IP(String), Windows 10(String), Chrome 88.0.4324.182(String), 101(Integer), 2021-03-31 14:54:50.196(Timestamp), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.182 Safari/537.36(String)
""2021-03-31 === [task-11] == DEBUG == com.jonm.dao.VisitLogMapper.saveVisitLog == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-2] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == ==>  Preparing: select b.id, b.title, b.password, c.category_name from blog as b left join category as c on b.category_id=c.id where b.is_published=true order by rand() limit ?
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == ==> Parameters: 5(Integer)
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == <==    Columns: id, title, password, category_name
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == <==        Row: 1, Test, , 个人项目
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == <==      Total: 1
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == ==>  Preparing: select t.tag_name, t.color from blog_tag as bt left join tag as t on bt.tag_id=t.id where bt.blog_id=?
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == ==> Parameters: 1(Long)
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.TagMapper.getTagListByBlogId == <==    Columns: tag_name, color
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.TagMapper.getTagListByBlogId == <==        Row: Mysql, null
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == <==      Total: 1
""2021-03-31 === [task-12] == DEBUG == com.jonm.dao.VisitLogMapper.saveVisitLog == ==>  Preparing: insert into visit_log (uuid, uri, method, param, behavior, content, remark, ip, ip_source, os, browser, times, create_time, user_agent) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
""2021-03-31 === [task-12] == DEBUG == com.jonm.dao.VisitLogMapper.saveVisitLog == ==> Parameters: 4dd1655d-cd02-41a2-8621-80c525ac4cef(String), /blogs(String), GET(String), {"pageNum":1}(String), 访问页面(String), 首页(String), 第1页(String), 192.168.189.1(String), 内网IP|内网IP(String), Windows 10(String), Chrome 88.0.4324.182(String), 87(Integer), 2021-03-31 14:55:09.133(Timestamp), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.182 Safari/537.36(String)
""2021-03-31 === [task-12] == DEBUG == com.jonm.dao.VisitLogMapper.saveVisitLog == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-7] == DEBUG == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == ==>  Preparing: select b.id, b.title, b.password, c.category_name from blog as b left join category as c on b.category_id=c.id where b.is_published=true order by rand() limit ?
""2021-03-31 === [http-nio-8090-exec-7] == DEBUG == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == ==> Parameters: 5(Integer)
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == <==    Columns: id, title, password, category_name
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == <==        Row: 1, Test, , 个人项目
""2021-03-31 === [http-nio-8090-exec-7] == DEBUG == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == <==      Total: 1
""2021-03-31 === [http-nio-8090-exec-7] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == ==>  Preparing: select t.tag_name, t.color from blog_tag as bt left join tag as t on bt.tag_id=t.id where bt.blog_id=?
""2021-03-31 === [http-nio-8090-exec-7] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == ==> Parameters: 1(Long)
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.TagMapper.getTagListByBlogId == <==    Columns: tag_name, color
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.TagMapper.getTagListByBlogId == <==        Row: Mysql, null
""2021-03-31 === [http-nio-8090-exec-7] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == <==      Total: 1
""2021-03-31 === [task-13] == DEBUG == com.jonm.dao.VisitLogMapper.saveVisitLog == ==>  Preparing: insert into visit_log (uuid, uri, method, param, behavior, content, remark, ip, ip_source, os, browser, times, create_time, user_agent) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
""2021-03-31 === [task-13] == DEBUG == com.jonm.dao.VisitLogMapper.saveVisitLog == ==> Parameters: 4dd1655d-cd02-41a2-8621-80c525ac4cef(String), /blogs(String), GET(String), {"pageNum":1}(String), 访问页面(String), 首页(String), 第1页(String), 192.168.189.1(String), 内网IP|内网IP(String), Windows 10(String), Chrome 88.0.4324.182(String), 50(Integer), 2021-03-31 14:56:49.607(Timestamp), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.182 Safari/537.36(String)
""2021-03-31 === [task-13] == DEBUG == com.jonm.dao.VisitLogMapper.saveVisitLog == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == ==>  Preparing: select b.id, b.title, b.password, c.category_name from blog as b left join category as c on b.category_id=c.id where b.is_published=true order by rand() limit ?
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == ==> Parameters: 5(Integer)
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == <==    Columns: id, title, password, category_name
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == <==        Row: 1, Test, , 个人项目
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == <==      Total: 1
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == ==>  Preparing: select t.tag_name, t.color from blog_tag as bt left join tag as t on bt.tag_id=t.id where bt.blog_id=?
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == ==> Parameters: 1(Long)
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.TagMapper.getTagListByBlogId == <==    Columns: tag_name, color
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.TagMapper.getTagListByBlogId == <==        Row: Mysql, null
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == <==      Total: 1
""2021-03-31 === [task-14] == DEBUG == com.jonm.dao.VisitLogMapper.saveVisitLog == ==>  Preparing: insert into visit_log (uuid, uri, method, param, behavior, content, remark, ip, ip_source, os, browser, times, create_time, user_agent) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
""2021-03-31 === [task-14] == DEBUG == com.jonm.dao.VisitLogMapper.saveVisitLog == ==> Parameters: 4dd1655d-cd02-41a2-8621-80c525ac4cef(String), /blogs(String), GET(String), {"pageNum":1}(String), 访问页面(String), 首页(String), 第1页(String), 192.168.189.1(String), 内网IP|内网IP(String), Windows 10(String), Chrome 88.0.4324.182(String), 52(Integer), 2021-03-31 14:58:27.832(Timestamp), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.182 Safari/537.36(String)
""2021-03-31 === [task-14] == DEBUG == com.jonm.dao.VisitLogMapper.saveVisitLog == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-5] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == ==>  Preparing: select id,name_en,name_zh,value,type from site_setting
""2021-03-31 === [http-nio-8090-exec-5] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-6] == DEBUG == c.j.d.B.getBlogInfoListByIsPublished_COUNT == ==>  Preparing: SELECT count(0) FROM blog AS b LEFT JOIN category AS c ON b.category_id = c.id WHERE b.is_published = true
""2021-03-31 === [http-nio-8090-exec-6] == DEBUG == c.j.d.B.getBlogInfoListByIsPublished_COUNT == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==    Columns: id, name_en, name_zh, value, type
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 1, webTitleSuffix, 网页标题后缀, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 2, blogName, 博客名称, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 3, footerImgTitle, 页脚图片标题, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 4, footerImgUrl, 页脚图片路径, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 5, copyright, Copyright, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 6, beian, ICP备案号, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 7, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 8, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 9, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 10, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 11, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 12, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 13, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 14, avatar, 头像路径, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 15, name, 昵称, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 16, rollText, 滚动个签, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 17, github, GitHub地址, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 18, qq, QQ链接, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 19, bilibili, bilibili链接, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 20, netease, 网易云音乐, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 21, email, email, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 22, favorite, 自定义, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 24, favorite, 自定义, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 25, reward, 赞赏码路径, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 26, commentAdminFlag, 博主评论标识, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 27, friendContent, 友链页面信息, <<BLOB>>, 4
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 28, friendCommentEnabled, 友链页面评论开关, <<BLOB>>, 4
""2021-03-31 === [http-nio-8090-exec-5] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == <==      Total: 27
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == c.j.d.B.getBlogInfoListByIsPublished_COUNT == <==    Columns: count(0)
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == c.j.d.B.getBlogInfoListByIsPublished_COUNT == <==        Row: 1
""2021-03-31 === [http-nio-8090-exec-6] == DEBUG == c.j.d.B.getBlogInfoListByIsPublished_COUNT == <==      Total: 1
""2021-03-31 === [http-nio-8090-exec-6] == DEBUG == c.jonm.dao.BlogMapper.getBlogInfoListByIsPublished == ==>  Preparing: SELECT b.id, b.title, b.description, b.is_top, b.create_time, b.views, b.words, b.read_time, b.password, c.category_name FROM blog AS b LEFT JOIN category AS c ON b.category_id = c.id WHERE b.is_published = true order by is_top desc, create_time desc LIMIT ?
""2021-03-31 === [http-nio-8090-exec-6] == DEBUG == c.jonm.dao.BlogMapper.getBlogInfoListByIsPublished == ==> Parameters: 5(Integer)
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == c.jonm.dao.BlogMapper.getBlogInfoListByIsPublished == <==    Columns: id, title, description, is_top, create_time, views, words, read_time, password, category_name
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == c.jonm.dao.BlogMapper.getBlogInfoListByIsPublished == <==        Row: 1, Test, <<BLOB>>, 0, 2021-03-28 17:00:05, 0, 1413, 7, , 个人项目
""2021-03-31 === [http-nio-8090-exec-6] == DEBUG == c.jonm.dao.BlogMapper.getBlogInfoListByIsPublished == <==      Total: 1
""2021-03-31 === [http-nio-8090-exec-6] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == ==>  Preparing: select t.tag_name, t.color from blog_tag as bt left join tag as t on bt.tag_id=t.id where bt.blog_id=?
""2021-03-31 === [http-nio-8090-exec-6] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == ==> Parameters: 1(Long)
""2021-03-31 === [http-nio-8090-exec-5] == DEBUG == c.j.d.B.getNewBlogListByIsPublishedAndIsRecommend_COUNT == ==>  Preparing: SELECT count(0) FROM blog WHERE is_published = true AND is_recommend = true
""2021-03-31 === [http-nio-8090-exec-5] == DEBUG == c.j.d.B.getNewBlogListByIsPublishedAndIsRecommend_COUNT == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.TagMapper.getTagListByBlogId == <==    Columns: tag_name, color
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.TagMapper.getTagListByBlogId == <==        Row: Mysql, null
""2021-03-31 === [http-nio-8090-exec-6] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == <==      Total: 1
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == c.j.d.B.getNewBlogListByIsPublishedAndIsRecommend_COUNT == <==    Columns: count(0)
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == c.j.d.B.getNewBlogListByIsPublishedAndIsRecommend_COUNT == <==        Row: 1
""2021-03-31 === [http-nio-8090-exec-5] == DEBUG == c.j.d.B.getNewBlogListByIsPublishedAndIsRecommend_COUNT == <==      Total: 1
""2021-03-31 === [http-nio-8090-exec-5] == DEBUG == c.j.d.B.getNewBlogListByIsPublishedAndIsRecommend == ==>  Preparing: select id, title, password from blog where is_published=true and is_recommend=true order by create_time desc LIMIT ?
""2021-03-31 === [http-nio-8090-exec-5] == DEBUG == c.j.d.B.getNewBlogListByIsPublishedAndIsRecommend == ==> Parameters: 3(Integer)
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == c.j.d.B.getNewBlogListByIsPublishedAndIsRecommend == <==    Columns: id, title, password
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == c.j.d.B.getNewBlogListByIsPublishedAndIsRecommend == <==        Row: 1, Test, 
""2021-03-31 === [http-nio-8090-exec-5] == DEBUG == c.j.d.B.getNewBlogListByIsPublishedAndIsRecommend == <==      Total: 1
""2021-03-31 === [http-nio-8090-exec-6] == DEBUG == com.jonm.dao.VisitorMapper.hasUUID == ==>  Preparing: select ifnull((select 1 from visitor where uuid=? limit 1), 0)
""2021-03-31 === [http-nio-8090-exec-6] == DEBUG == com.jonm.dao.VisitorMapper.hasUUID == ==> Parameters: 4dd1655d-cd02-41a2-8621-80c525ac4cef(String)
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.VisitorMapper.hasUUID == <==    Columns: ifnull((select 1 from visitor where uuid='4dd1655d-cd02-41a2-8621-80c525ac4cef' limit 1), 0)
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.VisitorMapper.hasUUID == <==        Row: 1
""2021-03-31 === [http-nio-8090-exec-6] == DEBUG == com.jonm.dao.VisitorMapper.hasUUID == <==      Total: 1
""2021-03-31 === [http-nio-8090-exec-5] == DEBUG == com.jonm.dao.CategoryMapper.getCategoryNameList == ==>  Preparing: select category_name from category order by id desc
""2021-03-31 === [http-nio-8090-exec-5] == DEBUG == com.jonm.dao.CategoryMapper.getCategoryNameList == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.CategoryMapper.getCategoryNameList == <==    Columns: category_name
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.CategoryMapper.getCategoryNameList == <==        Row: 个人项目
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.CategoryMapper.getCategoryNameList == <==        Row: 项目
""2021-03-31 === [http-nio-8090-exec-5] == DEBUG == com.jonm.dao.CategoryMapper.getCategoryNameList == <==      Total: 2
""2021-03-31 === [http-nio-8090-exec-5] == DEBUG == com.jonm.dao.TagMapper.getTagListNotId == ==>  Preparing: select tag_name, color from tag order by id desc
""2021-03-31 === [http-nio-8090-exec-5] == DEBUG == com.jonm.dao.TagMapper.getTagListNotId == ==> Parameters: 
""2021-03-31 === [task-15] == DEBUG == com.jonm.dao.VisitLogMapper.saveVisitLog == ==>  Preparing: insert into visit_log (uuid, uri, method, param, behavior, content, remark, ip, ip_source, os, browser, times, create_time, user_agent) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
""2021-03-31 === [task-15] == DEBUG == com.jonm.dao.VisitLogMapper.saveVisitLog == ==> Parameters: 4dd1655d-cd02-41a2-8621-80c525ac4cef(String), /blogs(String), GET(String), {"pageNum":1}(String), 访问页面(String), 首页(String), 第1页(String), 192.168.189.1(String), 内网IP|内网IP(String), Windows 10(String), Chrome 88.0.4324.182(String), 100(Integer), 2021-03-31 15:01:05.957(Timestamp), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.182 Safari/537.36(String)
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.TagMapper.getTagListNotId == <==    Columns: tag_name, color
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.TagMapper.getTagListNotId == <==        Row: Mysql, null
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.TagMapper.getTagListNotId == <==        Row: Java, null
""2021-03-31 === [http-nio-8090-exec-5] == DEBUG == com.jonm.dao.TagMapper.getTagListNotId == <==      Total: 2
""2021-03-31 === [task-15] == DEBUG == com.jonm.dao.VisitLogMapper.saveVisitLog == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-5] == DEBUG == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == ==>  Preparing: select b.id, b.title, b.password, c.category_name from blog as b left join category as c on b.category_id=c.id where b.is_published=true order by rand() limit ?
""2021-03-31 === [http-nio-8090-exec-5] == DEBUG == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == ==> Parameters: 5(Integer)
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == <==    Columns: id, title, password, category_name
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == <==        Row: 1, Test, , 个人项目
""2021-03-31 === [http-nio-8090-exec-5] == DEBUG == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == <==      Total: 1
""2021-03-31 === [http-nio-8090-exec-5] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == ==>  Preparing: select t.tag_name, t.color from blog_tag as bt left join tag as t on bt.tag_id=t.id where bt.blog_id=?
""2021-03-31 === [http-nio-8090-exec-5] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == ==> Parameters: 1(Long)
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.TagMapper.getTagListByBlogId == <==    Columns: tag_name, color
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.TagMapper.getTagListByBlogId == <==        Row: Mysql, null
""2021-03-31 === [http-nio-8090-exec-5] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == <==      Total: 1
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-10] == DEBUG == com.jonm.dao.BlogMapper.getBlogViewsList == ==>  Preparing: select id, views from blog
""2021-03-31 === [http-nio-8090-exec-10] == DEBUG == com.jonm.dao.BlogMapper.getBlogViewsList == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == ==>  Preparing: select b.id, b.title, b.password, c.category_name from blog as b left join category as c on b.category_id=c.id where b.is_published=true order by rand() limit ?
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == ==> Parameters: 5(Integer)
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.BlogMapper.getBlogViewsList == <==    Columns: id, views
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.BlogMapper.getBlogViewsList == <==        Row: 1, 0
""2021-03-31 === [http-nio-8090-exec-10] == DEBUG == com.jonm.dao.BlogMapper.getBlogViewsList == <==      Total: 1
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == <==    Columns: id, title, password, category_name
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == <==        Row: 1, Test, , 个人项目
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == <==      Total: 1
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == ==>  Preparing: select t.tag_name, t.color from blog_tag as bt left join tag as t on bt.tag_id=t.id where bt.blog_id=?
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == ==> Parameters: 1(Long)
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.TagMapper.getTagListByBlogId == <==    Columns: tag_name, color
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.TagMapper.getTagListByBlogId == <==        Row: Mysql, null
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == <==      Total: 1
""2021-03-31 === [task-16] == DEBUG == com.jonm.dao.VisitLogMapper.saveVisitLog == ==>  Preparing: insert into visit_log (uuid, uri, method, param, behavior, content, remark, ip, ip_source, os, browser, times, create_time, user_agent) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
""2021-03-31 === [task-16] == DEBUG == com.jonm.dao.VisitLogMapper.saveVisitLog == ==> Parameters: 4dd1655d-cd02-41a2-8621-80c525ac4cef(String), /blogs(String), GET(String), {"pageNum":1}(String), 访问页面(String), 首页(String), 第1页(String), 192.168.189.1(String), 内网IP|内网IP(String), Windows 10(String), Chrome 88.0.4324.182(String), 671(Integer), 2021-03-31 15:04:17.625(Timestamp), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.182 Safari/537.36(String)
""2021-03-31 === [task-16] == DEBUG == com.jonm.dao.VisitLogMapper.saveVisitLog == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-2] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-2] == ERROR == com.jonm.handler.ControllerExceptionHandler == Request URL : http://localhost:8090/blogs, Exception :
"org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out after 10 second(s)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:272)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.convertLettuceAccessException(LettuceHashCommands.java:472)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.hExists(LettuceHashCommands.java:148)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.hExists(DefaultedRedisConnection.java:1131)
	at org.springframework.data.redis.core.DefaultHashOperations.lambda$hasKey$1(DefaultHashOperations.java:67)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:229)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:189)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:96)
	at org.springframework.data.redis.core.DefaultHashOperations.hasKey(DefaultHashOperations.java:67)
	at com.jonm.service.impl.RedisServiceImpl.getBlogInfoPageResultByHash(RedisServiceImpl.java:26)
	at com.jonm.service.impl.RedisServiceImpl$$FastClassBySpringCGLIB$$f5f6c692.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.service.impl.RedisServiceImpl$$EnhancerBySpringCGLIB$$b8025e1b.getBlogInfoPageResultByHash(<generated>)
	at com.jonm.service.impl.RedisServiceImpl$$FastClassBySpringCGLIB$$f5f6c692.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.service.impl.RedisServiceImpl$$EnhancerBySpringCGLIB$$c9f3205.getBlogInfoPageResultByHash(<generated>)
	at com.jonm.service.impl.BlogServiceImpl.getBlogInfoListByIsPublished(BlogServiceImpl.java:122)
	at com.jonm.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$9bf091db.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$ed7f0a5d.getBlogInfoListByIsPublished(<generated>)
	at com.jonm.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$9bf091db.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$40e05ed.getBlogInfoListByIsPublished(<generated>)
	at com.jonm.controller.BlogController.blogs(BlogController.java:46)
	at com.jonm.controller.BlogController$$FastClassBySpringCGLIB$$70670bf3.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at com.jonm.aspect.VisitLogAspect.logAround(VisitLogAspect.java:65)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.controller.BlogController$$EnhancerBySpringCGLIB$$43dcf29a.blogs(<generated>)
	at com.jonm.controller.BlogController$$FastClassBySpringCGLIB$$70670bf3.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.controller.BlogController$$EnhancerBySpringCGLIB$$87ec357e.blogs(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:893)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:807)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1061)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:961)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.jonm.config.JwtFilter.doFilter(JwtFilter.java:35)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:218)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out after 10 second(s)
	at io.lettuce.core.internal.ExceptionFactory.createTimeoutException(ExceptionFactory.java:53)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:246)
	at io.lettuce.core.FutureSyncInvocationHandler.handleInvocation(FutureSyncInvocationHandler.java:75)
	at io.lettuce.core.internal.AbstractInvocationHandler.invoke(AbstractInvocationHandler.java:80)
	at com.sun.proxy.$Proxy115.hexists(Unknown Source)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.hExists(LettuceHashCommands.java:146)
	... 182 common frames omitted
"2021-03-31 === [task-17] == DEBUG == com.jonm.dao.ExceptionLogMapper.saveExceptionLog == ==>  Preparing: insert into exception_log (uri, method, param, description, error, ip, ip_source, os, browser, create_time, user_agent) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
""2021-03-31 === [task-17] == DEBUG == com.jonm.dao.ExceptionLogMapper.saveExceptionLog == ==> Parameters: /blogs(String), GET(String), {"pageNum":1}(String), 访问页面(String), org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out after 10 second(s)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:272)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.convertLettuceAccessException(LettuceHashCommands.java:472)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.hExists(LettuceHashCommands.java:148)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.hExists(DefaultedRedisConnection.java:1131)
	at org.springframework.data.redis.core.DefaultHashOperations.lambda$hasKey$1(DefaultHashOperations.java:67)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:229)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:189)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:96)
	at org.springframework.data.redis.core.DefaultHashOperations.hasKey(DefaultHashOperations.java:67)
	at com.jonm.service.impl.RedisServiceImpl.getBlogInfoPageResultByHash(RedisServiceImpl.java:26)
	at com.jonm.service.impl.RedisServiceImpl$$FastClassBySpringCGLIB$$f5f6c692.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.service.impl.RedisServiceImpl$$EnhancerBySpringCGLIB$$b8025e1b.getBlogInfoPageResultByHash(<generated>)
	at com.jonm.service.impl.RedisServiceImpl$$FastClassBySpringCGLIB$$f5f6c692.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.service.impl.RedisServiceImpl$$EnhancerBySpringCGLIB$$c9f3205.getBlogInfoPageResultByHash(<generated>)
	at com.jonm.service.impl.BlogServiceImpl.getBlogInfoListByIsPublished(BlogServiceImpl.java:122)
	at com.jonm.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$9bf091db.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$ed7f0a5d.getBlogInfoListByIsPublished(<generated>)
	at com.jonm.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$9bf091db.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$40e05ed.getBlogInfoListByIsPublished(<generated>)
	at com.jonm.controller.BlogController.blogs(BlogController.java:46)
	at com.jonm.controller.BlogController$$FastClassBySpringCGLIB$$70670bf3.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at com.jonm.aspect.VisitLogAspect.logAround(VisitLogAspect.java:65)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.controller.BlogController$$EnhancerBySpringCGLIB$$43dcf29a.blogs(<generated>)
	at com.jonm.controller.BlogController$$FastClassBySpringCGLIB$$70670bf3.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.controller.BlogController$$EnhancerBySpringCGLIB$$87ec357e.blogs(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:893)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:807)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1061)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:961)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.jonm.config.JwtFilter.doFilter(JwtFilter.java:35)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:218)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out after 10 second(s)
	at io.lettuce.core.internal.ExceptionFactory.createTimeoutException(ExceptionFactory.java:53)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:246)
	at io.lettuce.core.FutureSyncInvocationHandler.handleInvocation(FutureSyncInvocationHandler.java:75)
	at io.lettuce.core.internal.AbstractInvocationHandler.invoke(AbstractInvocationHandler.java:80)
	at com.sun.proxy.$Proxy115.hexists(Unknown Source)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.hExists(LettuceHashCommands.java:146)
	... 182 more
(String), 192.168.189.1(String), 内网IP|内网IP(String), Windows 10(String), Chrome 88.0.4324.182(String), 2021-03-31 15:31:35.887(Timestamp), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.182 Safari/537.36(String)
""2021-03-31 === [task-17] == DEBUG == com.jonm.dao.ExceptionLogMapper.saveExceptionLog == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-3] == ERROR == com.jonm.handler.ControllerExceptionHandler == Request URL : http://localhost:8090/site, Exception :
"org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out after 10 second(s)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:272)
	at org.springframework.data.redis.connection.lettuce.LettuceStringCommands.convertLettuceAccessException(LettuceStringCommands.java:800)
	at org.springframework.data.redis.connection.lettuce.LettuceStringCommands.get(LettuceStringCommands.java:70)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.get(DefaultedRedisConnection.java:267)
	at org.springframework.data.redis.core.DefaultValueOperations$1.inRedis(DefaultValueOperations.java:57)
	at org.springframework.data.redis.core.AbstractOperations$ValueDeserializingRedisCallback.doInRedis(AbstractOperations.java:60)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:229)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:189)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:96)
	at org.springframework.data.redis.core.DefaultValueOperations.get(DefaultValueOperations.java:53)
	at com.jonm.service.impl.RedisServiceImpl.getMapByValue(RedisServiceImpl.java:73)
	at com.jonm.service.impl.RedisServiceImpl$$FastClassBySpringCGLIB$$f5f6c692.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.service.impl.RedisServiceImpl$$EnhancerBySpringCGLIB$$b8025e1b.getMapByValue(<generated>)
	at com.jonm.service.impl.RedisServiceImpl$$FastClassBySpringCGLIB$$f5f6c692.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.service.impl.RedisServiceImpl$$EnhancerBySpringCGLIB$$c9f3205.getMapByValue(<generated>)
	at com.jonm.service.impl.SiteSettingServiceImpl.getSiteInfo(SiteSettingServiceImpl.java:65)
	at com.jonm.service.impl.SiteSettingServiceImpl$$FastClassBySpringCGLIB$$57805c44.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.service.impl.SiteSettingServiceImpl$$EnhancerBySpringCGLIB$$1627b338.getSiteInfo(<generated>)
	at com.jonm.service.impl.SiteSettingServiceImpl$$FastClassBySpringCGLIB$$57805c44.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.service.impl.SiteSettingServiceImpl$$EnhancerBySpringCGLIB$$abd2ef2e.getSiteInfo(<generated>)
	at com.jonm.controller.IndexController.site(IndexController.java:43)
	at com.jonm.controller.IndexController$$FastClassBySpringCGLIB$$f0fdad99.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.controller.IndexController$$EnhancerBySpringCGLIB$$c60b5f1a.site(<generated>)
	at com.jonm.controller.IndexController$$FastClassBySpringCGLIB$$f0fdad99.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.controller.IndexController$$EnhancerBySpringCGLIB$$4e74cb4.site(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:893)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:807)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1061)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:961)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.jonm.config.JwtFilter.doFilter(JwtFilter.java:35)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:218)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out after 10 second(s)
	at io.lettuce.core.internal.ExceptionFactory.createTimeoutException(ExceptionFactory.java:53)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:246)
	at io.lettuce.core.FutureSyncInvocationHandler.handleInvocation(FutureSyncInvocationHandler.java:75)
	at io.lettuce.core.internal.AbstractInvocationHandler.invoke(AbstractInvocationHandler.java:80)
	at com.sun.proxy.$Proxy115.get(Unknown Source)
	at org.springframework.data.redis.connection.lettuce.LettuceStringCommands.get(LettuceStringCommands.java:68)
	... 172 common frames omitted
"2021-03-31 === [task-18] == DEBUG == com.jonm.dao.ExceptionLogMapper.saveExceptionLog == ==>  Preparing: insert into exception_log (uri, method, param, description, error, ip, ip_source, os, browser, create_time, user_agent) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
""2021-03-31 === [task-18] == DEBUG == com.jonm.dao.ExceptionLogMapper.saveExceptionLog == ==> Parameters: /site(String), GET(String), {}(String), (String), org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out after 10 second(s)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:272)
	at org.springframework.data.redis.connection.lettuce.LettuceStringCommands.convertLettuceAccessException(LettuceStringCommands.java:800)
	at org.springframework.data.redis.connection.lettuce.LettuceStringCommands.get(LettuceStringCommands.java:70)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.get(DefaultedRedisConnection.java:267)
	at org.springframework.data.redis.core.DefaultValueOperations$1.inRedis(DefaultValueOperations.java:57)
	at org.springframework.data.redis.core.AbstractOperations$ValueDeserializingRedisCallback.doInRedis(AbstractOperations.java:60)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:229)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:189)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:96)
	at org.springframework.data.redis.core.DefaultValueOperations.get(DefaultValueOperations.java:53)
	at com.jonm.service.impl.RedisServiceImpl.getMapByValue(RedisServiceImpl.java:73)
	at com.jonm.service.impl.RedisServiceImpl$$FastClassBySpringCGLIB$$f5f6c692.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.service.impl.RedisServiceImpl$$EnhancerBySpringCGLIB$$b8025e1b.getMapByValue(<generated>)
	at com.jonm.service.impl.RedisServiceImpl$$FastClassBySpringCGLIB$$f5f6c692.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.service.impl.RedisServiceImpl$$EnhancerBySpringCGLIB$$c9f3205.getMapByValue(<generated>)
	at com.jonm.service.impl.SiteSettingServiceImpl.getSiteInfo(SiteSettingServiceImpl.java:65)
	at com.jonm.service.impl.SiteSettingServiceImpl$$FastClassBySpringCGLIB$$57805c44.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.service.impl.SiteSettingServiceImpl$$EnhancerBySpringCGLIB$$1627b338.getSiteInfo(<generated>)
	at com.jonm.service.impl.SiteSettingServiceImpl$$FastClassBySpringCGLIB$$57805c44.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.service.impl.SiteSettingServiceImpl$$EnhancerBySpringCGLIB$$abd2ef2e.getSiteInfo(<generated>)
	at com.jonm.controller.IndexController.site(IndexController.java:43)
	at com.jonm.controller.IndexController$$FastClassBySpringCGLIB$$f0fdad99.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.controller.IndexController$$EnhancerBySpringCGLIB$$c60b5f1a.site(<generated>)
	at com.jonm.controller.IndexController$$FastClassBySpringCGLIB$$f0fdad99.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.controller.IndexController$$EnhancerBySpringCGLIB$$4e74cb4.site(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:893)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:807)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1061)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:961)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.jonm.config.JwtFilter.doFilter(JwtFilter.java:35)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:218)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out after 10 second(s)
	at io.lettuce.core.internal.ExceptionFactory.createTimeoutException(ExceptionFactory.java:53)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:246)
	at io.lettuce.core.FutureSyncInvocationHandler.handleInvocation(FutureSyncInvocationHandler.java:75)
	at io.lettuce.core.internal.AbstractInvocationHandler.invoke(AbstractInvocationHandler.java:80)
	at com.sun.proxy.$Proxy115.get(Unknown Source)
	at org.springframework.data.redis.connection.lettuce.LettuceStringCommands.get(LettuceStringCommands.java:68)
	... 172 more
(String), 192.168.189.1(String), 内网IP|内网IP(String), Windows 10(String), Chrome 88.0.4324.182(String), 2021-03-31 15:31:35.887(Timestamp), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.182 Safari/537.36(String)
""2021-03-31 === [task-18] == DEBUG == com.jonm.dao.ExceptionLogMapper.saveExceptionLog == <==    Updates: 1
""2021-03-31 === [lettuce-eventExecutorLoop-1-3] == INFO  == io.lettuce.core.protocol.ConnectionWatchdog == Reconnecting, last destination was /159.75.123.105:6379
""2021-03-31 === [lettuce-nioEventLoop-4-4] == INFO  == io.lettuce.core.protocol.ReconnectionHandler == Reconnected to 159.75.123.105:6379
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-6] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == ==>  Preparing: select id,name_en,name_zh,value,type from site_setting
""2021-03-31 === [http-nio-8090-exec-6] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-5] == DEBUG == c.j.d.B.getBlogInfoListByIsPublished_COUNT == ==>  Preparing: SELECT count(0) FROM blog AS b LEFT JOIN category AS c ON b.category_id = c.id WHERE b.is_published = true
""2021-03-31 === [http-nio-8090-exec-5] == DEBUG == c.j.d.B.getBlogInfoListByIsPublished_COUNT == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == c.j.d.B.getBlogInfoListByIsPublished_COUNT == <==    Columns: count(0)
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==    Columns: id, name_en, name_zh, value, type
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == c.j.d.B.getBlogInfoListByIsPublished_COUNT == <==        Row: 1
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 1, webTitleSuffix, 网页标题后缀, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-5] == DEBUG == c.j.d.B.getBlogInfoListByIsPublished_COUNT == <==      Total: 1
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 2, blogName, 博客名称, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 3, footerImgTitle, 页脚图片标题, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 4, footerImgUrl, 页脚图片路径, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 5, copyright, Copyright, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 6, beian, ICP备案号, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 7, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 8, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 9, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 10, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 11, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 12, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 13, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 14, avatar, 头像路径, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 15, name, 昵称, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 16, rollText, 滚动个签, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 17, github, GitHub地址, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 18, qq, QQ链接, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 19, bilibili, bilibili链接, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 20, netease, 网易云音乐, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 21, email, email, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 22, favorite, 自定义, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 24, favorite, 自定义, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 25, reward, 赞赏码路径, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 26, commentAdminFlag, 博主评论标识, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 27, friendContent, 友链页面信息, <<BLOB>>, 4
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 28, friendCommentEnabled, 友链页面评论开关, <<BLOB>>, 4
""2021-03-31 === [http-nio-8090-exec-6] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == <==      Total: 27
""2021-03-31 === [http-nio-8090-exec-5] == DEBUG == c.jonm.dao.BlogMapper.getBlogInfoListByIsPublished == ==>  Preparing: SELECT b.id, b.title, b.description, b.is_top, b.create_time, b.views, b.words, b.read_time, b.password, c.category_name FROM blog AS b LEFT JOIN category AS c ON b.category_id = c.id WHERE b.is_published = true order by is_top desc, create_time desc LIMIT ?
""2021-03-31 === [http-nio-8090-exec-5] == DEBUG == c.jonm.dao.BlogMapper.getBlogInfoListByIsPublished == ==> Parameters: 5(Integer)
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == c.jonm.dao.BlogMapper.getBlogInfoListByIsPublished == <==    Columns: id, title, description, is_top, create_time, views, words, read_time, password, category_name
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == c.jonm.dao.BlogMapper.getBlogInfoListByIsPublished == <==        Row: 1, Test, <<BLOB>>, 0, 2021-03-28 17:00:05, 0, 1413, 7, , 个人项目
""2021-03-31 === [http-nio-8090-exec-5] == DEBUG == c.jonm.dao.BlogMapper.getBlogInfoListByIsPublished == <==      Total: 1
""2021-03-31 === [http-nio-8090-exec-5] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == ==>  Preparing: select t.tag_name, t.color from blog_tag as bt left join tag as t on bt.tag_id=t.id where bt.blog_id=?
""2021-03-31 === [http-nio-8090-exec-5] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == ==> Parameters: 1(Long)
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.TagMapper.getTagListByBlogId == <==    Columns: tag_name, color
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.TagMapper.getTagListByBlogId == <==        Row: Mysql, null
""2021-03-31 === [http-nio-8090-exec-5] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == <==      Total: 1
""2021-03-31 === [http-nio-8090-exec-6] == DEBUG == c.j.d.B.getNewBlogListByIsPublishedAndIsRecommend_COUNT == ==>  Preparing: SELECT count(0) FROM blog WHERE is_published = true AND is_recommend = true
""2021-03-31 === [http-nio-8090-exec-6] == DEBUG == c.j.d.B.getNewBlogListByIsPublishedAndIsRecommend_COUNT == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == c.j.d.B.getNewBlogListByIsPublishedAndIsRecommend_COUNT == <==    Columns: count(0)
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == c.j.d.B.getNewBlogListByIsPublishedAndIsRecommend_COUNT == <==        Row: 1
""2021-03-31 === [http-nio-8090-exec-6] == DEBUG == c.j.d.B.getNewBlogListByIsPublishedAndIsRecommend_COUNT == <==      Total: 1
""2021-03-31 === [http-nio-8090-exec-6] == DEBUG == c.j.d.B.getNewBlogListByIsPublishedAndIsRecommend == ==>  Preparing: select id, title, password from blog where is_published=true and is_recommend=true order by create_time desc LIMIT ?
""2021-03-31 === [http-nio-8090-exec-6] == DEBUG == c.j.d.B.getNewBlogListByIsPublishedAndIsRecommend == ==> Parameters: 3(Integer)
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == c.j.d.B.getNewBlogListByIsPublishedAndIsRecommend == <==    Columns: id, title, password
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == c.j.d.B.getNewBlogListByIsPublishedAndIsRecommend == <==        Row: 1, Test, 
""2021-03-31 === [http-nio-8090-exec-6] == DEBUG == c.j.d.B.getNewBlogListByIsPublishedAndIsRecommend == <==      Total: 1
""2021-03-31 === [http-nio-8090-exec-5] == DEBUG == com.jonm.dao.VisitorMapper.hasUUID == ==>  Preparing: select ifnull((select 1 from visitor where uuid=? limit 1), 0)
""2021-03-31 === [http-nio-8090-exec-5] == DEBUG == com.jonm.dao.VisitorMapper.hasUUID == ==> Parameters: 4dd1655d-cd02-41a2-8621-80c525ac4cef(String)
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.VisitorMapper.hasUUID == <==    Columns: ifnull((select 1 from visitor where uuid='4dd1655d-cd02-41a2-8621-80c525ac4cef' limit 1), 0)
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.VisitorMapper.hasUUID == <==        Row: 1
""2021-03-31 === [http-nio-8090-exec-5] == DEBUG == com.jonm.dao.VisitorMapper.hasUUID == <==      Total: 1
""2021-03-31 === [http-nio-8090-exec-6] == DEBUG == com.jonm.dao.CategoryMapper.getCategoryNameList == ==>  Preparing: select category_name from category order by id desc
""2021-03-31 === [http-nio-8090-exec-6] == DEBUG == com.jonm.dao.CategoryMapper.getCategoryNameList == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.CategoryMapper.getCategoryNameList == <==    Columns: category_name
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.CategoryMapper.getCategoryNameList == <==        Row: 个人项目
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.CategoryMapper.getCategoryNameList == <==        Row: 项目
""2021-03-31 === [http-nio-8090-exec-6] == DEBUG == com.jonm.dao.CategoryMapper.getCategoryNameList == <==      Total: 2
""2021-03-31 === [http-nio-8090-exec-6] == DEBUG == com.jonm.dao.TagMapper.getTagListNotId == ==>  Preparing: select tag_name, color from tag order by id desc
""2021-03-31 === [http-nio-8090-exec-6] == DEBUG == com.jonm.dao.TagMapper.getTagListNotId == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.TagMapper.getTagListNotId == <==    Columns: tag_name, color
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.TagMapper.getTagListNotId == <==        Row: Mysql, null
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.TagMapper.getTagListNotId == <==        Row: Java, null
""2021-03-31 === [http-nio-8090-exec-6] == DEBUG == com.jonm.dao.TagMapper.getTagListNotId == <==      Total: 2
""2021-03-31 === [task-19] == DEBUG == com.jonm.dao.VisitLogMapper.saveVisitLog == ==>  Preparing: insert into visit_log (uuid, uri, method, param, behavior, content, remark, ip, ip_source, os, browser, times, create_time, user_agent) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
""2021-03-31 === [task-19] == DEBUG == com.jonm.dao.VisitLogMapper.saveVisitLog == ==> Parameters: 4dd1655d-cd02-41a2-8621-80c525ac4cef(String), /blogs(String), GET(String), {"pageNum":1}(String), 访问页面(String), 首页(String), 第1页(String), 192.168.189.1(String), 内网IP|内网IP(String), Windows 10(String), Chrome 88.0.4324.182(String), 134(Integer), 2021-03-31 15:31:46.936(Timestamp), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.182 Safari/537.36(String)
""2021-03-31 === [task-19] == DEBUG == com.jonm.dao.VisitLogMapper.saveVisitLog == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-6] == DEBUG == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == ==>  Preparing: select b.id, b.title, b.password, c.category_name from blog as b left join category as c on b.category_id=c.id where b.is_published=true order by rand() limit ?
""2021-03-31 === [http-nio-8090-exec-6] == DEBUG == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == ==> Parameters: 5(Integer)
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == <==    Columns: id, title, password, category_name
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == <==        Row: 1, Test, , 个人项目
""2021-03-31 === [http-nio-8090-exec-6] == DEBUG == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == <==      Total: 1
""2021-03-31 === [http-nio-8090-exec-6] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == ==>  Preparing: select t.tag_name, t.color from blog_tag as bt left join tag as t on bt.tag_id=t.id where bt.blog_id=?
""2021-03-31 === [http-nio-8090-exec-6] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == ==> Parameters: 1(Long)
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.TagMapper.getTagListByBlogId == <==    Columns: tag_name, color
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.TagMapper.getTagListByBlogId == <==        Row: Mysql, null
""2021-03-31 === [http-nio-8090-exec-6] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == <==      Total: 1
""2021-03-31 === [SpringContextShutdownHook] == INFO  == org.quartz.core.QuartzScheduler == Scheduler quartzScheduler_$_NON_CLUSTERED paused.
""2021-03-31 === [SpringContextShutdownHook] == INFO  == o.s.scheduling.concurrent.ThreadPoolTaskExecutor == Shutting down ExecutorService 'applicationTaskExecutor'
""2021-03-31 === [SpringContextShutdownHook] == INFO  == o.s.scheduling.quartz.SchedulerFactoryBean == Shutting down Quartz Scheduler
""2021-03-31 === [SpringContextShutdownHook] == INFO  == org.quartz.core.QuartzScheduler == Scheduler quartzScheduler_$_NON_CLUSTERED shutting down.
""2021-03-31 === [SpringContextShutdownHook] == INFO  == org.quartz.core.QuartzScheduler == Scheduler quartzScheduler_$_NON_CLUSTERED paused.
""2021-03-31 === [SpringContextShutdownHook] == INFO  == org.quartz.core.QuartzScheduler == Scheduler quartzScheduler_$_NON_CLUSTERED shutdown complete.
""2021-03-31 === [SpringContextShutdownHook] == INFO  == com.alibaba.druid.pool.DruidDataSource == {dataSource-1} closing ...
""2021-03-31 === [SpringContextShutdownHook] == INFO  == com.alibaba.druid.pool.DruidDataSource == {dataSource-1} closed
""2021-03-31 === [main] == INFO  == com.jonm.BlogApiApplication == Starting BlogApiApplication using Java 1.8.0_261 on Jonm with PID 10844 (D:\Users\lhz17\Desktop\01\NBlog-master\blog-api\target\classes started by lhz17 in D:\Users\lhz17\Desktop\01\NBlog-master\blog-api)
""2021-03-31 === [main] == DEBUG == com.jonm.BlogApiApplication == Running with Spring Boot v2.4.0, Spring v5.3.1
""2021-03-31 === [main] == INFO  == com.jonm.BlogApiApplication == The following profiles are active: dev
""2021-03-31 === [main] == INFO  == o.s.d.r.config.RepositoryConfigurationDelegate == Multiple Spring Data modules found, entering strict repository configuration mode!
""2021-03-31 === [main] == INFO  == o.s.d.r.config.RepositoryConfigurationDelegate == Bootstrapping Spring Data Redis repositories in DEFAULT mode.
""2021-03-31 === [main] == INFO  == o.s.d.r.config.RepositoryConfigurationDelegate == Finished Spring Data repository scanning in 94 ms. Found 0 Redis repository interfaces.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == INFO  == o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker == Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
""2021-03-31 === [main] == INFO  == o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker == Bean 'spring.datasource.druid-com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties' of type [com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
""2021-03-31 === [main] == INFO  == o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker == Bean 'advisor' of type [org.springframework.aop.support.RegexpMethodPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
""2021-03-31 === [main] == INFO  == o.s.boot.web.embedded.tomcat.TomcatWebServer == Tomcat initialized with port(s): 8090 (http)
""2021-03-31 === [main] == INFO  == org.apache.catalina.core.StandardService == Starting service [Tomcat]
""2021-03-31 === [main] == INFO  == org.apache.catalina.core.StandardEngine == Starting Servlet engine: [Apache Tomcat/9.0.39]
""2021-03-31 === [main] == INFO  == o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] == Initializing Spring embedded WebApplicationContext
""2021-03-31 === [main] == INFO  == o.s.b.w.s.c.ServletWebServerApplicationContext == Root WebApplicationContext: initialization completed in 2752 ms
""2021-03-31 === [main] == INFO  == n.b.p.useragent.AbstractUserAgentAnalyzerDirect == - Loaded 90 files in  632 msec using expression: classpath*:UserAgents/**/*.yaml
""2021-03-31 === [main] == INFO  == nl.basjes.parse.useragent.utils.YauaaVersion == 
""2021-03-31 === [main] == INFO  == nl.basjes.parse.useragent.utils.YauaaVersion == /-----------------------------------------------------------\
""2021-03-31 === [main] == INFO  == nl.basjes.parse.useragent.utils.YauaaVersion == | Yauaa 5.20 (v5.20 @ 2020-11-22T15:39:16Z)                 |
""2021-03-31 === [main] == INFO  == nl.basjes.parse.useragent.utils.YauaaVersion == +-----------------------------------------------------------+
""2021-03-31 === [main] == INFO  == nl.basjes.parse.useragent.utils.YauaaVersion == | For more information: https://yauaa.basjes.nl             |
""2021-03-31 === [main] == INFO  == nl.basjes.parse.useragent.utils.YauaaVersion == | Copyright (C) 2013-2020 Niels Basjes - License Apache 2.0 |
""2021-03-31 === [main] == INFO  == nl.basjes.parse.useragent.utils.YauaaVersion == \-----------------------------------------------------------/
""2021-03-31 === [main] == INFO  == nl.basjes.parse.useragent.utils.YauaaVersion == 
""2021-03-31 === [main] == INFO  == n.b.p.useragent.AbstractUserAgentAnalyzerDirect == Building all needed matchers for the requested 11 fields.
""2021-03-31 === [main] == INFO  == com.alibaba.druid.pool.DruidDataSource == {dataSource-1} inited
""2021-03-31 === [main] == DEBUG == com.jonm.dao.BlogMapper.getBlogViewsList == ==>  Preparing: select id, views from blog
""2021-03-31 === [main] == DEBUG == com.jonm.dao.BlogMapper.getBlogViewsList == ==> Parameters: 
""2021-03-31 === [main] == TRACE == com.jonm.dao.BlogMapper.getBlogViewsList == <==    Columns: id, views
""2021-03-31 === [main] == TRACE == com.jonm.dao.BlogMapper.getBlogViewsList == <==        Row: 1, 0
""2021-03-31 === [main] == DEBUG == com.jonm.dao.BlogMapper.getBlogViewsList == <==      Total: 1
""2021-03-31 === [main] == INFO  == org.quartz.impl.StdSchedulerFactory == Using default implementation for ThreadExecutor
""2021-03-31 === [main] == INFO  == org.quartz.core.SchedulerSignalerImpl == Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
""2021-03-31 === [main] == INFO  == org.quartz.core.QuartzScheduler == Quartz Scheduler v.2.3.2 created.
""2021-03-31 === [main] == INFO  == org.quartz.simpl.RAMJobStore == RAMJobStore initialized.
""2021-03-31 === [main] == INFO  == org.quartz.core.QuartzScheduler == Scheduler meta-data: Quartz Scheduler (v2.3.2) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

""2021-03-31 === [main] == INFO  == org.quartz.impl.StdSchedulerFactory == Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
""2021-03-31 === [main] == INFO  == org.quartz.impl.StdSchedulerFactory == Quartz scheduler version: 2.3.2
""2021-03-31 === [main] == INFO  == org.quartz.core.QuartzScheduler == JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@503eac4c
""2021-03-31 === [main] == DEBUG == com.jonm.dao.ScheduleJobMapper.getJobList == ==>  Preparing: select job_id, bean_name, method_name, params, cron, status, remark, create_time from schedule_job
""2021-03-31 === [main] == DEBUG == com.jonm.dao.ScheduleJobMapper.getJobList == ==> Parameters: 
""2021-03-31 === [main] == TRACE == com.jonm.dao.ScheduleJobMapper.getJobList == <==    Columns: job_id, bean_name, method_name, params, cron, status, remark, create_time
""2021-03-31 === [main] == TRACE == com.jonm.dao.ScheduleJobMapper.getJobList == <==        Row: 1, redisSyncScheduleTask, syncBlogViewsToDatabase, , 0 0 1 * * ?, 1, 每天凌晨一点，从Redis将博客浏览量同步到数据库, 2020-11-17 23:45:42
""2021-03-31 === [main] == TRACE == com.jonm.dao.ScheduleJobMapper.getJobList == <==        Row: 2, visitorSyncScheduleTask, syncVisitInfoToDatabase, , 0 0 0 * * ?, 1, 清空当天Redis访客标识，记录当天的PV和UV，更新当天所有访客的PV和最后访问时间，更新城市新增访客UV数, 2021-02-05 08:14:28
""2021-03-31 === [main] == DEBUG == com.jonm.dao.ScheduleJobMapper.getJobList == <==      Total: 2
""2021-03-31 === [main] == INFO  == s.d.s.w.PropertySourcedRequestMappingHandlerMapping == Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
""2021-03-31 === [main] == INFO  == o.s.scheduling.concurrent.ThreadPoolTaskExecutor == Initializing ExecutorService 'applicationTaskExecutor'
""2021-03-31 === [main] == INFO  == o.s.security.web.DefaultSecurityFilterChain == Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@495fa126, org.springframework.security.web.context.SecurityContextPersistenceFilter@419e46bb, org.springframework.security.web.header.HeaderWriterFilter@29e94753, org.springframework.web.filter.CorsFilter@392da875, org.springframework.security.web.authentication.logout.LogoutFilter@1314700e, com.jonm.config.JwtLoginFilter@68603829, com.jonm.config.JwtFilter@6e2ab1f4, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@61f26cba, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1bff70a6, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5a487b86, org.springframework.security.web.session.SessionManagementFilter@6224872f, org.springframework.security.web.access.ExceptionTranslationFilter@3be3ba84, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@22523986]
""2021-03-31 === [main] == INFO  == o.s.boot.web.embedded.tomcat.TomcatWebServer == Tomcat started on port(s): 8090 (http) with context path ''
""2021-03-31 === [main] == INFO  == s.d.s.web.plugins.DocumentationPluginsBootstrapper == Context refreshed
""2021-03-31 === [main] == INFO  == s.d.s.web.plugins.DocumentationPluginsBootstrapper == Found 1 custom documentation plugin(s)
""2021-03-31 === [main] == INFO  == s.d.spring.web.scanners.ApiListingReferenceScanner == Scanning for api listing references
""2021-03-31 === [main] == INFO  == s.d.s.w.r.operation.CachingOperationNameGenerator == Generating unique operation named: aboutUsingGET_1
""2021-03-31 === [main] == INFO  == s.d.s.w.r.operation.CachingOperationNameGenerator == Generating unique operation named: blogsUsingGET_1
""2021-03-31 === [main] == INFO  == s.d.s.w.r.operation.CachingOperationNameGenerator == Generating unique operation named: getBlogUsingGET_1
""2021-03-31 === [main] == INFO  == s.d.s.w.r.operation.CachingOperationNameGenerator == Generating unique operation named: deleteUsingDELETE_1
""2021-03-31 === [main] == INFO  == s.d.s.w.r.operation.CachingOperationNameGenerator == Generating unique operation named: deleteUsingDELETE_2
""2021-03-31 === [main] == INFO  == s.d.s.w.r.operation.CachingOperationNameGenerator == Generating unique operation named: commentsUsingGET_1
""2021-03-31 === [main] == INFO  == s.d.s.w.r.operation.CachingOperationNameGenerator == Generating unique operation named: deleteUsingDELETE_3
""2021-03-31 === [main] == INFO  == s.d.s.w.r.operation.CachingOperationNameGenerator == Generating unique operation named: updatePublishedUsingPUT_1
""2021-03-31 === [main] == INFO  == s.d.s.w.r.operation.CachingOperationNameGenerator == Generating unique operation named: friendsUsingGET_1
""2021-03-31 === [main] == INFO  == s.d.s.w.r.operation.CachingOperationNameGenerator == Generating unique operation named: deleteUsingDELETE_4
""2021-03-31 === [main] == INFO  == s.d.s.w.r.operation.CachingOperationNameGenerator == Generating unique operation named: updatePublishedUsingPUT_2
""2021-03-31 === [main] == INFO  == s.d.s.w.r.operation.CachingOperationNameGenerator == Generating unique operation named: momentsUsingGET_1
""2021-03-31 === [main] == INFO  == s.d.s.w.r.operation.CachingOperationNameGenerator == Generating unique operation named: deleteUsingDELETE_5
""2021-03-31 === [main] == INFO  == s.d.s.w.r.operation.CachingOperationNameGenerator == Generating unique operation named: deleteUsingDELETE_6
""2021-03-31 === [main] == INFO  == s.d.s.w.r.operation.CachingOperationNameGenerator == Generating unique operation named: deleteUsingDELETE_7
""2021-03-31 === [main] == INFO  == s.d.s.w.r.operation.CachingOperationNameGenerator == Generating unique operation named: deleteUsingDELETE_8
""2021-03-31 === [main] == INFO  == s.d.s.w.r.operation.CachingOperationNameGenerator == Generating unique operation named: deleteUsingDELETE_9
""2021-03-31 === [main] == INFO  == o.s.scheduling.quartz.SchedulerFactoryBean == Starting Quartz Scheduler now
""2021-03-31 === [main] == INFO  == org.quartz.core.QuartzScheduler == Scheduler quartzScheduler_$_NON_CLUSTERED started.
""2021-03-31 === [main] == INFO  == com.jonm.BlogApiApplication == Started BlogApiApplication in 9.84 seconds (JVM running for 12.613)
""2021-03-31 === [http-nio-8090-exec-1] == INFO  == o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] == Initializing Spring DispatcherServlet 'dispatcherServlet'
""2021-03-31 === [http-nio-8090-exec-1] == INFO  == org.springframework.web.servlet.DispatcherServlet == Initializing Servlet 'dispatcherServlet'
""2021-03-31 === [http-nio-8090-exec-1] == INFO  == org.springframework.web.servlet.DispatcherServlet == Completed initialization in 2 ms
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-2] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == ==>  Preparing: select b.id, b.title, b.password, c.category_name from blog as b left join category as c on b.category_id=c.id where b.is_published=true order by rand() limit ?
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == ==> Parameters: 5(Integer)
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == <==    Columns: id, title, password, category_name
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == <==        Row: 1, Test, , 个人项目
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == <==      Total: 1
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == ==>  Preparing: select t.tag_name, t.color from blog_tag as bt left join tag as t on bt.tag_id=t.id where bt.blog_id=?
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == ==> Parameters: 1(Long)
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.TagMapper.getTagListByBlogId == <==    Columns: tag_name, color
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.TagMapper.getTagListByBlogId == <==        Row: Mysql, null
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == <==      Total: 1
""2021-03-31 === [task-1] == INFO  == n.b.p.useragent.AbstractUserAgentAnalyzerDirect == Initializing Analyzer data structures
""2021-03-31 === [task-1] == INFO  == n.b.p.useragent.AbstractUserAgentAnalyzerDirect == Built in 1583 msec : Hashmap 114881, Ranges map:2900
""2021-03-31 === [task-1] == DEBUG == com.jonm.dao.VisitLogMapper.saveVisitLog == ==>  Preparing: insert into visit_log (uuid, uri, method, param, behavior, content, remark, ip, ip_source, os, browser, times, create_time, user_agent) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
""2021-03-31 === [task-1] == DEBUG == com.jonm.dao.VisitLogMapper.saveVisitLog == ==> Parameters: 4dd1655d-cd02-41a2-8621-80c525ac4cef(String), /blogs(String), GET(String), {"pageNum":1}(String), 访问页面(String), 首页(String), 第1页(String), 192.168.189.1(String), 内网IP|内网IP(String), Windows 10(String), Chrome 88.0.4324.182(String), 657(Integer), 2021-03-31 15:38:54.421(Timestamp), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.182 Safari/537.36(String)
""2021-03-31 === [task-1] == DEBUG == com.jonm.dao.VisitLogMapper.saveVisitLog == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [task-2] == DEBUG == com.jonm.dao.ExceptionLogMapper.saveExceptionLog == ==>  Preparing: insert into exception_log (uri, method, param, description, error, ip, ip_source, os, browser, create_time, user_agent) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
""2021-03-31 === [task-2] == DEBUG == com.jonm.dao.ExceptionLogMapper.saveExceptionLog == ==> Parameters: /site(String), GET(String), {}(String), (String), org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out after 10 second(s)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:272)
	at org.springframework.data.redis.connection.lettuce.LettuceStringCommands.convertLettuceAccessException(LettuceStringCommands.java:800)
	at org.springframework.data.redis.connection.lettuce.LettuceStringCommands.get(LettuceStringCommands.java:70)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.get(DefaultedRedisConnection.java:267)
	at org.springframework.data.redis.core.DefaultValueOperations$1.inRedis(DefaultValueOperations.java:57)
	at org.springframework.data.redis.core.AbstractOperations$ValueDeserializingRedisCallback.doInRedis(AbstractOperations.java:60)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:229)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:189)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:96)
	at org.springframework.data.redis.core.DefaultValueOperations.get(DefaultValueOperations.java:53)
	at com.jonm.service.impl.RedisServiceImpl.getMapByValue(RedisServiceImpl.java:73)
	at com.jonm.service.impl.RedisServiceImpl$$FastClassBySpringCGLIB$$f5f6c692.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.service.impl.RedisServiceImpl$$EnhancerBySpringCGLIB$$8b3e56ea.getMapByValue(<generated>)
	at com.jonm.service.impl.RedisServiceImpl$$FastClassBySpringCGLIB$$f5f6c692.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.service.impl.RedisServiceImpl$$EnhancerBySpringCGLIB$$dfdb2ad4.getMapByValue(<generated>)
	at com.jonm.service.impl.SiteSettingServiceImpl.getSiteInfo(SiteSettingServiceImpl.java:65)
	at com.jonm.service.impl.SiteSettingServiceImpl$$FastClassBySpringCGLIB$$57805c44.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.service.impl.SiteSettingServiceImpl$$EnhancerBySpringCGLIB$$256059a2.getSiteInfo(<generated>)
	at com.jonm.service.impl.SiteSettingServiceImpl$$FastClassBySpringCGLIB$$57805c44.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.service.impl.SiteSettingServiceImpl$$EnhancerBySpringCGLIB$$bb0b9598.getSiteInfo(<generated>)
	at com.jonm.controller.IndexController.site(IndexController.java:43)
	at com.jonm.controller.IndexController$$FastClassBySpringCGLIB$$f0fdad99.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.controller.IndexController$$EnhancerBySpringCGLIB$$fb6011c7.site(<generated>)
	at com.jonm.controller.IndexController$$FastClassBySpringCGLIB$$f0fdad99.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.controller.IndexController$$EnhancerBySpringCGLIB$$d8234583.site(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:893)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:807)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1061)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:961)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.jonm.config.JwtFilter.doFilter(JwtFilter.java:35)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:218)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out after 10 second(s)
	at io.lettuce.core.internal.ExceptionFactory.createTimeoutException(ExceptionFactory.java:53)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:246)
	at io.lettuce.core.FutureSyncInvocationHandler.handleInvocation(FutureSyncInvocationHandler.java:75)
	at io.lettuce.core.internal.AbstractInvocationHandler.invoke(AbstractInvocationHandler.java:80)
	at com.sun.proxy.$Proxy115.get(Unknown Source)
	at org.springframework.data.redis.connection.lettuce.LettuceStringCommands.get(LettuceStringCommands.java:68)
	... 172 more
(String), 192.168.189.1(String), 内网IP|内网IP(String), Windows 10(String), Chrome 88.0.4324.182(String), 2021-03-31 16:07:41.585(Timestamp), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.182 Safari/537.36(String)
""2021-03-31 === [http-nio-8090-exec-7] == ERROR == com.jonm.handler.ControllerExceptionHandler == Request URL : http://localhost:8090/site, Exception :
"org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out after 10 second(s)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:272)
	at org.springframework.data.redis.connection.lettuce.LettuceStringCommands.convertLettuceAccessException(LettuceStringCommands.java:800)
	at org.springframework.data.redis.connection.lettuce.LettuceStringCommands.get(LettuceStringCommands.java:70)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.get(DefaultedRedisConnection.java:267)
	at org.springframework.data.redis.core.DefaultValueOperations$1.inRedis(DefaultValueOperations.java:57)
	at org.springframework.data.redis.core.AbstractOperations$ValueDeserializingRedisCallback.doInRedis(AbstractOperations.java:60)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:229)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:189)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:96)
	at org.springframework.data.redis.core.DefaultValueOperations.get(DefaultValueOperations.java:53)
	at com.jonm.service.impl.RedisServiceImpl.getMapByValue(RedisServiceImpl.java:73)
	at com.jonm.service.impl.RedisServiceImpl$$FastClassBySpringCGLIB$$f5f6c692.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.service.impl.RedisServiceImpl$$EnhancerBySpringCGLIB$$8b3e56ea.getMapByValue(<generated>)
	at com.jonm.service.impl.RedisServiceImpl$$FastClassBySpringCGLIB$$f5f6c692.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.service.impl.RedisServiceImpl$$EnhancerBySpringCGLIB$$dfdb2ad4.getMapByValue(<generated>)
	at com.jonm.service.impl.SiteSettingServiceImpl.getSiteInfo(SiteSettingServiceImpl.java:65)
	at com.jonm.service.impl.SiteSettingServiceImpl$$FastClassBySpringCGLIB$$57805c44.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.service.impl.SiteSettingServiceImpl$$EnhancerBySpringCGLIB$$256059a2.getSiteInfo(<generated>)
	at com.jonm.service.impl.SiteSettingServiceImpl$$FastClassBySpringCGLIB$$57805c44.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.service.impl.SiteSettingServiceImpl$$EnhancerBySpringCGLIB$$bb0b9598.getSiteInfo(<generated>)
	at com.jonm.controller.IndexController.site(IndexController.java:43)
	at com.jonm.controller.IndexController$$FastClassBySpringCGLIB$$f0fdad99.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.controller.IndexController$$EnhancerBySpringCGLIB$$fb6011c7.site(<generated>)
	at com.jonm.controller.IndexController$$FastClassBySpringCGLIB$$f0fdad99.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.controller.IndexController$$EnhancerBySpringCGLIB$$d8234583.site(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:893)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:807)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1061)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:961)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.jonm.config.JwtFilter.doFilter(JwtFilter.java:35)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:218)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out after 10 second(s)
	at io.lettuce.core.internal.ExceptionFactory.createTimeoutException(ExceptionFactory.java:53)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:246)
	at io.lettuce.core.FutureSyncInvocationHandler.handleInvocation(FutureSyncInvocationHandler.java:75)
	at io.lettuce.core.internal.AbstractInvocationHandler.invoke(AbstractInvocationHandler.java:80)
	at com.sun.proxy.$Proxy115.get(Unknown Source)
	at org.springframework.data.redis.connection.lettuce.LettuceStringCommands.get(LettuceStringCommands.java:68)
	... 172 common frames omitted
"2021-03-31 === [task-2] == DEBUG == com.jonm.dao.ExceptionLogMapper.saveExceptionLog == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-8] == ERROR == com.jonm.handler.ControllerExceptionHandler == Request URL : http://localhost:8090/blogs, Exception :
"org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out after 10 second(s)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:272)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.convertLettuceAccessException(LettuceHashCommands.java:472)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.hExists(LettuceHashCommands.java:148)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.hExists(DefaultedRedisConnection.java:1131)
	at org.springframework.data.redis.core.DefaultHashOperations.lambda$hasKey$1(DefaultHashOperations.java:67)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:229)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:189)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:96)
	at org.springframework.data.redis.core.DefaultHashOperations.hasKey(DefaultHashOperations.java:67)
	at com.jonm.service.impl.RedisServiceImpl.getBlogInfoPageResultByHash(RedisServiceImpl.java:26)
	at com.jonm.service.impl.RedisServiceImpl$$FastClassBySpringCGLIB$$f5f6c692.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.service.impl.RedisServiceImpl$$EnhancerBySpringCGLIB$$8b3e56ea.getBlogInfoPageResultByHash(<generated>)
	at com.jonm.service.impl.RedisServiceImpl$$FastClassBySpringCGLIB$$f5f6c692.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.service.impl.RedisServiceImpl$$EnhancerBySpringCGLIB$$dfdb2ad4.getBlogInfoPageResultByHash(<generated>)
	at com.jonm.service.impl.BlogServiceImpl.getBlogInfoListByIsPublished(BlogServiceImpl.java:122)
	at com.jonm.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$9bf091db.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$fcb7b0c7.getBlogInfoListByIsPublished(<generated>)
	at com.jonm.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$9bf091db.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1346ac57.getBlogInfoListByIsPublished(<generated>)
	at com.jonm.controller.BlogController.blogs(BlogController.java:46)
	at com.jonm.controller.BlogController$$FastClassBySpringCGLIB$$70670bf3.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at com.jonm.aspect.VisitLogAspect.logAround(VisitLogAspect.java:65)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.controller.BlogController$$EnhancerBySpringCGLIB$$cdc4522b.blogs(<generated>)
	at com.jonm.controller.BlogController$$FastClassBySpringCGLIB$$70670bf3.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.controller.BlogController$$EnhancerBySpringCGLIB$$5b282e4d.blogs(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:893)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:807)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1061)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:961)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.jonm.config.JwtFilter.doFilter(JwtFilter.java:35)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:218)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out after 10 second(s)
	at io.lettuce.core.internal.ExceptionFactory.createTimeoutException(ExceptionFactory.java:53)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:246)
	at io.lettuce.core.FutureSyncInvocationHandler.handleInvocation(FutureSyncInvocationHandler.java:75)
	at io.lettuce.core.internal.AbstractInvocationHandler.invoke(AbstractInvocationHandler.java:80)
	at com.sun.proxy.$Proxy115.hexists(Unknown Source)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.hExists(LettuceHashCommands.java:146)
	... 182 common frames omitted
"2021-03-31 === [task-3] == DEBUG == com.jonm.dao.ExceptionLogMapper.saveExceptionLog == ==>  Preparing: insert into exception_log (uri, method, param, description, error, ip, ip_source, os, browser, create_time, user_agent) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
""2021-03-31 === [task-3] == DEBUG == com.jonm.dao.ExceptionLogMapper.saveExceptionLog == ==> Parameters: /blogs(String), GET(String), {"pageNum":1}(String), 访问页面(String), org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out after 10 second(s)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:272)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.convertLettuceAccessException(LettuceHashCommands.java:472)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.hExists(LettuceHashCommands.java:148)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.hExists(DefaultedRedisConnection.java:1131)
	at org.springframework.data.redis.core.DefaultHashOperations.lambda$hasKey$1(DefaultHashOperations.java:67)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:229)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:189)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:96)
	at org.springframework.data.redis.core.DefaultHashOperations.hasKey(DefaultHashOperations.java:67)
	at com.jonm.service.impl.RedisServiceImpl.getBlogInfoPageResultByHash(RedisServiceImpl.java:26)
	at com.jonm.service.impl.RedisServiceImpl$$FastClassBySpringCGLIB$$f5f6c692.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.service.impl.RedisServiceImpl$$EnhancerBySpringCGLIB$$8b3e56ea.getBlogInfoPageResultByHash(<generated>)
	at com.jonm.service.impl.RedisServiceImpl$$FastClassBySpringCGLIB$$f5f6c692.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.service.impl.RedisServiceImpl$$EnhancerBySpringCGLIB$$dfdb2ad4.getBlogInfoPageResultByHash(<generated>)
	at com.jonm.service.impl.BlogServiceImpl.getBlogInfoListByIsPublished(BlogServiceImpl.java:122)
	at com.jonm.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$9bf091db.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$fcb7b0c7.getBlogInfoListByIsPublished(<generated>)
	at com.jonm.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$9bf091db.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1346ac57.getBlogInfoListByIsPublished(<generated>)
	at com.jonm.controller.BlogController.blogs(BlogController.java:46)
	at com.jonm.controller.BlogController$$FastClassBySpringCGLIB$$70670bf3.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at com.jonm.aspect.VisitLogAspect.logAround(VisitLogAspect.java:65)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.controller.BlogController$$EnhancerBySpringCGLIB$$cdc4522b.blogs(<generated>)
	at com.jonm.controller.BlogController$$FastClassBySpringCGLIB$$70670bf3.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.controller.BlogController$$EnhancerBySpringCGLIB$$5b282e4d.blogs(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:893)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:807)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1061)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:961)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.jonm.config.JwtFilter.doFilter(JwtFilter.java:35)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:218)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out after 10 second(s)
	at io.lettuce.core.internal.ExceptionFactory.createTimeoutException(ExceptionFactory.java:53)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:246)
	at io.lettuce.core.FutureSyncInvocationHandler.handleInvocation(FutureSyncInvocationHandler.java:75)
	at io.lettuce.core.internal.AbstractInvocationHandler.invoke(AbstractInvocationHandler.java:80)
	at com.sun.proxy.$Proxy115.hexists(Unknown Source)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.hExists(LettuceHashCommands.java:146)
	... 182 more
(String), 192.168.189.1(String), 内网IP|内网IP(String), Windows 10(String), Chrome 88.0.4324.182(String), 2021-03-31 16:07:41.585(Timestamp), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.182 Safari/537.36(String)
""2021-03-31 === [task-3] == DEBUG == com.jonm.dao.ExceptionLogMapper.saveExceptionLog == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [lettuce-eventExecutorLoop-1-8] == INFO  == io.lettuce.core.protocol.ConnectionWatchdog == Reconnecting, last destination was /159.75.123.105:6379
""2021-03-31 === [lettuce-nioEventLoop-4-2] == INFO  == io.lettuce.core.protocol.ReconnectionHandler == Reconnected to 159.75.123.105:6379
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == ==>  Preparing: select id,name_en,name_zh,value,type from site_setting
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==    Columns: id, name_en, name_zh, value, type
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 1, webTitleSuffix, 网页标题后缀, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 2, blogName, 博客名称, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 3, footerImgTitle, 页脚图片标题, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 4, footerImgUrl, 页脚图片路径, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 5, copyright, Copyright, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 6, beian, ICP备案号, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 7, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 8, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 9, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 10, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 11, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 12, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 13, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 14, avatar, 头像路径, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 15, name, 昵称, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 16, rollText, 滚动个签, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 17, github, GitHub地址, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 18, qq, QQ链接, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 19, bilibili, bilibili链接, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 20, netease, 网易云音乐, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 21, email, email, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 22, favorite, 自定义, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 24, favorite, 自定义, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 25, reward, 赞赏码路径, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 26, commentAdminFlag, 博主评论标识, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 27, friendContent, 友链页面信息, <<BLOB>>, 4
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 28, friendCommentEnabled, 友链页面评论开关, <<BLOB>>, 4
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == <==      Total: 27
""2021-03-31 === [http-nio-8090-exec-10] == DEBUG == c.j.d.B.getBlogInfoListByIsPublished_COUNT == ==>  Preparing: SELECT count(0) FROM blog AS b LEFT JOIN category AS c ON b.category_id = c.id WHERE b.is_published = true
""2021-03-31 === [http-nio-8090-exec-10] == DEBUG == c.j.d.B.getBlogInfoListByIsPublished_COUNT == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == c.j.d.B.getBlogInfoListByIsPublished_COUNT == <==    Columns: count(0)
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == c.j.d.B.getBlogInfoListByIsPublished_COUNT == <==        Row: 1
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == c.j.d.B.getNewBlogListByIsPublishedAndIsRecommend_COUNT == ==>  Preparing: SELECT count(0) FROM blog WHERE is_published = true AND is_recommend = true
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == c.j.d.B.getNewBlogListByIsPublishedAndIsRecommend_COUNT == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == c.j.d.B.getNewBlogListByIsPublishedAndIsRecommend_COUNT == <==    Columns: count(0)
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == c.j.d.B.getNewBlogListByIsPublishedAndIsRecommend_COUNT == <==        Row: 1
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == c.j.d.B.getNewBlogListByIsPublishedAndIsRecommend_COUNT == <==      Total: 1
""2021-03-31 === [http-nio-8090-exec-10] == DEBUG == c.j.d.B.getBlogInfoListByIsPublished_COUNT == <==      Total: 1
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == c.j.d.B.getNewBlogListByIsPublishedAndIsRecommend == ==>  Preparing: select id, title, password from blog where is_published=true and is_recommend=true order by create_time desc LIMIT ?
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == c.j.d.B.getNewBlogListByIsPublishedAndIsRecommend == ==> Parameters: 3(Integer)
""2021-03-31 === [http-nio-8090-exec-10] == DEBUG == c.jonm.dao.BlogMapper.getBlogInfoListByIsPublished == ==>  Preparing: SELECT b.id, b.title, b.description, b.is_top, b.create_time, b.views, b.words, b.read_time, b.password, c.category_name FROM blog AS b LEFT JOIN category AS c ON b.category_id = c.id WHERE b.is_published = true order by is_top desc, create_time desc LIMIT ?
""2021-03-31 === [http-nio-8090-exec-10] == DEBUG == c.jonm.dao.BlogMapper.getBlogInfoListByIsPublished == ==> Parameters: 5(Integer)
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == c.j.d.B.getNewBlogListByIsPublishedAndIsRecommend == <==    Columns: id, title, password
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == c.j.d.B.getNewBlogListByIsPublishedAndIsRecommend == <==        Row: 1, Test, 
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == c.j.d.B.getNewBlogListByIsPublishedAndIsRecommend == <==      Total: 1
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == c.jonm.dao.BlogMapper.getBlogInfoListByIsPublished == <==    Columns: id, title, description, is_top, create_time, views, words, read_time, password, category_name
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == c.jonm.dao.BlogMapper.getBlogInfoListByIsPublished == <==        Row: 1, Test, <<BLOB>>, 0, 2021-03-28 17:00:05, 0, 1413, 7, , 个人项目
""2021-03-31 === [http-nio-8090-exec-10] == DEBUG == c.jonm.dao.BlogMapper.getBlogInfoListByIsPublished == <==      Total: 1
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.CategoryMapper.getCategoryNameList == ==>  Preparing: select category_name from category order by id desc
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.CategoryMapper.getCategoryNameList == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.CategoryMapper.getCategoryNameList == <==    Columns: category_name
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.CategoryMapper.getCategoryNameList == <==        Row: 个人项目
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.CategoryMapper.getCategoryNameList == <==        Row: 项目
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.CategoryMapper.getCategoryNameList == <==      Total: 2
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.TagMapper.getTagListNotId == ==>  Preparing: select tag_name, color from tag order by id desc
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.TagMapper.getTagListNotId == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.TagMapper.getTagListNotId == <==    Columns: tag_name, color
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.TagMapper.getTagListNotId == <==        Row: Mysql, null
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.TagMapper.getTagListNotId == <==        Row: Java, null
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.TagMapper.getTagListNotId == <==      Total: 2
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == ==>  Preparing: select b.id, b.title, b.password, c.category_name from blog as b left join category as c on b.category_id=c.id where b.is_published=true order by rand() limit ?
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == ==> Parameters: 5(Integer)
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == <==    Columns: id, title, password, category_name
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == <==        Row: 1, Test, , 个人项目
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == <==      Total: 1
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == ==>  Preparing: select t.tag_name, t.color from blog_tag as bt left join tag as t on bt.tag_id=t.id where bt.blog_id=?
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == ==> Parameters: 1(Long)
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.TagMapper.getTagListByBlogId == <==    Columns: tag_name, color
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.TagMapper.getTagListByBlogId == <==        Row: Mysql, null
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == <==      Total: 1
""2021-03-31 === [http-nio-8090-exec-10] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == ==>  Preparing: select t.tag_name, t.color from blog_tag as bt left join tag as t on bt.tag_id=t.id where bt.blog_id=?
""2021-03-31 === [http-nio-8090-exec-10] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == ==> Parameters: 1(Long)
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.TagMapper.getTagListByBlogId == <==    Columns: tag_name, color
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.TagMapper.getTagListByBlogId == <==        Row: Mysql, null
""2021-03-31 === [http-nio-8090-exec-10] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == <==      Total: 1
""2021-03-31 === [http-nio-8090-exec-10] == DEBUG == com.jonm.dao.VisitorMapper.hasUUID == ==>  Preparing: select ifnull((select 1 from visitor where uuid=? limit 1), 0)
""2021-03-31 === [http-nio-8090-exec-10] == DEBUG == com.jonm.dao.VisitorMapper.hasUUID == ==> Parameters: 4dd1655d-cd02-41a2-8621-80c525ac4cef(String)
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.VisitorMapper.hasUUID == <==    Columns: ifnull((select 1 from visitor where uuid='4dd1655d-cd02-41a2-8621-80c525ac4cef' limit 1), 0)
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.VisitorMapper.hasUUID == <==        Row: 1
""2021-03-31 === [http-nio-8090-exec-10] == DEBUG == com.jonm.dao.VisitorMapper.hasUUID == <==      Total: 1
""2021-03-31 === [task-4] == DEBUG == com.jonm.dao.VisitLogMapper.saveVisitLog == ==>  Preparing: insert into visit_log (uuid, uri, method, param, behavior, content, remark, ip, ip_source, os, browser, times, create_time, user_agent) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
""2021-03-31 === [task-4] == DEBUG == com.jonm.dao.VisitLogMapper.saveVisitLog == ==> Parameters: 4dd1655d-cd02-41a2-8621-80c525ac4cef(String), /blogs(String), GET(String), {"pageNum":1}(String), 访问页面(String), 首页(String), 第1页(String), 192.168.189.1(String), 内网IP|内网IP(String), Windows 10(String), Chrome 88.0.4324.182(String), 5633(Integer), 2021-03-31 16:07:51.722(Timestamp), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.182 Safari/537.36(String)
""2021-03-31 === [task-4] == DEBUG == com.jonm.dao.VisitLogMapper.saveVisitLog == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-2] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-2] == DEBUG == com.jonm.dao.BlogMapper.getBlogViewsList == ==>  Preparing: select id, views from blog
""2021-03-31 === [http-nio-8090-exec-2] == DEBUG == com.jonm.dao.BlogMapper.getBlogViewsList == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == ==>  Preparing: select b.id, b.title, b.password, c.category_name from blog as b left join category as c on b.category_id=c.id where b.is_published=true order by rand() limit ?
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == ==> Parameters: 5(Integer)
""2021-03-31 === [http-nio-8090-exec-2] == TRACE == com.jonm.dao.BlogMapper.getBlogViewsList == <==    Columns: id, views
""2021-03-31 === [http-nio-8090-exec-2] == TRACE == com.jonm.dao.BlogMapper.getBlogViewsList == <==        Row: 1, 0
""2021-03-31 === [http-nio-8090-exec-2] == DEBUG == com.jonm.dao.BlogMapper.getBlogViewsList == <==      Total: 1
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == <==    Columns: id, title, password, category_name
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == <==        Row: 1, Test, , 个人项目
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == <==      Total: 1
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == ==>  Preparing: select t.tag_name, t.color from blog_tag as bt left join tag as t on bt.tag_id=t.id where bt.blog_id=?
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == ==> Parameters: 1(Long)
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.TagMapper.getTagListByBlogId == <==    Columns: tag_name, color
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.TagMapper.getTagListByBlogId == <==        Row: Mysql, null
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == <==      Total: 1
""2021-03-31 === [task-5] == DEBUG == com.jonm.dao.VisitLogMapper.saveVisitLog == ==>  Preparing: insert into visit_log (uuid, uri, method, param, behavior, content, remark, ip, ip_source, os, browser, times, create_time, user_agent) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
""2021-03-31 === [task-5] == DEBUG == com.jonm.dao.VisitLogMapper.saveVisitLog == ==> Parameters: 4dd1655d-cd02-41a2-8621-80c525ac4cef(String), /blogs(String), GET(String), {"pageNum":1}(String), 访问页面(String), 首页(String), 第1页(String), 192.168.189.1(String), 内网IP|内网IP(String), Windows 10(String), Chrome 88.0.4324.182(String), 88(Integer), 2021-03-31 16:07:51.902(Timestamp), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.182 Safari/537.36(String)
""2021-03-31 === [task-5] == DEBUG == com.jonm.dao.VisitLogMapper.saveVisitLog == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == ==>  Preparing: select b.id, b.title, b.password, c.category_name from blog as b left join category as c on b.category_id=c.id where b.is_published=true order by rand() limit ?
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == ==> Parameters: 5(Integer)
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == <==    Columns: id, title, password, category_name
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == <==        Row: 1, Test, , 个人项目
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == <==      Total: 1
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == ==>  Preparing: select t.tag_name, t.color from blog_tag as bt left join tag as t on bt.tag_id=t.id where bt.blog_id=?
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == ==> Parameters: 1(Long)
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.TagMapper.getTagListByBlogId == <==    Columns: tag_name, color
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.TagMapper.getTagListByBlogId == <==        Row: Mysql, null
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == <==      Total: 1
""2021-03-31 === [task-6] == DEBUG == com.jonm.dao.VisitLogMapper.saveVisitLog == ==>  Preparing: insert into visit_log (uuid, uri, method, param, behavior, content, remark, ip, ip_source, os, browser, times, create_time, user_agent) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
""2021-03-31 === [task-6] == DEBUG == com.jonm.dao.VisitLogMapper.saveVisitLog == ==> Parameters: 4dd1655d-cd02-41a2-8621-80c525ac4cef(String), /blogs(String), GET(String), {"pageNum":1}(String), 访问页面(String), 首页(String), 第1页(String), 192.168.189.1(String), 内网IP|内网IP(String), Windows 10(String), Chrome 88.0.4324.182(String), 42(Integer), 2021-03-31 16:08:13.23(Timestamp), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.182 Safari/537.36(String)
""2021-03-31 === [task-6] == DEBUG == com.jonm.dao.VisitLogMapper.saveVisitLog == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-4] == INFO  == com.jonm.config.JwtLoginFilter == user:    ---> User(id=null, username=Admin, password=123456, nickname=null, avatar=null, email=null, createTime=null, updateTime=null, role=null)
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.UserMapper.findByUsername == ==>  Preparing: select id,username,password,nickname,avatar,email,create_time,update_time,role from user where username=? limit 1
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.UserMapper.findByUsername == ==> Parameters: Admin(String)
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.UserMapper.findByUsername == <==    Columns: id, username, password, nickname, avatar, email, create_time, update_time, role
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.UserMapper.findByUsername == <==        Row: 1, Admin, $2a$10$4wnwMW8Z4Bn6wR4K1YlbquQunlHM/4rvudVBX8oyfx16xeVtI6i7C, Admin, /img/avatar.jpg, admin@naccl.com, 2020-09-21 16:47:18, 2020-09-21 16:47:22, ROLE_admin
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.UserMapper.findByUsername == <==      Total: 1
""2021-03-31 === [task-7] == DEBUG == com.jonm.dao.LoginLogMapper.saveLoginLog == ==>  Preparing: insert into login_log (username, ip, ip_source, os, browser, status, description, create_time, user_agent) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
""2021-03-31 === [task-7] == DEBUG == com.jonm.dao.LoginLogMapper.saveLoginLog == ==> Parameters: Admin(String), 192.168.189.1(String), 内网IP|内网IP(String), Windows 10(String), Chrome 88.0.4324.182(String), true(Boolean), 登录成功(String), 2021-03-31 16:09:03.616(Timestamp), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.182 Safari/537.36(String)
""2021-03-31 === [task-7] == DEBUG == com.jonm.dao.LoginLogMapper.saveLoginLog == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-5] == DEBUG == com.jonm.dao.VisitLogMapper.countVisitLogByToday == ==>  Preparing: select count(*) from visit_log where date(create_time)=curdate()
""2021-03-31 === [http-nio-8090-exec-5] == DEBUG == com.jonm.dao.VisitLogMapper.countVisitLogByToday == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.VisitLogMapper.countVisitLogByToday == <==    Columns: count(*)
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.VisitLogMapper.countVisitLogByToday == <==        Row: 12
""2021-03-31 === [http-nio-8090-exec-5] == DEBUG == com.jonm.dao.VisitLogMapper.countVisitLogByToday == <==      Total: 1
""2021-03-31 === [http-nio-8090-exec-5] == DEBUG == com.jonm.dao.BlogMapper.countBlog == ==>  Preparing: select count(*) from blog
""2021-03-31 === [http-nio-8090-exec-5] == DEBUG == com.jonm.dao.BlogMapper.countBlog == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.BlogMapper.countBlog == <==    Columns: count(*)
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.BlogMapper.countBlog == <==        Row: 1
""2021-03-31 === [http-nio-8090-exec-5] == DEBUG == com.jonm.dao.BlogMapper.countBlog == <==      Total: 1
""2021-03-31 === [http-nio-8090-exec-5] == DEBUG == com.jonm.dao.CommentMapper.countComment == ==>  Preparing: select count(*) from comment
""2021-03-31 === [http-nio-8090-exec-5] == DEBUG == com.jonm.dao.CommentMapper.countComment == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.CommentMapper.countComment == <==    Columns: count(*)
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.CommentMapper.countComment == <==        Row: 2
""2021-03-31 === [http-nio-8090-exec-5] == DEBUG == com.jonm.dao.CommentMapper.countComment == <==      Total: 1
""2021-03-31 === [http-nio-8090-exec-5] == DEBUG == com.jonm.dao.BlogMapper.getCategoryBlogCountList == ==>  Preparing: select category_id, count(category_id) as blog_count from blog group by category_id
""2021-03-31 === [http-nio-8090-exec-5] == DEBUG == com.jonm.dao.BlogMapper.getCategoryBlogCountList == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.BlogMapper.getCategoryBlogCountList == <==    Columns: category_id, blog_count
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.BlogMapper.getCategoryBlogCountList == <==        Row: 2, 1
""2021-03-31 === [http-nio-8090-exec-5] == DEBUG == com.jonm.dao.BlogMapper.getCategoryBlogCountList == <==      Total: 1
""2021-03-31 === [http-nio-8090-exec-5] == DEBUG == com.jonm.dao.CategoryMapper.getCategoryList == ==>  Preparing: select id, category_name from category order by id desc
""2021-03-31 === [http-nio-8090-exec-5] == DEBUG == com.jonm.dao.CategoryMapper.getCategoryList == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.CategoryMapper.getCategoryList == <==    Columns: id, category_name
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.CategoryMapper.getCategoryList == <==        Row: 2, 个人项目
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.CategoryMapper.getCategoryList == <==        Row: 1, 项目
""2021-03-31 === [http-nio-8090-exec-5] == DEBUG == com.jonm.dao.CategoryMapper.getCategoryList == <==      Total: 2
""2021-03-31 === [http-nio-8090-exec-5] == DEBUG == com.jonm.dao.TagMapper.getTagBlogCount == ==>  Preparing: select tag_id, count(tag_id) as blog_count from blog_tag group by tag_id
""2021-03-31 === [http-nio-8090-exec-5] == DEBUG == com.jonm.dao.TagMapper.getTagBlogCount == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.TagMapper.getTagBlogCount == <==    Columns: tag_id, blog_count
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.TagMapper.getTagBlogCount == <==        Row: 2, 1
""2021-03-31 === [http-nio-8090-exec-5] == DEBUG == com.jonm.dao.TagMapper.getTagBlogCount == <==      Total: 1
""2021-03-31 === [http-nio-8090-exec-5] == DEBUG == com.jonm.dao.TagMapper.getTagList == ==>  Preparing: select id, tag_name, color from tag order by id desc
""2021-03-31 === [http-nio-8090-exec-5] == DEBUG == com.jonm.dao.TagMapper.getTagList == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.TagMapper.getTagList == <==    Columns: id, tag_name, color
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.TagMapper.getTagList == <==        Row: 2, Mysql, null
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.TagMapper.getTagList == <==        Row: 1, Java, null
""2021-03-31 === [http-nio-8090-exec-5] == DEBUG == com.jonm.dao.TagMapper.getTagList == <==      Total: 2
""2021-03-31 === [http-nio-8090-exec-5] == DEBUG == c.j.d.VisitRecordMapper.getVisitRecordListByLimit == ==>  Preparing: select pv, uv, date from visit_record order by id desc limit ?
""2021-03-31 === [http-nio-8090-exec-5] == DEBUG == c.j.d.VisitRecordMapper.getVisitRecordListByLimit == ==> Parameters: 7(Integer)
""2021-03-31 === [http-nio-8090-exec-5] == DEBUG == c.j.d.VisitRecordMapper.getVisitRecordListByLimit == <==      Total: 0
""2021-03-31 === [http-nio-8090-exec-5] == DEBUG == com.jonm.dao.CityVisitorMapper.getCityVisitorList == ==>  Preparing: select city, uv from city_visitor order by uv desc
""2021-03-31 === [http-nio-8090-exec-5] == DEBUG == com.jonm.dao.CityVisitorMapper.getCityVisitorList == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-5] == DEBUG == com.jonm.dao.CityVisitorMapper.getCityVisitorList == <==      Total: 0
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-6] == DEBUG == com.jonm.dao.CategoryMapper.getCategoryList == ==>  Preparing: select id, category_name from category order by id desc
""2021-03-31 === [http-nio-8090-exec-6] == DEBUG == com.jonm.dao.CategoryMapper.getCategoryList == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.CategoryMapper.getCategoryList == <==    Columns: id, category_name
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.CategoryMapper.getCategoryList == <==        Row: 2, 个人项目
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.CategoryMapper.getCategoryList == <==        Row: 1, 项目
""2021-03-31 === [http-nio-8090-exec-6] == DEBUG == com.jonm.dao.CategoryMapper.getCategoryList == <==      Total: 2
""2021-03-31 === [http-nio-8090-exec-6] == DEBUG == com.jonm.dao.TagMapper.getTagList == ==>  Preparing: select id, tag_name, color from tag order by id desc
""2021-03-31 === [http-nio-8090-exec-6] == DEBUG == com.jonm.dao.TagMapper.getTagList == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.TagMapper.getTagList == <==    Columns: id, tag_name, color
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.TagMapper.getTagList == <==        Row: 2, Mysql, null
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.TagMapper.getTagList == <==        Row: 1, Java, null
""2021-03-31 === [http-nio-8090-exec-6] == DEBUG == com.jonm.dao.TagMapper.getTagList == <==      Total: 2
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-7] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == ==>  Preparing: select id,name_en,name_zh,value,type from site_setting
""2021-03-31 === [http-nio-8090-exec-7] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==    Columns: id, name_en, name_zh, value, type
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 1, webTitleSuffix, 网页标题后缀, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 2, blogName, 博客名称, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 3, footerImgTitle, 页脚图片标题, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 4, footerImgUrl, 页脚图片路径, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 5, copyright, Copyright, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 6, beian, ICP备案号, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 7, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 8, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 9, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 10, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 11, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 12, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 13, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 14, avatar, 头像路径, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 15, name, 昵称, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 16, rollText, 滚动个签, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 17, github, GitHub地址, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 18, qq, QQ链接, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 19, bilibili, bilibili链接, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 20, netease, 网易云音乐, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 21, email, email, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 22, favorite, 自定义, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 24, favorite, 自定义, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 25, reward, 赞赏码路径, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 26, commentAdminFlag, 博主评论标识, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 27, friendContent, 友链页面信息, <<BLOB>>, 4
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 28, friendCommentEnabled, 友链页面评论开关, <<BLOB>>, 4
""2021-03-31 === [http-nio-8090-exec-7] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == <==      Total: 27
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == ==>  Preparing: select id,name_en,name_zh,value,type from site_setting
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==    Columns: id, name_en, name_zh, value, type
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 1, webTitleSuffix, 网页标题后缀, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 2, blogName, 博客名称, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 3, footerImgTitle, 页脚图片标题, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 4, footerImgUrl, 页脚图片路径, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 5, copyright, Copyright, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 6, beian, ICP备案号, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 7, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 8, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 9, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 10, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 11, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 12, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 13, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 14, avatar, 头像路径, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 15, name, 昵称, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 16, rollText, 滚动个签, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 17, github, GitHub地址, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 18, qq, QQ链接, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 19, bilibili, bilibili链接, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 20, netease, 网易云音乐, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 21, email, email, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 22, favorite, 自定义, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 24, favorite, 自定义, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 25, reward, 赞赏码路径, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 26, commentAdminFlag, 博主评论标识, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 27, friendContent, 友链页面信息, <<BLOB>>, 4
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 28, friendCommentEnabled, 友链页面评论开关, <<BLOB>>, 4
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == <==      Total: 27
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == ==>  Preparing: select b.id, b.title, b.password, c.category_name from blog as b left join category as c on b.category_id=c.id where b.is_published=true order by rand() limit ?
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == ==> Parameters: 5(Integer)
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == <==    Columns: id, title, password, category_name
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == <==        Row: 1, Test, , 个人项目
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == <==      Total: 1
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == ==>  Preparing: select t.tag_name, t.color from blog_tag as bt left join tag as t on bt.tag_id=t.id where bt.blog_id=?
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == ==> Parameters: 1(Long)
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.TagMapper.getTagListByBlogId == <==    Columns: tag_name, color
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.TagMapper.getTagListByBlogId == <==        Row: Mysql, null
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == <==      Total: 1
""2021-03-31 === [task-8] == DEBUG == com.jonm.dao.VisitLogMapper.saveVisitLog == ==>  Preparing: insert into visit_log (uuid, uri, method, param, behavior, content, remark, ip, ip_source, os, browser, times, create_time, user_agent) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
""2021-03-31 === [task-8] == DEBUG == com.jonm.dao.VisitLogMapper.saveVisitLog == ==> Parameters: 4dd1655d-cd02-41a2-8621-80c525ac4cef(String), /blogs(String), GET(String), {"pageNum":1}(String), 访问页面(String), 首页(String), 第1页(String), 192.168.189.1(String), 内网IP|内网IP(String), Windows 10(String), Chrome 88.0.4324.182(String), 49(Integer), 2021-03-31 16:12:01.854(Timestamp), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.182 Safari/537.36(String)
""2021-03-31 === [task-8] == DEBUG == com.jonm.dao.VisitLogMapper.saveVisitLog == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-5] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == ==>  Preparing: select id,name_en,name_zh,value,type from site_setting
""2021-03-31 === [http-nio-8090-exec-5] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==    Columns: id, name_en, name_zh, value, type
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 1, webTitleSuffix, 网页标题后缀, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 2, blogName, 博客名称, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 3, footerImgTitle, 页脚图片标题, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 4, footerImgUrl, 页脚图片路径, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 5, copyright, Copyright, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 6, beian, ICP备案号, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 7, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 8, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 9, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 10, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 11, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 12, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 13, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 14, avatar, 头像路径, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 15, name, 昵称, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 16, rollText, 滚动个签, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 17, github, GitHub地址, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 18, qq, QQ链接, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 19, bilibili, bilibili链接, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 20, netease, 网易云音乐, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 21, email, email, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 22, favorite, 自定义, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 24, favorite, 自定义, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 25, reward, 赞赏码路径, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 26, commentAdminFlag, 博主评论标识, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 27, friendContent, 友链页面信息, <<BLOB>>, 4
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 28, friendCommentEnabled, 友链页面评论开关, <<BLOB>>, 4
""2021-03-31 === [http-nio-8090-exec-5] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == <==      Total: 27
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-6] == INFO  == com.jonm.util.fastdfs.FastDFSClient == File Name: avatar.jpgFile Length:31156
""2021-03-31 === [http-nio-8090-exec-6] == INFO  == com.jonm.util.fastdfs.FastDFSClient == upload_file time used:112 ms
""2021-03-31 === [http-nio-8090-exec-6] == INFO  == com.jonm.util.fastdfs.FastDFSClient == upload file successfully!!!group_name:group1, remoteFileName: M00/00/00/n0t7aWBkLuSALWeWAAB5tNKTQyM048.jpg
""2021-03-31 === [http-nio-8090-exec-6] == INFO  == com.jonm.service.impl.UploadServiceImpl == path:    --------->http://159.75.123.105:8888/group1/M00/00/00/n0t7aWBkLuSALWeWAAB5tNKTQyM048.jpg
""2021-03-31 === [task-9] == DEBUG == com.jonm.dao.OperationLogMapper.saveOperationLog == ==>  Preparing: insert into operation_log (username, uri, method, param, description, ip, ip_source, os, browser, times, create_time, user_agent) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
""2021-03-31 === [task-9] == DEBUG == com.jonm.dao.OperationLogMapper.saveOperationLog == ==> Parameters: Admin(String), /admin/uploadimages(String), POST(String), {}(String), 图片上传(String), 192.168.189.1(String), 内网IP|内网IP(String), Windows 10(String), Chrome 88.0.4324.182(String), 346(Integer), 2021-03-31 16:12:19.757(Timestamp), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.182 Safari/537.36(String)
""2021-03-31 === [task-9] == DEBUG == com.jonm.dao.OperationLogMapper.saveOperationLog == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-7] == INFO  == com.jonm.util.fastdfs.FastDFSClient == File Name: paper-plane.pngFile Length:14659
""2021-03-31 === [http-nio-8090-exec-7] == INFO  == com.jonm.util.fastdfs.FastDFSClient == upload_file time used:96 ms
""2021-03-31 === [http-nio-8090-exec-7] == INFO  == com.jonm.util.fastdfs.FastDFSClient == upload file successfully!!!group_name:group1, remoteFileName: M00/00/00/n0t7aWBkLumAJ-EnAAA5Qy_TrhE454.png
""2021-03-31 === [http-nio-8090-exec-7] == INFO  == com.jonm.service.impl.UploadServiceImpl == path:    --------->http://159.75.123.105:8888/group1/M00/00/00/n0t7aWBkLumAJ-EnAAA5Qy_TrhE454.png
""2021-03-31 === [task-10] == DEBUG == com.jonm.dao.OperationLogMapper.saveOperationLog == ==>  Preparing: insert into operation_log (username, uri, method, param, description, ip, ip_source, os, browser, times, create_time, user_agent) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
""2021-03-31 === [task-10] == DEBUG == com.jonm.dao.OperationLogMapper.saveOperationLog == ==> Parameters: Admin(String), /admin/uploadimages(String), POST(String), {}(String), 图片上传(String), 192.168.189.1(String), 内网IP|内网IP(String), Windows 10(String), Chrome 88.0.4324.182(String), 97(Integer), 2021-03-31 16:12:25.039(Timestamp), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.182 Safari/537.36(String)
""2021-03-31 === [task-10] == DEBUG == com.jonm.dao.OperationLogMapper.saveOperationLog == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-8] == INFO  == com.jonm.util.fastdfs.FastDFSClient == File Name: paper-plane.pngFile Length:14659
""2021-03-31 === [http-nio-8090-exec-8] == INFO  == com.jonm.util.fastdfs.FastDFSClient == upload_file time used:87 ms
""2021-03-31 === [http-nio-8090-exec-8] == INFO  == com.jonm.util.fastdfs.FastDFSClient == upload file successfully!!!group_name:group1, remoteFileName: M00/00/00/n0t7aWBkLvOAHm9xAAA5Qy_TrhE850.png
""2021-03-31 === [http-nio-8090-exec-8] == INFO  == com.jonm.service.impl.UploadServiceImpl == path:    --------->http://159.75.123.105:8888/group1/M00/00/00/n0t7aWBkLvOAHm9xAAA5Qy_TrhE850.png
""2021-03-31 === [task-11] == DEBUG == com.jonm.dao.OperationLogMapper.saveOperationLog == ==>  Preparing: insert into operation_log (username, uri, method, param, description, ip, ip_source, os, browser, times, create_time, user_agent) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
""2021-03-31 === [task-11] == DEBUG == com.jonm.dao.OperationLogMapper.saveOperationLog == ==> Parameters: Admin(String), /admin/uploadimages(String), POST(String), {}(String), 图片上传(String), 192.168.189.1(String), 内网IP|内网IP(String), Windows 10(String), Chrome 88.0.4324.182(String), 87(Integer), 2021-03-31 16:12:34.703(Timestamp), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.182 Safari/537.36(String)
""2021-03-31 === [task-11] == DEBUG == com.jonm.dao.OperationLogMapper.saveOperationLog == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == ==>  Preparing: select b.id, b.title, b.password, c.category_name from blog as b left join category as c on b.category_id=c.id where b.is_published=true order by rand() limit ?
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == ==> Parameters: 5(Integer)
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == <==    Columns: id, title, password, category_name
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == <==        Row: 1, Test, , 个人项目
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == <==      Total: 1
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == ==>  Preparing: select t.tag_name, t.color from blog_tag as bt left join tag as t on bt.tag_id=t.id where bt.blog_id=?
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == ==> Parameters: 1(Long)
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.TagMapper.getTagListByBlogId == <==    Columns: tag_name, color
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.TagMapper.getTagListByBlogId == <==        Row: Mysql, null
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == <==      Total: 1
""2021-03-31 === [task-12] == DEBUG == com.jonm.dao.VisitLogMapper.saveVisitLog == ==>  Preparing: insert into visit_log (uuid, uri, method, param, behavior, content, remark, ip, ip_source, os, browser, times, create_time, user_agent) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
""2021-03-31 === [task-12] == DEBUG == com.jonm.dao.VisitLogMapper.saveVisitLog == ==> Parameters: 4dd1655d-cd02-41a2-8621-80c525ac4cef(String), /blogs(String), GET(String), {"pageNum":1}(String), 访问页面(String), 首页(String), 第1页(String), 192.168.189.1(String), 内网IP|内网IP(String), Windows 10(String), Chrome 88.0.4324.182(String), 49(Integer), 2021-03-31 16:12:39.431(Timestamp), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.182 Safari/537.36(String)
""2021-03-31 === [task-12] == DEBUG == com.jonm.dao.VisitLogMapper.saveVisitLog == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-2] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == ==>  Preparing: select b.id, b.title, b.password, c.category_name from blog as b left join category as c on b.category_id=c.id where b.is_published=true order by rand() limit ?
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == ==> Parameters: 5(Integer)
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == <==    Columns: id, title, password, category_name
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == <==        Row: 1, Test, , 个人项目
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == <==      Total: 1
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == ==>  Preparing: select t.tag_name, t.color from blog_tag as bt left join tag as t on bt.tag_id=t.id where bt.blog_id=?
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == ==> Parameters: 1(Long)
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.TagMapper.getTagListByBlogId == <==    Columns: tag_name, color
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.TagMapper.getTagListByBlogId == <==        Row: Mysql, null
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == <==      Total: 1
""2021-03-31 === [task-13] == DEBUG == com.jonm.dao.VisitLogMapper.saveVisitLog == ==>  Preparing: insert into visit_log (uuid, uri, method, param, behavior, content, remark, ip, ip_source, os, browser, times, create_time, user_agent) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
""2021-03-31 === [task-13] == DEBUG == com.jonm.dao.VisitLogMapper.saveVisitLog == ==> Parameters: 4dd1655d-cd02-41a2-8621-80c525ac4cef(String), /blogs(String), GET(String), {"pageNum":1}(String), 访问页面(String), 首页(String), 第1页(String), 192.168.189.1(String), 内网IP|内网IP(String), Windows 10(String), Chrome 88.0.4324.182(String), 40(Integer), 2021-03-31 16:12:44.934(Timestamp), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.182 Safari/537.36(String)
""2021-03-31 === [task-13] == DEBUG == com.jonm.dao.VisitLogMapper.saveVisitLog == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == ==>  Preparing: select b.id, b.title, b.password, c.category_name from blog as b left join category as c on b.category_id=c.id where b.is_published=true order by rand() limit ?
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == ==> Parameters: 5(Integer)
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == <==    Columns: id, title, password, category_name
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == <==        Row: 1, Test, , 个人项目
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == <==      Total: 1
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == ==>  Preparing: select t.tag_name, t.color from blog_tag as bt left join tag as t on bt.tag_id=t.id where bt.blog_id=?
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == ==> Parameters: 1(Long)
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.TagMapper.getTagListByBlogId == <==    Columns: tag_name, color
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.TagMapper.getTagListByBlogId == <==        Row: Mysql, null
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == <==      Total: 1
""2021-03-31 === [task-14] == DEBUG == com.jonm.dao.VisitLogMapper.saveVisitLog == ==>  Preparing: insert into visit_log (uuid, uri, method, param, behavior, content, remark, ip, ip_source, os, browser, times, create_time, user_agent) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
""2021-03-31 === [task-14] == DEBUG == com.jonm.dao.VisitLogMapper.saveVisitLog == ==> Parameters: 4dd1655d-cd02-41a2-8621-80c525ac4cef(String), /blogs(String), GET(String), {"pageNum":1}(String), 访问页面(String), 首页(String), 第1页(String), 192.168.189.1(String), 内网IP|内网IP(String), Windows 10(String), Chrome 88.0.4324.182(String), 40(Integer), 2021-03-31 16:12:50.589(Timestamp), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.182 Safari/537.36(String)
""2021-03-31 === [task-14] == DEBUG == com.jonm.dao.VisitLogMapper.saveVisitLog == <==    Updates: 1
""2021-03-31 === [SpringContextShutdownHook] == INFO  == org.quartz.core.QuartzScheduler == Scheduler quartzScheduler_$_NON_CLUSTERED paused.
""2021-03-31 === [SpringContextShutdownHook] == INFO  == o.s.scheduling.concurrent.ThreadPoolTaskExecutor == Shutting down ExecutorService 'applicationTaskExecutor'
""2021-03-31 === [SpringContextShutdownHook] == INFO  == o.s.scheduling.quartz.SchedulerFactoryBean == Shutting down Quartz Scheduler
""2021-03-31 === [SpringContextShutdownHook] == INFO  == org.quartz.core.QuartzScheduler == Scheduler quartzScheduler_$_NON_CLUSTERED shutting down.
""2021-03-31 === [SpringContextShutdownHook] == INFO  == org.quartz.core.QuartzScheduler == Scheduler quartzScheduler_$_NON_CLUSTERED paused.
""2021-03-31 === [SpringContextShutdownHook] == INFO  == org.quartz.core.QuartzScheduler == Scheduler quartzScheduler_$_NON_CLUSTERED shutdown complete.
""2021-03-31 === [SpringContextShutdownHook] == INFO  == com.alibaba.druid.pool.DruidDataSource == {dataSource-1} closing ...
""2021-03-31 === [SpringContextShutdownHook] == INFO  == com.alibaba.druid.pool.DruidDataSource == {dataSource-1} closed
""2021-03-31 === [main] == INFO  == com.jonm.BlogApiApplication == Starting BlogApiApplication using Java 1.8.0_261 on Jonm with PID 21916 (D:\Users\lhz17\Desktop\01\NBlog-master\blog-api\target\classes started by lhz17 in D:\Users\lhz17\Desktop\01\NBlog-master\blog-api)
""2021-03-31 === [main] == DEBUG == com.jonm.BlogApiApplication == Running with Spring Boot v2.4.0, Spring v5.3.1
""2021-03-31 === [main] == INFO  == com.jonm.BlogApiApplication == The following profiles are active: dev
""2021-03-31 === [main] == INFO  == o.s.d.r.config.RepositoryConfigurationDelegate == Multiple Spring Data modules found, entering strict repository configuration mode!
""2021-03-31 === [main] == INFO  == o.s.d.r.config.RepositoryConfigurationDelegate == Bootstrapping Spring Data Redis repositories in DEFAULT mode.
""2021-03-31 === [main] == INFO  == o.s.d.r.config.RepositoryConfigurationDelegate == Finished Spring Data repository scanning in 110 ms. Found 0 Redis repository interfaces.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == INFO  == o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker == Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
""2021-03-31 === [main] == INFO  == o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker == Bean 'spring.datasource.druid-com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties' of type [com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
""2021-03-31 === [main] == INFO  == o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker == Bean 'advisor' of type [org.springframework.aop.support.RegexpMethodPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
""2021-03-31 === [main] == INFO  == o.s.boot.web.embedded.tomcat.TomcatWebServer == Tomcat initialized with port(s): 8090 (http)
""2021-03-31 === [main] == INFO  == org.apache.catalina.core.StandardService == Starting service [Tomcat]
""2021-03-31 === [main] == INFO  == org.apache.catalina.core.StandardEngine == Starting Servlet engine: [Apache Tomcat/9.0.39]
""2021-03-31 === [main] == INFO  == o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] == Initializing Spring embedded WebApplicationContext
""2021-03-31 === [main] == INFO  == o.s.b.w.s.c.ServletWebServerApplicationContext == Root WebApplicationContext: initialization completed in 6682 ms
""2021-03-31 === [main] == INFO  == n.b.p.useragent.AbstractUserAgentAnalyzerDirect == - Loaded 90 files in  566 msec using expression: classpath*:UserAgents/**/*.yaml
""2021-03-31 === [main] == INFO  == nl.basjes.parse.useragent.utils.YauaaVersion == 
""2021-03-31 === [main] == INFO  == nl.basjes.parse.useragent.utils.YauaaVersion == /-----------------------------------------------------------\
""2021-03-31 === [main] == INFO  == nl.basjes.parse.useragent.utils.YauaaVersion == | Yauaa 5.20 (v5.20 @ 2020-11-22T15:39:16Z)                 |
""2021-03-31 === [main] == INFO  == nl.basjes.parse.useragent.utils.YauaaVersion == +-----------------------------------------------------------+
""2021-03-31 === [main] == INFO  == nl.basjes.parse.useragent.utils.YauaaVersion == | For more information: https://yauaa.basjes.nl             |
""2021-03-31 === [main] == INFO  == nl.basjes.parse.useragent.utils.YauaaVersion == | Copyright (C) 2013-2020 Niels Basjes - License Apache 2.0 |
""2021-03-31 === [main] == INFO  == nl.basjes.parse.useragent.utils.YauaaVersion == \-----------------------------------------------------------/
""2021-03-31 === [main] == INFO  == nl.basjes.parse.useragent.utils.YauaaVersion == 
""2021-03-31 === [main] == INFO  == n.b.p.useragent.AbstractUserAgentAnalyzerDirect == Building all needed matchers for the requested 11 fields.
""2021-03-31 === [main] == INFO  == com.alibaba.druid.pool.DruidDataSource == {dataSource-1} inited
""2021-03-31 === [main] == DEBUG == com.jonm.dao.BlogMapper.getBlogViewsList == ==>  Preparing: select id, views from blog
""2021-03-31 === [main] == DEBUG == com.jonm.dao.BlogMapper.getBlogViewsList == ==> Parameters: 
""2021-03-31 === [main] == TRACE == com.jonm.dao.BlogMapper.getBlogViewsList == <==    Columns: id, views
""2021-03-31 === [main] == TRACE == com.jonm.dao.BlogMapper.getBlogViewsList == <==        Row: 1, 0
""2021-03-31 === [main] == DEBUG == com.jonm.dao.BlogMapper.getBlogViewsList == <==      Total: 1
""2021-03-31 === [main] == INFO  == org.quartz.impl.StdSchedulerFactory == Using default implementation for ThreadExecutor
""2021-03-31 === [main] == INFO  == org.quartz.core.SchedulerSignalerImpl == Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
""2021-03-31 === [main] == INFO  == org.quartz.core.QuartzScheduler == Quartz Scheduler v.2.3.2 created.
""2021-03-31 === [main] == INFO  == org.quartz.simpl.RAMJobStore == RAMJobStore initialized.
""2021-03-31 === [main] == INFO  == org.quartz.core.QuartzScheduler == Scheduler meta-data: Quartz Scheduler (v2.3.2) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

""2021-03-31 === [main] == INFO  == org.quartz.impl.StdSchedulerFactory == Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
""2021-03-31 === [main] == INFO  == org.quartz.impl.StdSchedulerFactory == Quartz scheduler version: 2.3.2
""2021-03-31 === [main] == INFO  == org.quartz.core.QuartzScheduler == JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@59aa646e
""2021-03-31 === [main] == DEBUG == com.jonm.dao.ScheduleJobMapper.getJobList == ==>  Preparing: select job_id, bean_name, method_name, params, cron, status, remark, create_time from schedule_job
""2021-03-31 === [main] == DEBUG == com.jonm.dao.ScheduleJobMapper.getJobList == ==> Parameters: 
""2021-03-31 === [main] == TRACE == com.jonm.dao.ScheduleJobMapper.getJobList == <==    Columns: job_id, bean_name, method_name, params, cron, status, remark, create_time
""2021-03-31 === [main] == TRACE == com.jonm.dao.ScheduleJobMapper.getJobList == <==        Row: 1, redisSyncScheduleTask, syncBlogViewsToDatabase, , 0 0 1 * * ?, 1, 每天凌晨一点，从Redis将博客浏览量同步到数据库, 2020-11-17 23:45:42
""2021-03-31 === [main] == TRACE == com.jonm.dao.ScheduleJobMapper.getJobList == <==        Row: 2, visitorSyncScheduleTask, syncVisitInfoToDatabase, , 0 0 0 * * ?, 1, 清空当天Redis访客标识，记录当天的PV和UV，更新当天所有访客的PV和最后访问时间，更新城市新增访客UV数, 2021-02-05 08:14:28
""2021-03-31 === [main] == DEBUG == com.jonm.dao.ScheduleJobMapper.getJobList == <==      Total: 2
""2021-03-31 === [main] == INFO  == s.d.s.w.PropertySourcedRequestMappingHandlerMapping == Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
""2021-03-31 === [main] == INFO  == o.s.scheduling.concurrent.ThreadPoolTaskExecutor == Initializing ExecutorService 'applicationTaskExecutor'
""2021-03-31 === [main] == INFO  == o.s.security.web.DefaultSecurityFilterChain == Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@700f356b, org.springframework.security.web.context.SecurityContextPersistenceFilter@27dc95b9, org.springframework.security.web.header.HeaderWriterFilter@339cedbb, org.springframework.web.filter.CorsFilter@453ef145, org.springframework.security.web.authentication.logout.LogoutFilter@545c3628, com.jonm.config.JwtLoginFilter@712ce4f1, com.jonm.config.JwtFilter@3edd135d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@72722a6b, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4a115c4c, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3770dd80, org.springframework.security.web.session.SessionManagementFilter@33bd86fe, org.springframework.security.web.access.ExceptionTranslationFilter@27e688ad, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6f3a8d5e]
""2021-03-31 === [main] == INFO  == o.s.boot.web.embedded.tomcat.TomcatWebServer == Tomcat started on port(s): 8090 (http) with context path ''
""2021-03-31 === [main] == INFO  == s.d.s.web.plugins.DocumentationPluginsBootstrapper == Context refreshed
""2021-03-31 === [main] == INFO  == s.d.s.web.plugins.DocumentationPluginsBootstrapper == Found 1 custom documentation plugin(s)
""2021-03-31 === [main] == INFO  == s.d.spring.web.scanners.ApiListingReferenceScanner == Scanning for api listing references
""2021-03-31 === [main] == INFO  == s.d.s.w.r.operation.CachingOperationNameGenerator == Generating unique operation named: aboutUsingGET_1
""2021-03-31 === [main] == INFO  == s.d.s.w.r.operation.CachingOperationNameGenerator == Generating unique operation named: blogsUsingGET_1
""2021-03-31 === [main] == INFO  == s.d.s.w.r.operation.CachingOperationNameGenerator == Generating unique operation named: getBlogUsingGET_1
""2021-03-31 === [main] == INFO  == s.d.s.w.r.operation.CachingOperationNameGenerator == Generating unique operation named: deleteUsingDELETE_1
""2021-03-31 === [main] == INFO  == s.d.s.w.r.operation.CachingOperationNameGenerator == Generating unique operation named: deleteUsingDELETE_2
""2021-03-31 === [main] == INFO  == s.d.s.w.r.operation.CachingOperationNameGenerator == Generating unique operation named: commentsUsingGET_1
""2021-03-31 === [main] == INFO  == s.d.s.w.r.operation.CachingOperationNameGenerator == Generating unique operation named: deleteUsingDELETE_3
""2021-03-31 === [main] == INFO  == s.d.s.w.r.operation.CachingOperationNameGenerator == Generating unique operation named: updatePublishedUsingPUT_1
""2021-03-31 === [main] == INFO  == s.d.s.w.r.operation.CachingOperationNameGenerator == Generating unique operation named: friendsUsingGET_1
""2021-03-31 === [main] == INFO  == s.d.s.w.r.operation.CachingOperationNameGenerator == Generating unique operation named: deleteUsingDELETE_4
""2021-03-31 === [main] == INFO  == s.d.s.w.r.operation.CachingOperationNameGenerator == Generating unique operation named: updatePublishedUsingPUT_2
""2021-03-31 === [main] == INFO  == s.d.s.w.r.operation.CachingOperationNameGenerator == Generating unique operation named: momentsUsingGET_1
""2021-03-31 === [main] == INFO  == s.d.s.w.r.operation.CachingOperationNameGenerator == Generating unique operation named: deleteUsingDELETE_5
""2021-03-31 === [main] == INFO  == s.d.s.w.r.operation.CachingOperationNameGenerator == Generating unique operation named: deleteUsingDELETE_6
""2021-03-31 === [main] == INFO  == s.d.s.w.r.operation.CachingOperationNameGenerator == Generating unique operation named: deleteUsingDELETE_7
""2021-03-31 === [main] == INFO  == s.d.s.w.r.operation.CachingOperationNameGenerator == Generating unique operation named: deleteUsingDELETE_8
""2021-03-31 === [main] == INFO  == s.d.s.w.r.operation.CachingOperationNameGenerator == Generating unique operation named: deleteUsingDELETE_9
""2021-03-31 === [main] == INFO  == o.s.scheduling.quartz.SchedulerFactoryBean == Starting Quartz Scheduler now
""2021-03-31 === [main] == INFO  == org.quartz.core.QuartzScheduler == Scheduler quartzScheduler_$_NON_CLUSTERED started.
""2021-03-31 === [main] == INFO  == com.jonm.BlogApiApplication == Started BlogApiApplication in 45.427 seconds (JVM running for 60.357)
""2021-03-31 === [http-nio-8090-exec-2] == INFO  == o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] == Initializing Spring DispatcherServlet 'dispatcherServlet'
""2021-03-31 === [http-nio-8090-exec-2] == INFO  == org.springframework.web.servlet.DispatcherServlet == Initializing Servlet 'dispatcherServlet'
""2021-03-31 === [http-nio-8090-exec-2] == INFO  == org.springframework.web.servlet.DispatcherServlet == Completed initialization in 17 ms
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-2] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == ==>  Preparing: select id,name_en,name_zh,value,type from site_setting
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==    Columns: id, name_en, name_zh, value, type
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 1, webTitleSuffix, 网页标题后缀, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 2, blogName, 博客名称, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 3, footerImgTitle, 页脚图片标题, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 4, footerImgUrl, 页脚图片路径, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 5, copyright, Copyright, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 6, beian, ICP备案号, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 7, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 8, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 9, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 10, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 11, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 12, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 13, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 14, avatar, 头像路径, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 15, name, 昵称, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 16, rollText, 滚动个签, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 17, github, GitHub地址, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 18, qq, QQ链接, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 19, bilibili, bilibili链接, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 20, netease, 网易云音乐, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 21, email, email, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 22, favorite, 自定义, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 24, favorite, 自定义, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 25, reward, 赞赏码路径, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 26, commentAdminFlag, 博主评论标识, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 27, friendContent, 友链页面信息, <<BLOB>>, 4
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 28, friendCommentEnabled, 友链页面评论开关, <<BLOB>>, 4
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == <==      Total: 27
""2021-03-31 === [http-nio-8090-exec-2] == DEBUG == c.j.d.B.getBlogInfoListByIsPublished_COUNT == ==>  Preparing: SELECT count(0) FROM blog AS b LEFT JOIN category AS c ON b.category_id = c.id WHERE b.is_published = true
""2021-03-31 === [http-nio-8090-exec-2] == DEBUG == c.j.d.B.getBlogInfoListByIsPublished_COUNT == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-2] == TRACE == c.j.d.B.getBlogInfoListByIsPublished_COUNT == <==    Columns: count(0)
""2021-03-31 === [http-nio-8090-exec-2] == TRACE == c.j.d.B.getBlogInfoListByIsPublished_COUNT == <==        Row: 1
""2021-03-31 === [http-nio-8090-exec-2] == DEBUG == c.j.d.B.getBlogInfoListByIsPublished_COUNT == <==      Total: 1
""2021-03-31 === [http-nio-8090-exec-2] == DEBUG == c.jonm.dao.BlogMapper.getBlogInfoListByIsPublished == ==>  Preparing: SELECT b.id, b.title, b.description, b.is_top, b.create_time, b.views, b.words, b.read_time, b.password, c.category_name FROM blog AS b LEFT JOIN category AS c ON b.category_id = c.id WHERE b.is_published = true order by is_top desc, create_time desc LIMIT ?
""2021-03-31 === [http-nio-8090-exec-2] == DEBUG == c.jonm.dao.BlogMapper.getBlogInfoListByIsPublished == ==> Parameters: 5(Integer)
""2021-03-31 === [http-nio-8090-exec-2] == TRACE == c.jonm.dao.BlogMapper.getBlogInfoListByIsPublished == <==    Columns: id, title, description, is_top, create_time, views, words, read_time, password, category_name
""2021-03-31 === [http-nio-8090-exec-2] == TRACE == c.jonm.dao.BlogMapper.getBlogInfoListByIsPublished == <==        Row: 1, Test, <<BLOB>>, 0, 2021-03-28 17:00:05, 0, 1413, 7, , 个人项目
""2021-03-31 === [http-nio-8090-exec-2] == DEBUG == c.jonm.dao.BlogMapper.getBlogInfoListByIsPublished == <==      Total: 1
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == c.j.d.B.getNewBlogListByIsPublishedAndIsRecommend_COUNT == ==>  Preparing: SELECT count(0) FROM blog WHERE is_published = true AND is_recommend = true
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == c.j.d.B.getNewBlogListByIsPublishedAndIsRecommend_COUNT == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == c.j.d.B.getNewBlogListByIsPublishedAndIsRecommend_COUNT == <==    Columns: count(0)
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == c.j.d.B.getNewBlogListByIsPublishedAndIsRecommend_COUNT == <==        Row: 1
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == c.j.d.B.getNewBlogListByIsPublishedAndIsRecommend_COUNT == <==      Total: 1
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == c.j.d.B.getNewBlogListByIsPublishedAndIsRecommend == ==>  Preparing: select id, title, password from blog where is_published=true and is_recommend=true order by create_time desc LIMIT ?
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == c.j.d.B.getNewBlogListByIsPublishedAndIsRecommend == ==> Parameters: 3(Integer)
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == c.j.d.B.getNewBlogListByIsPublishedAndIsRecommend == <==    Columns: id, title, password
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == c.j.d.B.getNewBlogListByIsPublishedAndIsRecommend == <==        Row: 1, Test, 
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == c.j.d.B.getNewBlogListByIsPublishedAndIsRecommend == <==      Total: 1
""2021-03-31 === [http-nio-8090-exec-2] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == ==>  Preparing: select t.tag_name, t.color from blog_tag as bt left join tag as t on bt.tag_id=t.id where bt.blog_id=?
""2021-03-31 === [http-nio-8090-exec-2] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == ==> Parameters: 1(Long)
""2021-03-31 === [http-nio-8090-exec-2] == TRACE == com.jonm.dao.TagMapper.getTagListByBlogId == <==    Columns: tag_name, color
""2021-03-31 === [http-nio-8090-exec-2] == TRACE == com.jonm.dao.TagMapper.getTagListByBlogId == <==        Row: Mysql, null
""2021-03-31 === [http-nio-8090-exec-2] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == <==      Total: 1
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.CategoryMapper.getCategoryNameList == ==>  Preparing: select category_name from category order by id desc
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.CategoryMapper.getCategoryNameList == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.CategoryMapper.getCategoryNameList == <==    Columns: category_name
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.CategoryMapper.getCategoryNameList == <==        Row: 个人项目
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.CategoryMapper.getCategoryNameList == <==        Row: 项目
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.CategoryMapper.getCategoryNameList == <==      Total: 2
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.TagMapper.getTagListNotId == ==>  Preparing: select tag_name, color from tag order by id desc
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.TagMapper.getTagListNotId == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.TagMapper.getTagListNotId == <==    Columns: tag_name, color
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.TagMapper.getTagListNotId == <==        Row: Mysql, null
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.TagMapper.getTagListNotId == <==        Row: Java, null
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.TagMapper.getTagListNotId == <==      Total: 2
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == ==>  Preparing: select b.id, b.title, b.password, c.category_name from blog as b left join category as c on b.category_id=c.id where b.is_published=true order by rand() limit ?
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == ==> Parameters: 5(Integer)
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == <==    Columns: id, title, password, category_name
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == <==        Row: 1, Test, , 个人项目
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == <==      Total: 1
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == ==>  Preparing: select t.tag_name, t.color from blog_tag as bt left join tag as t on bt.tag_id=t.id where bt.blog_id=?
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == ==> Parameters: 1(Long)
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.TagMapper.getTagListByBlogId == <==    Columns: tag_name, color
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.TagMapper.getTagListByBlogId == <==        Row: Mysql, null
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == <==      Total: 1
""2021-03-31 === [task-1] == INFO  == n.b.p.useragent.AbstractUserAgentAnalyzerDirect == Initializing Analyzer data structures
""2021-03-31 === [task-1] == INFO  == n.b.p.useragent.AbstractUserAgentAnalyzerDirect == Built in 1486 msec : Hashmap 114881, Ranges map:2900
""2021-03-31 === [task-1] == DEBUG == com.jonm.dao.VisitorMapper.saveVisitor == ==>  Preparing: insert into visitor (uuid, ip, ip_source, os, browser, create_time, last_time, pv, user_agent) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
""2021-03-31 === [task-2] == DEBUG == com.jonm.dao.VisitLogMapper.saveVisitLog == ==>  Preparing: insert into visit_log (uuid, uri, method, param, behavior, content, remark, ip, ip_source, os, browser, times, create_time, user_agent) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
""2021-03-31 === [task-2] == DEBUG == com.jonm.dao.VisitLogMapper.saveVisitLog == ==> Parameters: 897815bc-568b-41f9-82ee-50639a7263a9(String), /blogs(String), GET(String), {"pageNum":1}(String), 访问页面(String), 首页(String), 第1页(String), 192.168.189.1(String), 内网IP|内网IP(String), Windows 10(String), Chrome 88.0.4324.182(String), 595(Integer), 2021-03-31 18:28:01.256(Timestamp), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.182 Safari/537.36(String)
""2021-03-31 === [task-1] == DEBUG == com.jonm.dao.VisitorMapper.saveVisitor == ==> Parameters: 897815bc-568b-41f9-82ee-50639a7263a9(String), 192.168.189.1(String), 内网IP|内网IP(String), Windows 10(String), Chrome 88.0.4324.182(String), 2021-03-31 18:28:01.188(Timestamp), 2021-03-31 18:28:01.188(Timestamp), 0(Integer), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.182 Safari/537.36(String)
""2021-03-31 === [task-1] == DEBUG == com.jonm.dao.VisitorMapper.saveVisitor == <==    Updates: 1
""2021-03-31 === [task-2] == DEBUG == com.jonm.dao.VisitLogMapper.saveVisitLog == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-8] == INFO  == com.jonm.config.JwtLoginFilter == user:    ---> User(id=null, username=Admin, password=123456, nickname=null, avatar=null, email=null, createTime=null, updateTime=null, role=null)
""2021-03-31 === [http-nio-8090-exec-8] == DEBUG == com.jonm.dao.UserMapper.findByUsername == ==>  Preparing: select id,username,password,nickname,avatar,email,create_time,update_time,role from user where username=? limit 1
""2021-03-31 === [http-nio-8090-exec-8] == DEBUG == com.jonm.dao.UserMapper.findByUsername == ==> Parameters: Admin(String)
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.UserMapper.findByUsername == <==    Columns: id, username, password, nickname, avatar, email, create_time, update_time, role
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.UserMapper.findByUsername == <==        Row: 1, Admin, $2a$10$4wnwMW8Z4Bn6wR4K1YlbquQunlHM/4rvudVBX8oyfx16xeVtI6i7C, Admin, /img/avatar.jpg, admin@naccl.com, 2020-09-21 16:47:18, 2020-09-21 16:47:22, ROLE_admin
""2021-03-31 === [http-nio-8090-exec-8] == DEBUG == com.jonm.dao.UserMapper.findByUsername == <==      Total: 1
""2021-03-31 === [task-3] == DEBUG == com.jonm.dao.LoginLogMapper.saveLoginLog == ==>  Preparing: insert into login_log (username, ip, ip_source, os, browser, status, description, create_time, user_agent) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
""2021-03-31 === [task-3] == DEBUG == com.jonm.dao.LoginLogMapper.saveLoginLog == ==> Parameters: Admin(String), 192.168.189.1(String), 内网IP|内网IP(String), Windows 10(String), Chrome 88.0.4324.182(String), true(Boolean), 登录成功(String), 2021-03-31 18:28:44.488(Timestamp), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.182 Safari/537.36(String)
""2021-03-31 === [task-3] == DEBUG == com.jonm.dao.LoginLogMapper.saveLoginLog == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.VisitLogMapper.countVisitLogByToday == ==>  Preparing: select count(*) from visit_log where date(create_time)=curdate()
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.VisitLogMapper.countVisitLogByToday == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.VisitLogMapper.countVisitLogByToday == <==    Columns: count(*)
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.VisitLogMapper.countVisitLogByToday == <==        Row: 17
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.VisitLogMapper.countVisitLogByToday == <==      Total: 1
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.BlogMapper.countBlog == ==>  Preparing: select count(*) from blog
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.BlogMapper.countBlog == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.BlogMapper.countBlog == <==    Columns: count(*)
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.BlogMapper.countBlog == <==        Row: 1
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.BlogMapper.countBlog == <==      Total: 1
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.CommentMapper.countComment == ==>  Preparing: select count(*) from comment
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.CommentMapper.countComment == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.CommentMapper.countComment == <==    Columns: count(*)
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.CommentMapper.countComment == <==        Row: 2
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.CommentMapper.countComment == <==      Total: 1
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.BlogMapper.getCategoryBlogCountList == ==>  Preparing: select category_id, count(category_id) as blog_count from blog group by category_id
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.BlogMapper.getCategoryBlogCountList == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.BlogMapper.getCategoryBlogCountList == <==    Columns: category_id, blog_count
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.BlogMapper.getCategoryBlogCountList == <==        Row: 2, 1
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.BlogMapper.getCategoryBlogCountList == <==      Total: 1
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.CategoryMapper.getCategoryList == ==>  Preparing: select id, category_name from category order by id desc
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.CategoryMapper.getCategoryList == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.CategoryMapper.getCategoryList == <==    Columns: id, category_name
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.CategoryMapper.getCategoryList == <==        Row: 2, 个人项目
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.CategoryMapper.getCategoryList == <==        Row: 1, 项目
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.CategoryMapper.getCategoryList == <==      Total: 2
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.TagMapper.getTagBlogCount == ==>  Preparing: select tag_id, count(tag_id) as blog_count from blog_tag group by tag_id
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.TagMapper.getTagBlogCount == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.TagMapper.getTagBlogCount == <==    Columns: tag_id, blog_count
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.TagMapper.getTagBlogCount == <==        Row: 2, 1
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.TagMapper.getTagBlogCount == <==      Total: 1
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.TagMapper.getTagList == ==>  Preparing: select id, tag_name, color from tag order by id desc
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.TagMapper.getTagList == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.TagMapper.getTagList == <==    Columns: id, tag_name, color
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.TagMapper.getTagList == <==        Row: 2, Mysql, null
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.TagMapper.getTagList == <==        Row: 1, Java, null
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.TagMapper.getTagList == <==      Total: 2
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == c.j.d.VisitRecordMapper.getVisitRecordListByLimit == ==>  Preparing: select pv, uv, date from visit_record order by id desc limit ?
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == c.j.d.VisitRecordMapper.getVisitRecordListByLimit == ==> Parameters: 7(Integer)
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == c.j.d.VisitRecordMapper.getVisitRecordListByLimit == <==      Total: 0
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.CityVisitorMapper.getCityVisitorList == ==>  Preparing: select city, uv from city_visitor order by uv desc
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.CityVisitorMapper.getCityVisitorList == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.CityVisitorMapper.getCityVisitorList == <==      Total: 0
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == ==>  Preparing: select id,name_en,name_zh,value,type from site_setting
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==    Columns: id, name_en, name_zh, value, type
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 1, webTitleSuffix, 网页标题后缀, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 2, blogName, 博客名称, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 3, footerImgTitle, 页脚图片标题, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 4, footerImgUrl, 页脚图片路径, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 5, copyright, Copyright, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 6, beian, ICP备案号, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 7, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 8, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 9, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 10, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 11, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 12, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 13, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 14, avatar, 头像路径, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 15, name, 昵称, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 16, rollText, 滚动个签, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 17, github, GitHub地址, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 18, qq, QQ链接, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 19, bilibili, bilibili链接, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 20, netease, 网易云音乐, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 21, email, email, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 22, favorite, 自定义, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 24, favorite, 自定义, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 25, reward, 赞赏码路径, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 26, commentAdminFlag, 博主评论标识, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 27, friendContent, 友链页面信息, <<BLOB>>, 4
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 28, friendCommentEnabled, 友链页面评论开关, <<BLOB>>, 4
""2021-03-31 === [http-nio-8090-exec-1] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == <==      Total: 27
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-6] == INFO  == com.jonm.config.JwtLoginFilter == user:    ---> User(id=null, username=Admin, password=123456, nickname=null, avatar=null, email=null, createTime=null, updateTime=null, role=null)
""2021-03-31 === [http-nio-8090-exec-6] == DEBUG == com.jonm.dao.UserMapper.findByUsername == ==>  Preparing: select id,username,password,nickname,avatar,email,create_time,update_time,role from user where username=? limit 1
""2021-03-31 === [http-nio-8090-exec-6] == DEBUG == com.jonm.dao.UserMapper.findByUsername == ==> Parameters: Admin(String)
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.UserMapper.findByUsername == <==    Columns: id, username, password, nickname, avatar, email, create_time, update_time, role
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.UserMapper.findByUsername == <==        Row: 1, Admin, $2a$10$4wnwMW8Z4Bn6wR4K1YlbquQunlHM/4rvudVBX8oyfx16xeVtI6i7C, Admin, /img/avatar.jpg, admin@naccl.com, 2020-09-21 16:47:18, 2020-09-21 16:47:22, ROLE_admin
""2021-03-31 === [http-nio-8090-exec-6] == DEBUG == com.jonm.dao.UserMapper.findByUsername == <==      Total: 1
""2021-03-31 === [task-4] == DEBUG == com.jonm.dao.LoginLogMapper.saveLoginLog == ==>  Preparing: insert into login_log (username, ip, ip_source, os, browser, status, description, create_time, user_agent) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
""2021-03-31 === [task-4] == DEBUG == com.jonm.dao.LoginLogMapper.saveLoginLog == ==> Parameters: Admin(String), 192.168.189.1(String), 内网IP|内网IP(String), Windows 10(String), Chrome 88.0.4324.182(String), true(Boolean), 登录成功(String), 2021-03-31 18:30:54.834(Timestamp), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.182 Safari/537.36(String)
""2021-03-31 === [task-4] == DEBUG == com.jonm.dao.LoginLogMapper.saveLoginLog == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-7] == DEBUG == com.jonm.dao.VisitLogMapper.countVisitLogByToday == ==>  Preparing: select count(*) from visit_log where date(create_time)=curdate()
""2021-03-31 === [http-nio-8090-exec-7] == DEBUG == com.jonm.dao.VisitLogMapper.countVisitLogByToday == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.VisitLogMapper.countVisitLogByToday == <==    Columns: count(*)
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.VisitLogMapper.countVisitLogByToday == <==        Row: 17
""2021-03-31 === [http-nio-8090-exec-7] == DEBUG == com.jonm.dao.VisitLogMapper.countVisitLogByToday == <==      Total: 1
""2021-03-31 === [http-nio-8090-exec-7] == DEBUG == com.jonm.dao.BlogMapper.countBlog == ==>  Preparing: select count(*) from blog
""2021-03-31 === [http-nio-8090-exec-7] == DEBUG == com.jonm.dao.BlogMapper.countBlog == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.BlogMapper.countBlog == <==    Columns: count(*)
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.BlogMapper.countBlog == <==        Row: 1
""2021-03-31 === [http-nio-8090-exec-7] == DEBUG == com.jonm.dao.BlogMapper.countBlog == <==      Total: 1
""2021-03-31 === [http-nio-8090-exec-7] == DEBUG == com.jonm.dao.CommentMapper.countComment == ==>  Preparing: select count(*) from comment
""2021-03-31 === [http-nio-8090-exec-7] == DEBUG == com.jonm.dao.CommentMapper.countComment == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.CommentMapper.countComment == <==    Columns: count(*)
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.CommentMapper.countComment == <==        Row: 2
""2021-03-31 === [http-nio-8090-exec-7] == DEBUG == com.jonm.dao.CommentMapper.countComment == <==      Total: 1
""2021-03-31 === [http-nio-8090-exec-7] == DEBUG == com.jonm.dao.BlogMapper.getCategoryBlogCountList == ==>  Preparing: select category_id, count(category_id) as blog_count from blog group by category_id
""2021-03-31 === [http-nio-8090-exec-7] == DEBUG == com.jonm.dao.BlogMapper.getCategoryBlogCountList == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.BlogMapper.getCategoryBlogCountList == <==    Columns: category_id, blog_count
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.BlogMapper.getCategoryBlogCountList == <==        Row: 2, 1
""2021-03-31 === [http-nio-8090-exec-7] == DEBUG == com.jonm.dao.BlogMapper.getCategoryBlogCountList == <==      Total: 1
""2021-03-31 === [http-nio-8090-exec-7] == DEBUG == com.jonm.dao.CategoryMapper.getCategoryList == ==>  Preparing: select id, category_name from category order by id desc
""2021-03-31 === [http-nio-8090-exec-7] == DEBUG == com.jonm.dao.CategoryMapper.getCategoryList == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.CategoryMapper.getCategoryList == <==    Columns: id, category_name
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.CategoryMapper.getCategoryList == <==        Row: 2, 个人项目
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.CategoryMapper.getCategoryList == <==        Row: 1, 项目
""2021-03-31 === [http-nio-8090-exec-7] == DEBUG == com.jonm.dao.CategoryMapper.getCategoryList == <==      Total: 2
""2021-03-31 === [http-nio-8090-exec-7] == DEBUG == com.jonm.dao.TagMapper.getTagBlogCount == ==>  Preparing: select tag_id, count(tag_id) as blog_count from blog_tag group by tag_id
""2021-03-31 === [http-nio-8090-exec-7] == DEBUG == com.jonm.dao.TagMapper.getTagBlogCount == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.TagMapper.getTagBlogCount == <==    Columns: tag_id, blog_count
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.TagMapper.getTagBlogCount == <==        Row: 2, 1
""2021-03-31 === [http-nio-8090-exec-7] == DEBUG == com.jonm.dao.TagMapper.getTagBlogCount == <==      Total: 1
""2021-03-31 === [http-nio-8090-exec-7] == DEBUG == com.jonm.dao.TagMapper.getTagList == ==>  Preparing: select id, tag_name, color from tag order by id desc
""2021-03-31 === [http-nio-8090-exec-7] == DEBUG == com.jonm.dao.TagMapper.getTagList == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.TagMapper.getTagList == <==    Columns: id, tag_name, color
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.TagMapper.getTagList == <==        Row: 2, Mysql, null
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.TagMapper.getTagList == <==        Row: 1, Java, null
""2021-03-31 === [http-nio-8090-exec-7] == DEBUG == com.jonm.dao.TagMapper.getTagList == <==      Total: 2
""2021-03-31 === [http-nio-8090-exec-7] == DEBUG == c.j.d.VisitRecordMapper.getVisitRecordListByLimit == ==>  Preparing: select pv, uv, date from visit_record order by id desc limit ?
""2021-03-31 === [http-nio-8090-exec-7] == DEBUG == c.j.d.VisitRecordMapper.getVisitRecordListByLimit == ==> Parameters: 7(Integer)
""2021-03-31 === [http-nio-8090-exec-7] == DEBUG == c.j.d.VisitRecordMapper.getVisitRecordListByLimit == <==      Total: 0
""2021-03-31 === [http-nio-8090-exec-7] == DEBUG == com.jonm.dao.CityVisitorMapper.getCityVisitorList == ==>  Preparing: select city, uv from city_visitor order by uv desc
""2021-03-31 === [http-nio-8090-exec-7] == DEBUG == com.jonm.dao.CityVisitorMapper.getCityVisitorList == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-7] == DEBUG == com.jonm.dao.CityVisitorMapper.getCityVisitorList == <==      Total: 0
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-8] == DEBUG == com.jonm.dao.VisitLogMapper.countVisitLogByToday == ==>  Preparing: select count(*) from visit_log where date(create_time)=curdate()
""2021-03-31 === [http-nio-8090-exec-8] == DEBUG == com.jonm.dao.VisitLogMapper.countVisitLogByToday == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.VisitLogMapper.countVisitLogByToday == <==    Columns: count(*)
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.VisitLogMapper.countVisitLogByToday == <==        Row: 17
""2021-03-31 === [http-nio-8090-exec-8] == DEBUG == com.jonm.dao.VisitLogMapper.countVisitLogByToday == <==      Total: 1
""2021-03-31 === [http-nio-8090-exec-8] == DEBUG == com.jonm.dao.BlogMapper.countBlog == ==>  Preparing: select count(*) from blog
""2021-03-31 === [http-nio-8090-exec-8] == DEBUG == com.jonm.dao.BlogMapper.countBlog == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.BlogMapper.countBlog == <==    Columns: count(*)
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.BlogMapper.countBlog == <==        Row: 1
""2021-03-31 === [http-nio-8090-exec-8] == DEBUG == com.jonm.dao.BlogMapper.countBlog == <==      Total: 1
""2021-03-31 === [http-nio-8090-exec-8] == DEBUG == com.jonm.dao.CommentMapper.countComment == ==>  Preparing: select count(*) from comment
""2021-03-31 === [http-nio-8090-exec-8] == DEBUG == com.jonm.dao.CommentMapper.countComment == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.CommentMapper.countComment == <==    Columns: count(*)
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.CommentMapper.countComment == <==        Row: 2
""2021-03-31 === [http-nio-8090-exec-8] == DEBUG == com.jonm.dao.CommentMapper.countComment == <==      Total: 1
""2021-03-31 === [http-nio-8090-exec-8] == DEBUG == com.jonm.dao.BlogMapper.getCategoryBlogCountList == ==>  Preparing: select category_id, count(category_id) as blog_count from blog group by category_id
""2021-03-31 === [http-nio-8090-exec-8] == DEBUG == com.jonm.dao.BlogMapper.getCategoryBlogCountList == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.BlogMapper.getCategoryBlogCountList == <==    Columns: category_id, blog_count
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.BlogMapper.getCategoryBlogCountList == <==        Row: 2, 1
""2021-03-31 === [http-nio-8090-exec-8] == DEBUG == com.jonm.dao.BlogMapper.getCategoryBlogCountList == <==      Total: 1
""2021-03-31 === [http-nio-8090-exec-8] == DEBUG == com.jonm.dao.CategoryMapper.getCategoryList == ==>  Preparing: select id, category_name from category order by id desc
""2021-03-31 === [http-nio-8090-exec-8] == DEBUG == com.jonm.dao.CategoryMapper.getCategoryList == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.CategoryMapper.getCategoryList == <==    Columns: id, category_name
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.CategoryMapper.getCategoryList == <==        Row: 2, 个人项目
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.CategoryMapper.getCategoryList == <==        Row: 1, 项目
""2021-03-31 === [http-nio-8090-exec-8] == DEBUG == com.jonm.dao.CategoryMapper.getCategoryList == <==      Total: 2
""2021-03-31 === [http-nio-8090-exec-8] == DEBUG == com.jonm.dao.TagMapper.getTagBlogCount == ==>  Preparing: select tag_id, count(tag_id) as blog_count from blog_tag group by tag_id
""2021-03-31 === [http-nio-8090-exec-8] == DEBUG == com.jonm.dao.TagMapper.getTagBlogCount == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.TagMapper.getTagBlogCount == <==    Columns: tag_id, blog_count
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.TagMapper.getTagBlogCount == <==        Row: 2, 1
""2021-03-31 === [http-nio-8090-exec-8] == DEBUG == com.jonm.dao.TagMapper.getTagBlogCount == <==      Total: 1
""2021-03-31 === [http-nio-8090-exec-8] == DEBUG == com.jonm.dao.TagMapper.getTagList == ==>  Preparing: select id, tag_name, color from tag order by id desc
""2021-03-31 === [http-nio-8090-exec-8] == DEBUG == com.jonm.dao.TagMapper.getTagList == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.TagMapper.getTagList == <==    Columns: id, tag_name, color
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.TagMapper.getTagList == <==        Row: 2, Mysql, null
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.TagMapper.getTagList == <==        Row: 1, Java, null
""2021-03-31 === [http-nio-8090-exec-8] == DEBUG == com.jonm.dao.TagMapper.getTagList == <==      Total: 2
""2021-03-31 === [http-nio-8090-exec-8] == DEBUG == c.j.d.VisitRecordMapper.getVisitRecordListByLimit == ==>  Preparing: select pv, uv, date from visit_record order by id desc limit ?
""2021-03-31 === [http-nio-8090-exec-8] == DEBUG == c.j.d.VisitRecordMapper.getVisitRecordListByLimit == ==> Parameters: 7(Integer)
""2021-03-31 === [http-nio-8090-exec-8] == DEBUG == c.j.d.VisitRecordMapper.getVisitRecordListByLimit == <==      Total: 0
""2021-03-31 === [http-nio-8090-exec-8] == DEBUG == com.jonm.dao.CityVisitorMapper.getCityVisitorList == ==>  Preparing: select city, uv from city_visitor order by uv desc
""2021-03-31 === [http-nio-8090-exec-8] == DEBUG == com.jonm.dao.CityVisitorMapper.getCityVisitorList == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-8] == DEBUG == com.jonm.dao.CityVisitorMapper.getCityVisitorList == <==      Total: 0
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == ==>  Preparing: select id,name_en,name_zh,value,type from site_setting
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==    Columns: id, name_en, name_zh, value, type
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 1, webTitleSuffix, 网页标题后缀, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 2, blogName, 博客名称, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 3, footerImgTitle, 页脚图片标题, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 4, footerImgUrl, 页脚图片路径, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 5, copyright, Copyright, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 6, beian, ICP备案号, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 7, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 8, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 9, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 10, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 11, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 12, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 13, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 14, avatar, 头像路径, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 15, name, 昵称, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 16, rollText, 滚动个签, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 17, github, GitHub地址, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 18, qq, QQ链接, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 19, bilibili, bilibili链接, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 20, netease, 网易云音乐, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 21, email, email, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 22, favorite, 自定义, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 24, favorite, 自定义, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 25, reward, 赞赏码路径, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 26, commentAdminFlag, 博主评论标识, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 27, friendContent, 友链页面信息, <<BLOB>>, 4
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 28, friendCommentEnabled, 友链页面评论开关, <<BLOB>>, 4
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == <==      Total: 27
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-10] == INFO  == com.jonm.util.fastdfs.FastDFSClient == File Name: avatar.jpgFile Length:31156
""2021-03-31 === [http-nio-8090-exec-10] == INFO  == com.jonm.util.fastdfs.FastDFSClient == upload_file time used:156 ms
""2021-03-31 === [http-nio-8090-exec-10] == INFO  == com.jonm.util.fastdfs.FastDFSClient == upload file successfully!!!group_name:group1, remoteFileName: M00/00/00/n0t7aWBkT3SARMOgAAB5tNKTQyM856.jpg
""2021-03-31 === [http-nio-8090-exec-10] == INFO  == com.jonm.service.impl.UploadServiceImpl == path:    --------->http://159.75.123.105:8888/group1/M00/00/00/n0t7aWBkT3SARMOgAAB5tNKTQyM856.jpg
""2021-03-31 === [task-5] == DEBUG == com.jonm.dao.OperationLogMapper.saveOperationLog == ==>  Preparing: insert into operation_log (username, uri, method, param, description, ip, ip_source, os, browser, times, create_time, user_agent) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
""2021-03-31 === [task-5] == DEBUG == com.jonm.dao.OperationLogMapper.saveOperationLog == ==> Parameters: Admin(String), /admin/uploadimages(String), POST(String), {}(String), 图片上传(String), 192.168.189.1(String), 内网IP|内网IP(String), Windows 10(String), Chrome 88.0.4324.182(String), 256(Integer), 2021-03-31 18:31:15.78(Timestamp), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.182 Safari/537.36(String)
""2021-03-31 === [task-5] == DEBUG == com.jonm.dao.OperationLogMapper.saveOperationLog == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-1] == INFO  == com.jonm.util.fastdfs.FastDFSClient == File Name: paper-plane.pngFile Length:14659
""2021-03-31 === [http-nio-8090-exec-1] == INFO  == com.jonm.util.fastdfs.FastDFSClient == upload_file time used:93 ms
""2021-03-31 === [http-nio-8090-exec-1] == INFO  == com.jonm.util.fastdfs.FastDFSClient == upload file successfully!!!group_name:group1, remoteFileName: M00/00/00/n0t7aWBkT3qANsnQAAA5Qy_TrhE653.png
""2021-03-31 === [http-nio-8090-exec-1] == INFO  == com.jonm.service.impl.UploadServiceImpl == path:    --------->http://159.75.123.105:8888/group1/M00/00/00/n0t7aWBkT3qANsnQAAA5Qy_TrhE653.png
""2021-03-31 === [task-6] == DEBUG == com.jonm.dao.OperationLogMapper.saveOperationLog == ==>  Preparing: insert into operation_log (username, uri, method, param, description, ip, ip_source, os, browser, times, create_time, user_agent) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
""2021-03-31 === [task-6] == DEBUG == com.jonm.dao.OperationLogMapper.saveOperationLog == ==> Parameters: Admin(String), /admin/uploadimages(String), POST(String), {}(String), 图片上传(String), 192.168.189.1(String), 内网IP|内网IP(String), Windows 10(String), Chrome 88.0.4324.182(String), 93(Integer), 2021-03-31 18:31:22.428(Timestamp), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.182 Safari/537.36(String)
""2021-03-31 === [task-6] == DEBUG == com.jonm.dao.OperationLogMapper.saveOperationLog == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==>  Preparing: update site_setting set value=? where id=?
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==> Parameters:  - Jonm's Blog(String), 1(Long)
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==>  Preparing: update site_setting set value=? where id=?
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==> Parameters: Jonm's Blog(String), 2(Long)
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==>  Preparing: update site_setting set value=? where id=?
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==> Parameters: 手机看本站(String), 3(Long)
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==>  Preparing: update site_setting set value=? where id=?
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==> Parameters: http://159.75.123.105:8888/group1/M00/00/00/n0t7aWBkT3qANsnQAAA5Qy_TrhE653.png(String), 4(Long)
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==>  Preparing: update site_setting set value=? where id=?
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==> Parameters: {"title":"Copyright © 2020 - 2021","siteName":"JONM'S BLOG"}(String), 5(Long)
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==>  Preparing: update site_setting set value=? where id=?
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==> Parameters: (String), 6(Long)
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==>  Preparing: update site_setting set value=? where id=?
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==> Parameters: /img/reward.jpg(String), 25(Long)
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==>  Preparing: update site_setting set value=? where id=?
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==> Parameters: 咕咕(String), 26(Long)
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==>  Preparing: update site_setting set value=? where id=?
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==> Parameters: {"title":"由 Spring Boot 强力驱动","url":"https://spring.io/projects/spring-boot/","subject":"Powered","value":"Spring Boot","color":"blue"}(String), 7(Long)
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==>  Preparing: update site_setting set value=? where id=?
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==> Parameters: {"title":"Vue.js 客户端渲染","url":"https://cn.vuejs.org/","subject":"SPA","value":"Vue.js","color":"brightgreen"}(String), 8(Long)
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==>  Preparing: update site_setting set value=? where id=?
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==> Parameters: {"title":"UI 框架 Semantic-UI","url":"https://semantic-ui.com/","subject":"UI","value":"Semantic-UI","color":"semantic-ui"}(String), 9(Long)
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==>  Preparing: update site_setting set value=? where id=?
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==> Parameters: {"title":"阿里云提供服务器及域名相关服务","url":"https://www.aliyun.com/","subject":"VPS & DNS","value":"Aliyun","color":"blueviolet"}(String), 10(Long)
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==>  Preparing: update site_setting set value=? where id=?
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==> Parameters: {"title":"jsDelivr 提供 CDN 加速服务","url":"https://www.jsdelivr.com/","subject":"CDN","value":"jsDelivr","color":"orange"}(String), 11(Long)
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==>  Preparing: update site_setting set value=? where id=?
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==> Parameters: {"title":"GitHub 提供图床","url":"https://github.com/","subject":"OSS","value":"GitHub","color":"github"}(String), 12(Long)
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==>  Preparing: update site_setting set value=? where id=?
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==> Parameters: {"title":"本站点采用 CC BY 4.0 国际许可协议进行许可","url":"https://creativecommons.org/licenses/by/4.0/","subject":"CC","value":"BY 4.0","color":"lightgray"}(String), 13(Long)
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==>  Preparing: update site_setting set value=? where id=?
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==> Parameters: http://159.75.123.105:8888/group1/M00/00/00/n0t7aWBkT3SARMOgAAB5tNKTQyM856.jpg(String), 14(Long)
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==>  Preparing: update site_setting set value=? where id=?
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==> Parameters: Jonm(String), 15(Long)
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==>  Preparing: update site_setting set value=? where id=?
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==> Parameters: "现在过的每一天，都是余生中最年轻的一天。“(String), 16(Long)
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==>  Preparing: update site_setting set value=? where id=?
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==> Parameters: https://github.com/Jonm(String), 17(Long)
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==>  Preparing: update site_setting set value=? where id=?
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==> Parameters: http://sighttp.qq.com/authd?IDKEY=(String), 18(Long)
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==>  Preparing: update site_setting set value=? where id=?
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==> Parameters: https://space.bilibili.com/(String), 19(Long)
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==>  Preparing: update site_setting set value=? where id=?
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==> Parameters: https://music.163.com/#/user/home?id=(String), 20(Long)
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==>  Preparing: update site_setting set value=? where id=?
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==> Parameters: mailto:1773304209@qq.com(String), 21(Long)
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==>  Preparing: update site_setting set value=? where id=?
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==> Parameters: {"title":"最喜欢的动漫 📺","content":"海贼王、火影忍者、家庭教师、进击的巨人、鬼灭之刃"}(String), 22(Long)
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==>  Preparing: update site_setting set value=? where id=?
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == ==> Parameters: {"title":"最喜欢的运动🎾","content":"网球，长跑"}(String), 24(Long)
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.SiteSettingMapper.updateSiteSetting == <==    Updates: 1
""2021-03-31 === [task-7] == DEBUG == com.jonm.dao.OperationLogMapper.saveOperationLog == ==>  Preparing: insert into operation_log (username, uri, method, param, description, ip, ip_source, os, browser, times, create_time, user_agent) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
""2021-03-31 === [task-7] == DEBUG == com.jonm.dao.OperationLogMapper.saveOperationLog == ==> Parameters: Admin(String), /admin/siteSettings(String), POST(String), {"map":{"settings":[{"id":1,"nameEn":"webTitleSuffix","nameZh":"网页标题后缀","value":" - Jonm's Blog","type":1},{"id":2,"nameEn":"blogName","nameZh":"博客名称","value":"Jonm's Blog","type":1},{"id":3,"nameEn":"footerImgTitle","nameZh":"页脚图片标题","value":"手机看本站","type":1},{"id":4,"nameEn":"footerImgUrl","nameZh":"页脚图片路径","value":"http://159.75.123.105:8888/group1/M00/00/00/n0t7aWBkT3qANsnQAAA5Qy_TrhE653.png","type":1},{"id":5,"nameEn":"copyright","nameZh":"Copyright","value":"{\"title\":\"Copyright © 2020 - 2021\",\"siteName\":\"JONM'S BLOG\"}","type":1},{"id":6,"nameEn":"beian","nameZh":"ICP备案号","value":"","type":1},{"id":25,"nameEn":"reward","nameZh":"赞赏码路径","value":"/img/reward.jpg","type":1},{"id":26,"nameEn":"commentAdminFlag","nameZh":"博主评论标识","value":"咕咕","type":1},{"id":7,"nameEn":"badge","nameZh":"徽标","value":"{\"title\":\"由 Spring Boot 强力驱动\",\"url\":\"https://spring.io/projects/spring-boot/\",\"subject\":\"Powered\",\"value\":\"Spring Boot\",\"color\":\"blue\"}","type":2},{"id":8,"nameEn":"badge","nameZh":"徽标","value":"{\"title\":\"Vue.js 客户端渲染\",\"url\":\"https://cn.vuejs.org/\",\"subject\":\"SPA\",\"value\":\"Vue.js\",\"color\":\"brightgreen\"}","type":2},{"id":9,"nameEn":"badge","nameZh":"徽标","value":"{\"title\":\"UI 框架 Semantic-UI\",\"url\":\"https://semantic-ui.com/\",\"subject\":\"UI\",\"value\":\"Semantic-UI\",\"color\":\"semantic-ui\"}","type":2},{"id":10,"nameEn":"badge","nameZh":"徽标","value":"{\"title\":\"阿里云提供服务器及域名相关服务\",\"url\":\"https://www.aliyun.com/\",\"subject\":\"VPS & DNS\",\"value\":\"Aliyun\",\"color\":\"blueviolet\"}","type":2},{"id":11,"nameEn":"badge","nameZh":"徽标","value":"{\"title\":\"jsDelivr 提供 CDN 加速服务\",\"url\":\"https://www.jsdelivr.com/\",\"subject\":\"CDN\",\"value\":\"jsDelivr\",\"color\":\"orange\"}","type":2},{"id":12,"nameEn":"badge","nameZh":"徽标","value":"{\"title\":\"GitHub 提供图床\",\"url\":\"https://github.com/\",\"subject\":\"OSS\",\"value\":\"GitHub\",\"color\":\"github\"}","type":2},{"id":13,"nameEn":"badge","nameZh":"徽标","va(String), 更新站点配置信息(String), 192.168.189.1(String), 内网IP|内网IP(String), Windows 10(String), Chrome 88.0.4324.182(String), 1027(Integer), 2021-03-31 18:31:29.738(Timestamp), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.182 Safari/537.36(String)
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [task-7] == DEBUG == com.jonm.dao.OperationLogMapper.saveOperationLog == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == ==>  Preparing: select id,name_en,name_zh,value,type from site_setting
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==    Columns: id, name_en, name_zh, value, type
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 1, webTitleSuffix, 网页标题后缀, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 2, blogName, 博客名称, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 3, footerImgTitle, 页脚图片标题, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 4, footerImgUrl, 页脚图片路径, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 5, copyright, Copyright, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 6, beian, ICP备案号, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 7, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 8, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 9, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 10, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 11, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 12, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 13, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 14, avatar, 头像路径, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 15, name, 昵称, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 16, rollText, 滚动个签, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 17, github, GitHub地址, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 18, qq, QQ链接, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 19, bilibili, bilibili链接, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 20, netease, 网易云音乐, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 21, email, email, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 22, favorite, 自定义, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 24, favorite, 自定义, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 25, reward, 赞赏码路径, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 26, commentAdminFlag, 博主评论标识, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 27, friendContent, 友链页面信息, <<BLOB>>, 4
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 28, friendCommentEnabled, 友链页面评论开关, <<BLOB>>, 4
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == <==      Total: 27
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-7] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == ==>  Preparing: select id,name_en,name_zh,value,type from site_setting
""2021-03-31 === [http-nio-8090-exec-7] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==    Columns: id, name_en, name_zh, value, type
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 1, webTitleSuffix, 网页标题后缀, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 2, blogName, 博客名称, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 3, footerImgTitle, 页脚图片标题, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 4, footerImgUrl, 页脚图片路径, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 5, copyright, Copyright, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 6, beian, ICP备案号, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 7, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 8, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 9, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 10, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 11, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 12, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 13, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 14, avatar, 头像路径, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 15, name, 昵称, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 16, rollText, 滚动个签, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 17, github, GitHub地址, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 18, qq, QQ链接, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 19, bilibili, bilibili链接, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 20, netease, 网易云音乐, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 21, email, email, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 22, favorite, 自定义, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 24, favorite, 自定义, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 25, reward, 赞赏码路径, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 26, commentAdminFlag, 博主评论标识, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 27, friendContent, 友链页面信息, <<BLOB>>, 4
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 28, friendCommentEnabled, 友链页面评论开关, <<BLOB>>, 4
""2021-03-31 === [http-nio-8090-exec-7] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == <==      Total: 27
""2021-03-31 === [http-nio-8090-exec-7] == DEBUG == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == ==>  Preparing: select b.id, b.title, b.password, c.category_name from blog as b left join category as c on b.category_id=c.id where b.is_published=true order by rand() limit ?
""2021-03-31 === [http-nio-8090-exec-7] == DEBUG == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == ==> Parameters: 5(Integer)
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == <==    Columns: id, title, password, category_name
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == <==        Row: 1, Test, , 个人项目
""2021-03-31 === [http-nio-8090-exec-7] == DEBUG == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == <==      Total: 1
""2021-03-31 === [http-nio-8090-exec-7] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == ==>  Preparing: select t.tag_name, t.color from blog_tag as bt left join tag as t on bt.tag_id=t.id where bt.blog_id=?
""2021-03-31 === [http-nio-8090-exec-7] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == ==> Parameters: 1(Long)
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.TagMapper.getTagListByBlogId == <==    Columns: tag_name, color
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.TagMapper.getTagListByBlogId == <==        Row: Mysql, null
""2021-03-31 === [http-nio-8090-exec-7] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == <==      Total: 1
""2021-03-31 === [task-8] == DEBUG == com.jonm.dao.VisitLogMapper.saveVisitLog == ==>  Preparing: insert into visit_log (uuid, uri, method, param, behavior, content, remark, ip, ip_source, os, browser, times, create_time, user_agent) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
""2021-03-31 === [task-8] == DEBUG == com.jonm.dao.VisitLogMapper.saveVisitLog == ==> Parameters: 897815bc-568b-41f9-82ee-50639a7263a9(String), /blogs(String), GET(String), {"pageNum":1}(String), 访问页面(String), 首页(String), 第1页(String), 192.168.189.1(String), 内网IP|内网IP(String), Windows 10(String), Chrome 88.0.4324.182(String), 137(Integer), 2021-03-31 18:31:37.632(Timestamp), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.182 Safari/537.36(String)
""2021-03-31 === [task-8] == DEBUG == com.jonm.dao.VisitLogMapper.saveVisitLog == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-2] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [task-9] == DEBUG == com.jonm.dao.ExceptionLogMapper.saveExceptionLog == ==>  Preparing: insert into exception_log (uri, method, param, description, error, ip, ip_source, os, browser, create_time, user_agent) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
""2021-03-31 === [task-9] == DEBUG == com.jonm.dao.ExceptionLogMapper.saveExceptionLog == ==> Parameters: /site(String), GET(String), {}(String), (String), org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out after 10 second(s)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:272)
	at org.springframework.data.redis.connection.lettuce.LettuceStringCommands.convertLettuceAccessException(LettuceStringCommands.java:800)
	at org.springframework.data.redis.connection.lettuce.LettuceStringCommands.get(LettuceStringCommands.java:70)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.get(DefaultedRedisConnection.java:267)
	at org.springframework.data.redis.core.DefaultValueOperations$1.inRedis(DefaultValueOperations.java:57)
	at org.springframework.data.redis.core.AbstractOperations$ValueDeserializingRedisCallback.doInRedis(AbstractOperations.java:60)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:229)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:189)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:96)
	at org.springframework.data.redis.core.DefaultValueOperations.get(DefaultValueOperations.java:53)
	at com.jonm.service.impl.RedisServiceImpl.getMapByValue(RedisServiceImpl.java:73)
	at com.jonm.service.impl.RedisServiceImpl$$FastClassBySpringCGLIB$$f5f6c692.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.service.impl.RedisServiceImpl$$EnhancerBySpringCGLIB$$2ec1f2d8.getMapByValue(<generated>)
	at com.jonm.service.impl.RedisServiceImpl$$FastClassBySpringCGLIB$$f5f6c692.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.service.impl.RedisServiceImpl$$EnhancerBySpringCGLIB$$835ec6c2.getMapByValue(<generated>)
	at com.jonm.service.impl.SiteSettingServiceImpl.getSiteInfo(SiteSettingServiceImpl.java:65)
	at com.jonm.service.impl.SiteSettingServiceImpl$$FastClassBySpringCGLIB$$57805c44.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.service.impl.SiteSettingServiceImpl$$EnhancerBySpringCGLIB$$cd0e495b.getSiteInfo(<generated>)
	at com.jonm.service.impl.SiteSettingServiceImpl$$FastClassBySpringCGLIB$$57805c44.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.service.impl.SiteSettingServiceImpl$$EnhancerBySpringCGLIB$$62b98551.getSiteInfo(<generated>)
	at com.jonm.controller.IndexController.site(IndexController.java:43)
	at com.jonm.controller.IndexController$$FastClassBySpringCGLIB$$f0fdad99.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.controller.IndexController$$EnhancerBySpringCGLIB$$487622be.site(<generated>)
	at com.jonm.controller.IndexController$$FastClassBySpringCGLIB$$f0fdad99.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.controller.IndexController$$EnhancerBySpringCGLIB$$7ba6e171.site(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:893)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:807)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1061)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:961)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.jonm.config.JwtFilter.doFilter(JwtFilter.java:35)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:218)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out after 10 second(s)
	at io.lettuce.core.internal.ExceptionFactory.createTimeoutException(ExceptionFactory.java:53)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:246)
	at io.lettuce.core.FutureSyncInvocationHandler.handleInvocation(FutureSyncInvocationHandler.java:75)
	at io.lettuce.core.internal.AbstractInvocationHandler.invoke(AbstractInvocationHandler.java:80)
	at com.sun.proxy.$Proxy115.get(Unknown Source)
	at org.springframework.data.redis.connection.lettuce.LettuceStringCommands.get(LettuceStringCommands.java:68)
	... 172 more
(String), 192.168.189.1(String), 内网IP|内网IP(String), Windows 10(String), Chrome 88.0.4324.182(String), 2021-03-31 19:00:00.781(Timestamp), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.182 Safari/537.36(String)
""2021-03-31 === [http-nio-8090-exec-1] == ERROR == com.jonm.handler.ControllerExceptionHandler == Request URL : http://localhost:8090/site, Exception :
"org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out after 10 second(s)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:272)
	at org.springframework.data.redis.connection.lettuce.LettuceStringCommands.convertLettuceAccessException(LettuceStringCommands.java:800)
	at org.springframework.data.redis.connection.lettuce.LettuceStringCommands.get(LettuceStringCommands.java:70)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.get(DefaultedRedisConnection.java:267)
	at org.springframework.data.redis.core.DefaultValueOperations$1.inRedis(DefaultValueOperations.java:57)
	at org.springframework.data.redis.core.AbstractOperations$ValueDeserializingRedisCallback.doInRedis(AbstractOperations.java:60)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:229)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:189)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:96)
	at org.springframework.data.redis.core.DefaultValueOperations.get(DefaultValueOperations.java:53)
	at com.jonm.service.impl.RedisServiceImpl.getMapByValue(RedisServiceImpl.java:73)
	at com.jonm.service.impl.RedisServiceImpl$$FastClassBySpringCGLIB$$f5f6c692.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.service.impl.RedisServiceImpl$$EnhancerBySpringCGLIB$$2ec1f2d8.getMapByValue(<generated>)
	at com.jonm.service.impl.RedisServiceImpl$$FastClassBySpringCGLIB$$f5f6c692.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.service.impl.RedisServiceImpl$$EnhancerBySpringCGLIB$$835ec6c2.getMapByValue(<generated>)
	at com.jonm.service.impl.SiteSettingServiceImpl.getSiteInfo(SiteSettingServiceImpl.java:65)
	at com.jonm.service.impl.SiteSettingServiceImpl$$FastClassBySpringCGLIB$$57805c44.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.service.impl.SiteSettingServiceImpl$$EnhancerBySpringCGLIB$$cd0e495b.getSiteInfo(<generated>)
	at com.jonm.service.impl.SiteSettingServiceImpl$$FastClassBySpringCGLIB$$57805c44.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.service.impl.SiteSettingServiceImpl$$EnhancerBySpringCGLIB$$62b98551.getSiteInfo(<generated>)
	at com.jonm.controller.IndexController.site(IndexController.java:43)
	at com.jonm.controller.IndexController$$FastClassBySpringCGLIB$$f0fdad99.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.controller.IndexController$$EnhancerBySpringCGLIB$$487622be.site(<generated>)
	at com.jonm.controller.IndexController$$FastClassBySpringCGLIB$$f0fdad99.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.controller.IndexController$$EnhancerBySpringCGLIB$$7ba6e171.site(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:893)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:807)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1061)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:961)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.jonm.config.JwtFilter.doFilter(JwtFilter.java:35)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:218)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out after 10 second(s)
	at io.lettuce.core.internal.ExceptionFactory.createTimeoutException(ExceptionFactory.java:53)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:246)
	at io.lettuce.core.FutureSyncInvocationHandler.handleInvocation(FutureSyncInvocationHandler.java:75)
	at io.lettuce.core.internal.AbstractInvocationHandler.invoke(AbstractInvocationHandler.java:80)
	at com.sun.proxy.$Proxy115.get(Unknown Source)
	at org.springframework.data.redis.connection.lettuce.LettuceStringCommands.get(LettuceStringCommands.java:68)
	... 172 common frames omitted
"2021-03-31 === [task-9] == DEBUG == com.jonm.dao.ExceptionLogMapper.saveExceptionLog == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-2] == ERROR == com.jonm.handler.ControllerExceptionHandler == Request URL : http://localhost:8090/blogs, Exception :
"org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out after 10 second(s)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:272)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.convertLettuceAccessException(LettuceHashCommands.java:472)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.hExists(LettuceHashCommands.java:148)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.hExists(DefaultedRedisConnection.java:1131)
	at org.springframework.data.redis.core.DefaultHashOperations.lambda$hasKey$1(DefaultHashOperations.java:67)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:229)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:189)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:96)
	at org.springframework.data.redis.core.DefaultHashOperations.hasKey(DefaultHashOperations.java:67)
	at com.jonm.service.impl.RedisServiceImpl.getBlogInfoPageResultByHash(RedisServiceImpl.java:26)
	at com.jonm.service.impl.RedisServiceImpl$$FastClassBySpringCGLIB$$f5f6c692.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.service.impl.RedisServiceImpl$$EnhancerBySpringCGLIB$$2ec1f2d8.getBlogInfoPageResultByHash(<generated>)
	at com.jonm.service.impl.RedisServiceImpl$$FastClassBySpringCGLIB$$f5f6c692.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.service.impl.RedisServiceImpl$$EnhancerBySpringCGLIB$$835ec6c2.getBlogInfoPageResultByHash(<generated>)
	at com.jonm.service.impl.BlogServiceImpl.getBlogInfoListByIsPublished(BlogServiceImpl.java:122)
	at com.jonm.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$9bf091db.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$a465a080.getBlogInfoListByIsPublished(<generated>)
	at com.jonm.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$9bf091db.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$baf49c10.getBlogInfoListByIsPublished(<generated>)
	at com.jonm.controller.BlogController.blogs(BlogController.java:46)
	at com.jonm.controller.BlogController$$FastClassBySpringCGLIB$$70670bf3.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at com.jonm.aspect.VisitLogAspect.logAround(VisitLogAspect.java:65)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.controller.BlogController$$EnhancerBySpringCGLIB$$9b647289.blogs(<generated>)
	at com.jonm.controller.BlogController$$FastClassBySpringCGLIB$$70670bf3.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.controller.BlogController$$EnhancerBySpringCGLIB$$feabca3b.blogs(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:893)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:807)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1061)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:961)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.jonm.config.JwtFilter.doFilter(JwtFilter.java:35)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:218)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out after 10 second(s)
	at io.lettuce.core.internal.ExceptionFactory.createTimeoutException(ExceptionFactory.java:53)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:246)
	at io.lettuce.core.FutureSyncInvocationHandler.handleInvocation(FutureSyncInvocationHandler.java:75)
	at io.lettuce.core.internal.AbstractInvocationHandler.invoke(AbstractInvocationHandler.java:80)
	at com.sun.proxy.$Proxy115.hexists(Unknown Source)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.hExists(LettuceHashCommands.java:146)
	... 182 common frames omitted
"2021-03-31 === [task-10] == DEBUG == com.jonm.dao.ExceptionLogMapper.saveExceptionLog == ==>  Preparing: insert into exception_log (uri, method, param, description, error, ip, ip_source, os, browser, create_time, user_agent) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
""2021-03-31 === [task-10] == DEBUG == com.jonm.dao.ExceptionLogMapper.saveExceptionLog == ==> Parameters: /blogs(String), GET(String), {"pageNum":1}(String), 访问页面(String), org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out after 10 second(s)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:272)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.convertLettuceAccessException(LettuceHashCommands.java:472)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.hExists(LettuceHashCommands.java:148)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.hExists(DefaultedRedisConnection.java:1131)
	at org.springframework.data.redis.core.DefaultHashOperations.lambda$hasKey$1(DefaultHashOperations.java:67)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:229)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:189)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:96)
	at org.springframework.data.redis.core.DefaultHashOperations.hasKey(DefaultHashOperations.java:67)
	at com.jonm.service.impl.RedisServiceImpl.getBlogInfoPageResultByHash(RedisServiceImpl.java:26)
	at com.jonm.service.impl.RedisServiceImpl$$FastClassBySpringCGLIB$$f5f6c692.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.service.impl.RedisServiceImpl$$EnhancerBySpringCGLIB$$2ec1f2d8.getBlogInfoPageResultByHash(<generated>)
	at com.jonm.service.impl.RedisServiceImpl$$FastClassBySpringCGLIB$$f5f6c692.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.service.impl.RedisServiceImpl$$EnhancerBySpringCGLIB$$835ec6c2.getBlogInfoPageResultByHash(<generated>)
	at com.jonm.service.impl.BlogServiceImpl.getBlogInfoListByIsPublished(BlogServiceImpl.java:122)
	at com.jonm.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$9bf091db.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$a465a080.getBlogInfoListByIsPublished(<generated>)
	at com.jonm.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$9bf091db.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$baf49c10.getBlogInfoListByIsPublished(<generated>)
	at com.jonm.controller.BlogController.blogs(BlogController.java:46)
	at com.jonm.controller.BlogController$$FastClassBySpringCGLIB$$70670bf3.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at com.jonm.aspect.VisitLogAspect.logAround(VisitLogAspect.java:65)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.controller.BlogController$$EnhancerBySpringCGLIB$$9b647289.blogs(<generated>)
	at com.jonm.controller.BlogController$$FastClassBySpringCGLIB$$70670bf3.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.controller.BlogController$$EnhancerBySpringCGLIB$$feabca3b.blogs(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:893)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:807)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1061)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:961)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.jonm.config.JwtFilter.doFilter(JwtFilter.java:35)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:218)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out after 10 second(s)
	at io.lettuce.core.internal.ExceptionFactory.createTimeoutException(ExceptionFactory.java:53)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:246)
	at io.lettuce.core.FutureSyncInvocationHandler.handleInvocation(FutureSyncInvocationHandler.java:75)
	at io.lettuce.core.internal.AbstractInvocationHandler.invoke(AbstractInvocationHandler.java:80)
	at com.sun.proxy.$Proxy115.hexists(Unknown Source)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.hExists(LettuceHashCommands.java:146)
	... 182 more
(String), 192.168.189.1(String), 内网IP|内网IP(String), Windows 10(String), Chrome 88.0.4324.182(String), 2021-03-31 19:00:00.781(Timestamp), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.182 Safari/537.36(String)
""2021-03-31 === [task-10] == DEBUG == com.jonm.dao.ExceptionLogMapper.saveExceptionLog == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [lettuce-eventExecutorLoop-1-8] == INFO  == io.lettuce.core.protocol.ConnectionWatchdog == Reconnecting, last destination was /159.75.123.105:6379
""2021-03-31 === [lettuce-nioEventLoop-4-2] == INFO  == io.lettuce.core.protocol.ReconnectionHandler == Reconnected to 159.75.123.105:6379
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == ==>  Preparing: select b.id, b.title, b.password, c.category_name from blog as b left join category as c on b.category_id=c.id where b.is_published=true order by rand() limit ?
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == ==> Parameters: 5(Integer)
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == <==    Columns: id, title, password, category_name
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == <==        Row: 1, Test, , 个人项目
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == <==      Total: 1
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == ==>  Preparing: select t.tag_name, t.color from blog_tag as bt left join tag as t on bt.tag_id=t.id where bt.blog_id=?
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == ==> Parameters: 1(Long)
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.TagMapper.getTagListByBlogId == <==    Columns: tag_name, color
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.TagMapper.getTagListByBlogId == <==        Row: Mysql, null
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == <==      Total: 1
""2021-03-31 === [task-11] == DEBUG == com.jonm.dao.VisitLogMapper.saveVisitLog == ==>  Preparing: insert into visit_log (uuid, uri, method, param, behavior, content, remark, ip, ip_source, os, browser, times, create_time, user_agent) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
""2021-03-31 === [task-11] == DEBUG == com.jonm.dao.VisitLogMapper.saveVisitLog == ==> Parameters: 897815bc-568b-41f9-82ee-50639a7263a9(String), /blogs(String), GET(String), {"pageNum":1}(String), 访问页面(String), 首页(String), 第1页(String), 192.168.189.1(String), 内网IP|内网IP(String), Windows 10(String), Chrome 88.0.4324.182(String), 5376(Integer), 2021-03-31 19:00:10.295(Timestamp), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.182 Safari/537.36(String)
""2021-03-31 === [task-11] == DEBUG == com.jonm.dao.VisitLogMapper.saveVisitLog == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-7] == DEBUG == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == ==>  Preparing: select b.id, b.title, b.password, c.category_name from blog as b left join category as c on b.category_id=c.id where b.is_published=true order by rand() limit ?
""2021-03-31 === [http-nio-8090-exec-7] == DEBUG == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == ==> Parameters: 5(Integer)
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == <==    Columns: id, title, password, category_name
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == <==        Row: 1, Test, , 个人项目
""2021-03-31 === [http-nio-8090-exec-7] == DEBUG == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == <==      Total: 1
""2021-03-31 === [http-nio-8090-exec-7] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == ==>  Preparing: select t.tag_name, t.color from blog_tag as bt left join tag as t on bt.tag_id=t.id where bt.blog_id=?
""2021-03-31 === [http-nio-8090-exec-7] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == ==> Parameters: 1(Long)
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.TagMapper.getTagListByBlogId == <==    Columns: tag_name, color
""2021-03-31 === [http-nio-8090-exec-7] == TRACE == com.jonm.dao.TagMapper.getTagListByBlogId == <==        Row: Mysql, null
""2021-03-31 === [http-nio-8090-exec-7] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == <==      Total: 1
""2021-03-31 === [task-12] == DEBUG == com.jonm.dao.VisitLogMapper.saveVisitLog == ==>  Preparing: insert into visit_log (uuid, uri, method, param, behavior, content, remark, ip, ip_source, os, browser, times, create_time, user_agent) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
""2021-03-31 === [task-12] == DEBUG == com.jonm.dao.VisitLogMapper.saveVisitLog == ==> Parameters: 897815bc-568b-41f9-82ee-50639a7263a9(String), /blogs(String), GET(String), {"pageNum":1}(String), 访问页面(String), 首页(String), 第1页(String), 192.168.189.1(String), 内网IP|内网IP(String), Windows 10(String), Chrome 88.0.4324.182(String), 53(Integer), 2021-03-31 19:01:43.364(Timestamp), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.182 Safari/537.36(String)
""2021-03-31 === [task-12] == DEBUG == com.jonm.dao.VisitLogMapper.saveVisitLog == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == ==>  Preparing: select b.id, b.title, b.password, c.category_name from blog as b left join category as c on b.category_id=c.id where b.is_published=true order by rand() limit ?
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == ==> Parameters: 5(Integer)
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == <==    Columns: id, title, password, category_name
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == <==        Row: 1, Test, , 个人项目
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == <==      Total: 1
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == ==>  Preparing: select t.tag_name, t.color from blog_tag as bt left join tag as t on bt.tag_id=t.id where bt.blog_id=?
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == ==> Parameters: 1(Long)
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.TagMapper.getTagListByBlogId == <==    Columns: tag_name, color
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.TagMapper.getTagListByBlogId == <==        Row: Mysql, null
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == <==      Total: 1
""2021-03-31 === [task-13] == DEBUG == com.jonm.dao.VisitLogMapper.saveVisitLog == ==>  Preparing: insert into visit_log (uuid, uri, method, param, behavior, content, remark, ip, ip_source, os, browser, times, create_time, user_agent) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
""2021-03-31 === [task-13] == DEBUG == com.jonm.dao.VisitLogMapper.saveVisitLog == ==> Parameters: 897815bc-568b-41f9-82ee-50639a7263a9(String), /blogs(String), GET(String), {"pageNum":1}(String), 访问页面(String), 首页(String), 第1页(String), 192.168.189.1(String), 内网IP|内网IP(String), Windows 10(String), Chrome 88.0.4324.182(String), 56(Integer), 2021-03-31 19:02:02.193(Timestamp), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.182 Safari/537.36(String)
""2021-03-31 === [task-13] == DEBUG == com.jonm.dao.VisitLogMapper.saveVisitLog == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-4] == ERROR == com.jonm.handler.ControllerExceptionHandler == Request URL : http://localhost:8090/site, Exception :
"org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out after 10 second(s)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:272)
	at org.springframework.data.redis.connection.lettuce.LettuceStringCommands.convertLettuceAccessException(LettuceStringCommands.java:800)
	at org.springframework.data.redis.connection.lettuce.LettuceStringCommands.get(LettuceStringCommands.java:70)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.get(DefaultedRedisConnection.java:267)
	at org.springframework.data.redis.core.DefaultValueOperations$1.inRedis(DefaultValueOperations.java:57)
	at org.springframework.data.redis.core.AbstractOperations$ValueDeserializingRedisCallback.doInRedis(AbstractOperations.java:60)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:229)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:189)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:96)
	at org.springframework.data.redis.core.DefaultValueOperations.get(DefaultValueOperations.java:53)
	at com.jonm.service.impl.RedisServiceImpl.getMapByValue(RedisServiceImpl.java:73)
	at com.jonm.service.impl.RedisServiceImpl$$FastClassBySpringCGLIB$$f5f6c692.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.service.impl.RedisServiceImpl$$EnhancerBySpringCGLIB$$2ec1f2d8.getMapByValue(<generated>)
	at com.jonm.service.impl.RedisServiceImpl$$FastClassBySpringCGLIB$$f5f6c692.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.service.impl.RedisServiceImpl$$EnhancerBySpringCGLIB$$835ec6c2.getMapByValue(<generated>)
	at com.jonm.service.impl.SiteSettingServiceImpl.getSiteInfo(SiteSettingServiceImpl.java:65)
	at com.jonm.service.impl.SiteSettingServiceImpl$$FastClassBySpringCGLIB$$57805c44.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.service.impl.SiteSettingServiceImpl$$EnhancerBySpringCGLIB$$cd0e495b.getSiteInfo(<generated>)
	at com.jonm.service.impl.SiteSettingServiceImpl$$FastClassBySpringCGLIB$$57805c44.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.service.impl.SiteSettingServiceImpl$$EnhancerBySpringCGLIB$$62b98551.getSiteInfo(<generated>)
	at com.jonm.controller.IndexController.site(IndexController.java:43)
	at com.jonm.controller.IndexController$$FastClassBySpringCGLIB$$f0fdad99.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.controller.IndexController$$EnhancerBySpringCGLIB$$487622be.site(<generated>)
	at com.jonm.controller.IndexController$$FastClassBySpringCGLIB$$f0fdad99.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.controller.IndexController$$EnhancerBySpringCGLIB$$7ba6e171.site(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:893)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:807)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1061)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:961)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.jonm.config.JwtFilter.doFilter(JwtFilter.java:35)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:218)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out after 10 second(s)
	at io.lettuce.core.internal.ExceptionFactory.createTimeoutException(ExceptionFactory.java:53)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:246)
	at io.lettuce.core.FutureSyncInvocationHandler.handleInvocation(FutureSyncInvocationHandler.java:75)
	at io.lettuce.core.internal.AbstractInvocationHandler.invoke(AbstractInvocationHandler.java:80)
	at com.sun.proxy.$Proxy115.get(Unknown Source)
	at org.springframework.data.redis.connection.lettuce.LettuceStringCommands.get(LettuceStringCommands.java:68)
	... 172 common frames omitted
"2021-03-31 === [task-14] == DEBUG == com.jonm.dao.ExceptionLogMapper.saveExceptionLog == ==>  Preparing: insert into exception_log (uri, method, param, description, error, ip, ip_source, os, browser, create_time, user_agent) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
""2021-03-31 === [task-14] == DEBUG == com.jonm.dao.ExceptionLogMapper.saveExceptionLog == ==> Parameters: /site(String), GET(String), {}(String), (String), org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out after 10 second(s)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:272)
	at org.springframework.data.redis.connection.lettuce.LettuceStringCommands.convertLettuceAccessException(LettuceStringCommands.java:800)
	at org.springframework.data.redis.connection.lettuce.LettuceStringCommands.get(LettuceStringCommands.java:70)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.get(DefaultedRedisConnection.java:267)
	at org.springframework.data.redis.core.DefaultValueOperations$1.inRedis(DefaultValueOperations.java:57)
	at org.springframework.data.redis.core.AbstractOperations$ValueDeserializingRedisCallback.doInRedis(AbstractOperations.java:60)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:229)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:189)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:96)
	at org.springframework.data.redis.core.DefaultValueOperations.get(DefaultValueOperations.java:53)
	at com.jonm.service.impl.RedisServiceImpl.getMapByValue(RedisServiceImpl.java:73)
	at com.jonm.service.impl.RedisServiceImpl$$FastClassBySpringCGLIB$$f5f6c692.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.service.impl.RedisServiceImpl$$EnhancerBySpringCGLIB$$2ec1f2d8.getMapByValue(<generated>)
	at com.jonm.service.impl.RedisServiceImpl$$FastClassBySpringCGLIB$$f5f6c692.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.service.impl.RedisServiceImpl$$EnhancerBySpringCGLIB$$835ec6c2.getMapByValue(<generated>)
	at com.jonm.service.impl.SiteSettingServiceImpl.getSiteInfo(SiteSettingServiceImpl.java:65)
	at com.jonm.service.impl.SiteSettingServiceImpl$$FastClassBySpringCGLIB$$57805c44.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.service.impl.SiteSettingServiceImpl$$EnhancerBySpringCGLIB$$cd0e495b.getSiteInfo(<generated>)
	at com.jonm.service.impl.SiteSettingServiceImpl$$FastClassBySpringCGLIB$$57805c44.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.service.impl.SiteSettingServiceImpl$$EnhancerBySpringCGLIB$$62b98551.getSiteInfo(<generated>)
	at com.jonm.controller.IndexController.site(IndexController.java:43)
	at com.jonm.controller.IndexController$$FastClassBySpringCGLIB$$f0fdad99.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.controller.IndexController$$EnhancerBySpringCGLIB$$487622be.site(<generated>)
	at com.jonm.controller.IndexController$$FastClassBySpringCGLIB$$f0fdad99.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.controller.IndexController$$EnhancerBySpringCGLIB$$7ba6e171.site(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:893)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:807)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1061)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:961)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.jonm.config.JwtFilter.doFilter(JwtFilter.java:35)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:218)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out after 10 second(s)
	at io.lettuce.core.internal.ExceptionFactory.createTimeoutException(ExceptionFactory.java:53)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:246)
	at io.lettuce.core.FutureSyncInvocationHandler.handleInvocation(FutureSyncInvocationHandler.java:75)
	at io.lettuce.core.internal.AbstractInvocationHandler.invoke(AbstractInvocationHandler.java:80)
	at com.sun.proxy.$Proxy115.get(Unknown Source)
	at org.springframework.data.redis.connection.lettuce.LettuceStringCommands.get(LettuceStringCommands.java:68)
	... 172 more
(String), 192.168.189.1(String), 内网IP|内网IP(String), Windows 10(String), Chrome 88.0.4324.182(String), 2021-03-31 19:06:44.022(Timestamp), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.182 Safari/537.36(String)
""2021-03-31 === [task-14] == DEBUG == com.jonm.dao.ExceptionLogMapper.saveExceptionLog == <==    Updates: 1
""2021-03-31 === [task-15] == DEBUG == com.jonm.dao.ExceptionLogMapper.saveExceptionLog == ==>  Preparing: insert into exception_log (uri, method, param, description, error, ip, ip_source, os, browser, create_time, user_agent) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
""2021-03-31 === [task-15] == DEBUG == com.jonm.dao.ExceptionLogMapper.saveExceptionLog == ==> Parameters: /blogs(String), GET(String), {"pageNum":1}(String), 访问页面(String), org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out after 10 second(s)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:272)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.convertLettuceAccessException(LettuceHashCommands.java:472)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.hExists(LettuceHashCommands.java:148)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.hExists(DefaultedRedisConnection.java:1131)
	at org.springframework.data.redis.core.DefaultHashOperations.lambda$hasKey$1(DefaultHashOperations.java:67)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:229)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:189)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:96)
	at org.springframework.data.redis.core.DefaultHashOperations.hasKey(DefaultHashOperations.java:67)
	at com.jonm.service.impl.RedisServiceImpl.getBlogInfoPageResultByHash(RedisServiceImpl.java:26)
	at com.jonm.service.impl.RedisServiceImpl$$FastClassBySpringCGLIB$$f5f6c692.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.service.impl.RedisServiceImpl$$EnhancerBySpringCGLIB$$2ec1f2d8.getBlogInfoPageResultByHash(<generated>)
	at com.jonm.service.impl.RedisServiceImpl$$FastClassBySpringCGLIB$$f5f6c692.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.service.impl.RedisServiceImpl$$EnhancerBySpringCGLIB$$835ec6c2.getBlogInfoPageResultByHash(<generated>)
	at com.jonm.service.impl.BlogServiceImpl.getBlogInfoListByIsPublished(BlogServiceImpl.java:122)
	at com.jonm.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$9bf091db.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$a465a080.getBlogInfoListByIsPublished(<generated>)
	at com.jonm.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$9bf091db.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$baf49c10.getBlogInfoListByIsPublished(<generated>)
	at com.jonm.controller.BlogController.blogs(BlogController.java:46)
	at com.jonm.controller.BlogController$$FastClassBySpringCGLIB$$70670bf3.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at com.jonm.aspect.VisitLogAspect.logAround(VisitLogAspect.java:65)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.controller.BlogController$$EnhancerBySpringCGLIB$$9b647289.blogs(<generated>)
	at com.jonm.controller.BlogController$$FastClassBySpringCGLIB$$70670bf3.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.controller.BlogController$$EnhancerBySpringCGLIB$$feabca3b.blogs(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:893)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:807)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1061)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:961)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.jonm.config.JwtFilter.doFilter(JwtFilter.java:35)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:218)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out after 10 second(s)
	at io.lettuce.core.internal.ExceptionFactory.createTimeoutException(ExceptionFactory.java:53)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:246)
	at io.lettuce.core.FutureSyncInvocationHandler.handleInvocation(FutureSyncInvocationHandler.java:75)
	at io.lettuce.core.internal.AbstractInvocationHandler.invoke(AbstractInvocationHandler.java:80)
	at com.sun.proxy.$Proxy115.hexists(Unknown Source)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.hExists(LettuceHashCommands.java:146)
	... 182 more
(String), 192.168.189.1(String), 内网IP|内网IP(String), Windows 10(String), Chrome 88.0.4324.182(String), 2021-03-31 19:06:44.022(Timestamp), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.182 Safari/537.36(String)
""2021-03-31 === [http-nio-8090-exec-3] == ERROR == com.jonm.handler.ControllerExceptionHandler == Request URL : http://localhost:8090/blogs, Exception :
"org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out after 10 second(s)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:272)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.convertLettuceAccessException(LettuceHashCommands.java:472)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.hExists(LettuceHashCommands.java:148)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.hExists(DefaultedRedisConnection.java:1131)
	at org.springframework.data.redis.core.DefaultHashOperations.lambda$hasKey$1(DefaultHashOperations.java:67)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:229)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:189)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:96)
	at org.springframework.data.redis.core.DefaultHashOperations.hasKey(DefaultHashOperations.java:67)
	at com.jonm.service.impl.RedisServiceImpl.getBlogInfoPageResultByHash(RedisServiceImpl.java:26)
	at com.jonm.service.impl.RedisServiceImpl$$FastClassBySpringCGLIB$$f5f6c692.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.service.impl.RedisServiceImpl$$EnhancerBySpringCGLIB$$2ec1f2d8.getBlogInfoPageResultByHash(<generated>)
	at com.jonm.service.impl.RedisServiceImpl$$FastClassBySpringCGLIB$$f5f6c692.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.service.impl.RedisServiceImpl$$EnhancerBySpringCGLIB$$835ec6c2.getBlogInfoPageResultByHash(<generated>)
	at com.jonm.service.impl.BlogServiceImpl.getBlogInfoListByIsPublished(BlogServiceImpl.java:122)
	at com.jonm.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$9bf091db.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$a465a080.getBlogInfoListByIsPublished(<generated>)
	at com.jonm.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$9bf091db.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$baf49c10.getBlogInfoListByIsPublished(<generated>)
	at com.jonm.controller.BlogController.blogs(BlogController.java:46)
	at com.jonm.controller.BlogController$$FastClassBySpringCGLIB$$70670bf3.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at com.jonm.aspect.VisitLogAspect.logAround(VisitLogAspect.java:65)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.controller.BlogController$$EnhancerBySpringCGLIB$$9b647289.blogs(<generated>)
	at com.jonm.controller.BlogController$$FastClassBySpringCGLIB$$70670bf3.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jonm.controller.BlogController$$EnhancerBySpringCGLIB$$feabca3b.blogs(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:893)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:807)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1061)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:961)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.jonm.config.JwtFilter.doFilter(JwtFilter.java:35)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:218)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out after 10 second(s)
	at io.lettuce.core.internal.ExceptionFactory.createTimeoutException(ExceptionFactory.java:53)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:246)
	at io.lettuce.core.FutureSyncInvocationHandler.handleInvocation(FutureSyncInvocationHandler.java:75)
	at io.lettuce.core.internal.AbstractInvocationHandler.invoke(AbstractInvocationHandler.java:80)
	at com.sun.proxy.$Proxy115.hexists(Unknown Source)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.hExists(LettuceHashCommands.java:146)
	... 182 common frames omitted
"2021-03-31 === [task-15] == DEBUG == com.jonm.dao.ExceptionLogMapper.saveExceptionLog == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [lettuce-eventExecutorLoop-1-6] == INFO  == io.lettuce.core.protocol.ConnectionWatchdog == Reconnecting, last destination was /159.75.123.105:6379
""2021-03-31 === [lettuce-nioEventLoop-4-3] == INFO  == io.lettuce.core.protocol.ReconnectionHandler == Reconnected to 159.75.123.105:6379
""2021-03-31 === [http-nio-8090-exec-5] == DEBUG == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == ==>  Preparing: select b.id, b.title, b.password, c.category_name from blog as b left join category as c on b.category_id=c.id where b.is_published=true order by rand() limit ?
""2021-03-31 === [http-nio-8090-exec-5] == DEBUG == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == ==> Parameters: 5(Integer)
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == <==    Columns: id, title, password, category_name
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == <==        Row: 1, Test, , 个人项目
""2021-03-31 === [http-nio-8090-exec-5] == DEBUG == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == <==      Total: 1
""2021-03-31 === [http-nio-8090-exec-5] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == ==>  Preparing: select t.tag_name, t.color from blog_tag as bt left join tag as t on bt.tag_id=t.id where bt.blog_id=?
""2021-03-31 === [http-nio-8090-exec-5] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == ==> Parameters: 1(Long)
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.TagMapper.getTagListByBlogId == <==    Columns: tag_name, color
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.TagMapper.getTagListByBlogId == <==        Row: Mysql, null
""2021-03-31 === [http-nio-8090-exec-5] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == <==      Total: 1
""2021-03-31 === [task-16] == DEBUG == com.jonm.dao.VisitLogMapper.saveVisitLog == ==>  Preparing: insert into visit_log (uuid, uri, method, param, behavior, content, remark, ip, ip_source, os, browser, times, create_time, user_agent) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
""2021-03-31 === [task-16] == DEBUG == com.jonm.dao.VisitLogMapper.saveVisitLog == ==> Parameters: 897815bc-568b-41f9-82ee-50639a7263a9(String), /blogs(String), GET(String), {"pageNum":1}(String), 访问页面(String), 首页(String), 第1页(String), 192.168.189.1(String), 内网IP|内网IP(String), Windows 10(String), Chrome 88.0.4324.182(String), 758(Integer), 2021-03-31 19:06:53.283(Timestamp), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.182 Safari/537.36(String)
""2021-03-31 === [task-16] == DEBUG == com.jonm.dao.VisitLogMapper.saveVisitLog == <==    Updates: 1
""2021-03-31 === [SpringContextShutdownHook] == INFO  == org.quartz.core.QuartzScheduler == Scheduler quartzScheduler_$_NON_CLUSTERED paused.
""2021-03-31 === [SpringContextShutdownHook] == INFO  == o.s.scheduling.concurrent.ThreadPoolTaskExecutor == Shutting down ExecutorService 'applicationTaskExecutor'
""2021-03-31 === [SpringContextShutdownHook] == INFO  == o.s.scheduling.quartz.SchedulerFactoryBean == Shutting down Quartz Scheduler
""2021-03-31 === [SpringContextShutdownHook] == INFO  == org.quartz.core.QuartzScheduler == Scheduler quartzScheduler_$_NON_CLUSTERED shutting down.
""2021-03-31 === [SpringContextShutdownHook] == INFO  == org.quartz.core.QuartzScheduler == Scheduler quartzScheduler_$_NON_CLUSTERED paused.
""2021-03-31 === [SpringContextShutdownHook] == INFO  == org.quartz.core.QuartzScheduler == Scheduler quartzScheduler_$_NON_CLUSTERED shutdown complete.
""2021-03-31 === [SpringContextShutdownHook] == INFO  == com.alibaba.druid.pool.DruidDataSource == {dataSource-1} closing ...
""2021-03-31 === [SpringContextShutdownHook] == INFO  == com.alibaba.druid.pool.DruidDataSource == {dataSource-1} closed
""2021-03-31 === [main] == INFO  == com.jonm.BlogApiApplication == Starting BlogApiApplication using Java 1.8.0_261 on Jonm with PID 20548 (D:\Users\lhz17\Desktop\01\NBlog-master\blog-api\target\classes started by lhz17 in D:\Users\lhz17\Desktop\01\NBlog-master\blog-api)
""2021-03-31 === [main] == DEBUG == com.jonm.BlogApiApplication == Running with Spring Boot v2.4.0, Spring v5.3.1
""2021-03-31 === [main] == INFO  == com.jonm.BlogApiApplication == The following profiles are active: dev
""2021-03-31 === [main] == INFO  == o.s.d.r.config.RepositoryConfigurationDelegate == Multiple Spring Data modules found, entering strict repository configuration mode!
""2021-03-31 === [main] == INFO  == o.s.d.r.config.RepositoryConfigurationDelegate == Bootstrapping Spring Data Redis repositories in DEFAULT mode.
""2021-03-31 === [main] == INFO  == o.s.d.r.config.RepositoryConfigurationDelegate == Finished Spring Data repository scanning in 109 ms. Found 0 Redis repository interfaces.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == INFO  == o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker == Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
""2021-03-31 === [main] == INFO  == o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker == Bean 'spring.datasource.druid-com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties' of type [com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
""2021-03-31 === [main] == INFO  == o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker == Bean 'advisor' of type [org.springframework.aop.support.RegexpMethodPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
""2021-03-31 === [main] == INFO  == o.s.boot.web.embedded.tomcat.TomcatWebServer == Tomcat initialized with port(s): 8090 (http)
""2021-03-31 === [main] == INFO  == org.apache.catalina.core.StandardService == Starting service [Tomcat]
""2021-03-31 === [main] == INFO  == org.apache.catalina.core.StandardEngine == Starting Servlet engine: [Apache Tomcat/9.0.39]
""2021-03-31 === [main] == INFO  == o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] == Initializing Spring embedded WebApplicationContext
""2021-03-31 === [main] == INFO  == o.s.b.w.s.c.ServletWebServerApplicationContext == Root WebApplicationContext: initialization completed in 2913 ms
""2021-03-31 === [main] == INFO  == n.b.p.useragent.AbstractUserAgentAnalyzerDirect == - Loaded 90 files in  873 msec using expression: classpath*:UserAgents/**/*.yaml
""2021-03-31 === [main] == INFO  == nl.basjes.parse.useragent.utils.YauaaVersion == 
""2021-03-31 === [main] == INFO  == nl.basjes.parse.useragent.utils.YauaaVersion == /-----------------------------------------------------------\
""2021-03-31 === [main] == INFO  == nl.basjes.parse.useragent.utils.YauaaVersion == | Yauaa 5.20 (v5.20 @ 2020-11-22T15:39:16Z)                 |
""2021-03-31 === [main] == INFO  == nl.basjes.parse.useragent.utils.YauaaVersion == +-----------------------------------------------------------+
""2021-03-31 === [main] == INFO  == nl.basjes.parse.useragent.utils.YauaaVersion == | For more information: https://yauaa.basjes.nl             |
""2021-03-31 === [main] == INFO  == nl.basjes.parse.useragent.utils.YauaaVersion == | Copyright (C) 2013-2020 Niels Basjes - License Apache 2.0 |
""2021-03-31 === [main] == INFO  == nl.basjes.parse.useragent.utils.YauaaVersion == \-----------------------------------------------------------/
""2021-03-31 === [main] == INFO  == nl.basjes.parse.useragent.utils.YauaaVersion == 
""2021-03-31 === [main] == INFO  == n.b.p.useragent.AbstractUserAgentAnalyzerDirect == Building all needed matchers for the requested 11 fields.
""2021-03-31 === [main] == WARN  == o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext == Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'visitLogAspect': Unsatisfied dependency expressed through field 'visitorService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'visitorServiceImpl': Unsatisfied dependency expressed through field 'redisService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'redisServiceImpl': Unsatisfied dependency expressed through field 'jsonRedisTemplate'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'jsonRedisTemplate' defined in class path resource [com/jonm/config/redis/RedisSerializeConfig.class]: Unsatisfied dependency expressed through method 'jsonRedisTemplate' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisConnectionFactory' defined in class path resource [org/springframework/boot/autoconfigure/data/redis/LettuceConnectionConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory]: Factory method 'redisConnectionFactory' threw exception; nested exception is java.lang.NoClassDefFoundError: org/apache/commons/pool2/impl/GenericObjectPoolConfig
""2021-03-31 === [main] == INFO  == com.alibaba.druid.pool.DruidDataSource == {dataSource-0} closing ...
""2021-03-31 === [main] == INFO  == org.apache.catalina.core.StandardService == Stopping service [Tomcat]
""2021-03-31 === [main] == INFO  == o.s.b.a.l.ConditionEvaluationReportLoggingListener == 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
""2021-03-31 === [main] == ERROR == org.springframework.boot.SpringApplication == Application run failed
"org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'visitLogAspect': Unsatisfied dependency expressed through field 'visitorService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'visitorServiceImpl': Unsatisfied dependency expressed through field 'redisService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'redisServiceImpl': Unsatisfied dependency expressed through field 'jsonRedisTemplate'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'jsonRedisTemplate' defined in class path resource [com/jonm/config/redis/RedisSerializeConfig.class]: Unsatisfied dependency expressed through method 'jsonRedisTemplate' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisConnectionFactory' defined in class path resource [org/springframework/boot/autoconfigure/data/redis/LettuceConnectionConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory]: Factory method 'redisConnectionFactory' threw exception; nested exception is java.lang.NoClassDefFoundError: org/apache/commons/pool2/impl/GenericObjectPoolConfig
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:643)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1415)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:608)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:531)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:925)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:588)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:144)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:767)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:426)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:326)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1309)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1298)
	at com.jonm.BlogApiApplication.main(BlogApiApplication.java:12)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'visitorServiceImpl': Unsatisfied dependency expressed through field 'redisService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'redisServiceImpl': Unsatisfied dependency expressed through field 'jsonRedisTemplate'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'jsonRedisTemplate' defined in class path resource [com/jonm/config/redis/RedisSerializeConfig.class]: Unsatisfied dependency expressed through method 'jsonRedisTemplate' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisConnectionFactory' defined in class path resource [org/springframework/boot/autoconfigure/data/redis/LettuceConnectionConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory]: Factory method 'redisConnectionFactory' threw exception; nested exception is java.lang.NoClassDefFoundError: org/apache/commons/pool2/impl/GenericObjectPoolConfig
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:643)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1415)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:608)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:531)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1367)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1287)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)
	... 20 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'redisServiceImpl': Unsatisfied dependency expressed through field 'jsonRedisTemplate'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'jsonRedisTemplate' defined in class path resource [com/jonm/config/redis/RedisSerializeConfig.class]: Unsatisfied dependency expressed through method 'jsonRedisTemplate' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisConnectionFactory' defined in class path resource [org/springframework/boot/autoconfigure/data/redis/LettuceConnectionConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory]: Factory method 'redisConnectionFactory' threw exception; nested exception is java.lang.NoClassDefFoundError: org/apache/commons/pool2/impl/GenericObjectPoolConfig
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:643)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1415)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:608)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:531)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1367)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1287)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)
	... 33 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'jsonRedisTemplate' defined in class path resource [com/jonm/config/redis/RedisSerializeConfig.class]: Unsatisfied dependency expressed through method 'jsonRedisTemplate' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisConnectionFactory' defined in class path resource [org/springframework/boot/autoconfigure/data/redis/LettuceConnectionConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory]: Factory method 'redisConnectionFactory' threw exception; nested exception is java.lang.NoClassDefFoundError: org/apache/commons/pool2/impl/GenericObjectPoolConfig
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:798)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:539)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1179)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:571)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:531)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1367)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1287)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)
	... 46 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisConnectionFactory' defined in class path resource [org/springframework/boot/autoconfigure/data/redis/LettuceConnectionConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory]: Factory method 'redisConnectionFactory' threw exception; nested exception is java.lang.NoClassDefFoundError: org/apache/commons/pool2/impl/GenericObjectPoolConfig
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:656)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:636)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1179)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:571)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:531)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1367)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1287)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:885)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	... 59 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory]: Factory method 'redisConnectionFactory' threw exception; nested exception is java.lang.NoClassDefFoundError: org/apache/commons/pool2/impl/GenericObjectPoolConfig
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:651)
	... 73 common frames omitted
Caused by: java.lang.NoClassDefFoundError: org/apache/commons/pool2/impl/GenericObjectPoolConfig
	at org.springframework.data.redis.connection.lettuce.LettucePoolingClientConfiguration$LettucePoolingClientConfigurationBuilder.<init>(LettucePoolingClientConfiguration.java:94)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingClientConfiguration.builder(LettucePoolingClientConfiguration.java:51)
	at org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration$PoolBuilderFactory.createBuilder(LettuceConnectionConfiguration.java:172)
	at org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration.createBuilder(LettuceConnectionConfiguration.java:110)
	at org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration.getLettuceClientConfiguration(LettuceConnectionConfiguration.java:95)
	at org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration.redisConnectionFactory(LettuceConnectionConfiguration.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 74 common frames omitted
Caused by: java.lang.ClassNotFoundException: org.apache.commons.pool2.impl.GenericObjectPoolConfig
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:355)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	... 85 common frames omitted
"2021-03-31 === [main] == INFO  == com.jonm.BlogApiApplication == Starting BlogApiApplication using Java 1.8.0_261 on Jonm with PID 22892 (D:\Users\lhz17\Desktop\01\NBlog-master\blog-api\target\classes started by lhz17 in D:\Users\lhz17\Desktop\01\NBlog-master\blog-api)
""2021-03-31 === [main] == DEBUG == com.jonm.BlogApiApplication == Running with Spring Boot v2.4.0, Spring v5.3.1
""2021-03-31 === [main] == INFO  == com.jonm.BlogApiApplication == The following profiles are active: dev
""2021-03-31 === [main] == INFO  == o.s.d.r.config.RepositoryConfigurationDelegate == Multiple Spring Data modules found, entering strict repository configuration mode!
""2021-03-31 === [main] == INFO  == o.s.d.r.config.RepositoryConfigurationDelegate == Bootstrapping Spring Data Redis repositories in DEFAULT mode.
""2021-03-31 === [main] == INFO  == o.s.d.r.config.RepositoryConfigurationDelegate == Finished Spring Data repository scanning in 123 ms. Found 0 Redis repository interfaces.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == INFO  == o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker == Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
""2021-03-31 === [main] == INFO  == o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker == Bean 'spring.datasource.druid-com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties' of type [com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
""2021-03-31 === [main] == INFO  == o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker == Bean 'advisor' of type [org.springframework.aop.support.RegexpMethodPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
""2021-03-31 === [main] == INFO  == o.s.boot.web.embedded.tomcat.TomcatWebServer == Tomcat initialized with port(s): 8090 (http)
""2021-03-31 === [main] == INFO  == org.apache.catalina.core.StandardService == Starting service [Tomcat]
""2021-03-31 === [main] == INFO  == org.apache.catalina.core.StandardEngine == Starting Servlet engine: [Apache Tomcat/9.0.39]
""2021-03-31 === [main] == INFO  == o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] == Initializing Spring embedded WebApplicationContext
""2021-03-31 === [main] == INFO  == o.s.b.w.s.c.ServletWebServerApplicationContext == Root WebApplicationContext: initialization completed in 5915 ms
""2021-03-31 === [main] == INFO  == n.b.p.useragent.AbstractUserAgentAnalyzerDirect == - Loaded 90 files in  781 msec using expression: classpath*:UserAgents/**/*.yaml
""2021-03-31 === [main] == INFO  == nl.basjes.parse.useragent.utils.YauaaVersion == 
""2021-03-31 === [main] == INFO  == nl.basjes.parse.useragent.utils.YauaaVersion == /-----------------------------------------------------------\
""2021-03-31 === [main] == INFO  == nl.basjes.parse.useragent.utils.YauaaVersion == | Yauaa 5.20 (v5.20 @ 2020-11-22T15:39:16Z)                 |
""2021-03-31 === [main] == INFO  == nl.basjes.parse.useragent.utils.YauaaVersion == +-----------------------------------------------------------+
""2021-03-31 === [main] == INFO  == nl.basjes.parse.useragent.utils.YauaaVersion == | For more information: https://yauaa.basjes.nl             |
""2021-03-31 === [main] == INFO  == nl.basjes.parse.useragent.utils.YauaaVersion == | Copyright (C) 2013-2020 Niels Basjes - License Apache 2.0 |
""2021-03-31 === [main] == INFO  == nl.basjes.parse.useragent.utils.YauaaVersion == \-----------------------------------------------------------/
""2021-03-31 === [main] == INFO  == nl.basjes.parse.useragent.utils.YauaaVersion == 
""2021-03-31 === [main] == INFO  == n.b.p.useragent.AbstractUserAgentAnalyzerDirect == Building all needed matchers for the requested 11 fields.
""2021-03-31 === [main] == WARN  == o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext == Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'visitLogAspect': Unsatisfied dependency expressed through field 'visitorService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'visitorServiceImpl': Unsatisfied dependency expressed through field 'redisService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'redisServiceImpl': Unsatisfied dependency expressed through field 'jsonRedisTemplate'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'jsonRedisTemplate' defined in class path resource [com/jonm/config/redis/RedisSerializeConfig.class]: Unsatisfied dependency expressed through method 'jsonRedisTemplate' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisConnectionFactory' defined in class path resource [org/springframework/boot/autoconfigure/data/redis/LettuceConnectionConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory]: Factory method 'redisConnectionFactory' threw exception; nested exception is java.lang.NoClassDefFoundError: org/apache/commons/pool2/impl/GenericObjectPoolConfig
""2021-03-31 === [main] == INFO  == com.alibaba.druid.pool.DruidDataSource == {dataSource-0} closing ...
""2021-03-31 === [main] == INFO  == org.apache.catalina.core.StandardService == Stopping service [Tomcat]
""2021-03-31 === [main] == INFO  == o.s.b.a.l.ConditionEvaluationReportLoggingListener == 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
""2021-03-31 === [main] == ERROR == org.springframework.boot.SpringApplication == Application run failed
"org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'visitLogAspect': Unsatisfied dependency expressed through field 'visitorService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'visitorServiceImpl': Unsatisfied dependency expressed through field 'redisService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'redisServiceImpl': Unsatisfied dependency expressed through field 'jsonRedisTemplate'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'jsonRedisTemplate' defined in class path resource [com/jonm/config/redis/RedisSerializeConfig.class]: Unsatisfied dependency expressed through method 'jsonRedisTemplate' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisConnectionFactory' defined in class path resource [org/springframework/boot/autoconfigure/data/redis/LettuceConnectionConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory]: Factory method 'redisConnectionFactory' threw exception; nested exception is java.lang.NoClassDefFoundError: org/apache/commons/pool2/impl/GenericObjectPoolConfig
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:643)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1415)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:608)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:531)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:925)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:588)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:144)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:767)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:426)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:326)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1309)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1298)
	at com.jonm.BlogApiApplication.main(BlogApiApplication.java:12)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'visitorServiceImpl': Unsatisfied dependency expressed through field 'redisService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'redisServiceImpl': Unsatisfied dependency expressed through field 'jsonRedisTemplate'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'jsonRedisTemplate' defined in class path resource [com/jonm/config/redis/RedisSerializeConfig.class]: Unsatisfied dependency expressed through method 'jsonRedisTemplate' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisConnectionFactory' defined in class path resource [org/springframework/boot/autoconfigure/data/redis/LettuceConnectionConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory]: Factory method 'redisConnectionFactory' threw exception; nested exception is java.lang.NoClassDefFoundError: org/apache/commons/pool2/impl/GenericObjectPoolConfig
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:643)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1415)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:608)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:531)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1367)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1287)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)
	... 20 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'redisServiceImpl': Unsatisfied dependency expressed through field 'jsonRedisTemplate'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'jsonRedisTemplate' defined in class path resource [com/jonm/config/redis/RedisSerializeConfig.class]: Unsatisfied dependency expressed through method 'jsonRedisTemplate' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisConnectionFactory' defined in class path resource [org/springframework/boot/autoconfigure/data/redis/LettuceConnectionConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory]: Factory method 'redisConnectionFactory' threw exception; nested exception is java.lang.NoClassDefFoundError: org/apache/commons/pool2/impl/GenericObjectPoolConfig
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:643)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1415)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:608)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:531)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1367)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1287)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)
	... 33 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'jsonRedisTemplate' defined in class path resource [com/jonm/config/redis/RedisSerializeConfig.class]: Unsatisfied dependency expressed through method 'jsonRedisTemplate' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisConnectionFactory' defined in class path resource [org/springframework/boot/autoconfigure/data/redis/LettuceConnectionConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory]: Factory method 'redisConnectionFactory' threw exception; nested exception is java.lang.NoClassDefFoundError: org/apache/commons/pool2/impl/GenericObjectPoolConfig
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:798)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:539)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1179)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:571)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:531)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1367)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1287)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)
	... 46 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisConnectionFactory' defined in class path resource [org/springframework/boot/autoconfigure/data/redis/LettuceConnectionConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory]: Factory method 'redisConnectionFactory' threw exception; nested exception is java.lang.NoClassDefFoundError: org/apache/commons/pool2/impl/GenericObjectPoolConfig
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:656)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:636)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1179)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:571)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:531)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1367)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1287)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:885)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	... 59 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory]: Factory method 'redisConnectionFactory' threw exception; nested exception is java.lang.NoClassDefFoundError: org/apache/commons/pool2/impl/GenericObjectPoolConfig
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:651)
	... 73 common frames omitted
Caused by: java.lang.NoClassDefFoundError: org/apache/commons/pool2/impl/GenericObjectPoolConfig
	at org.springframework.data.redis.connection.lettuce.LettucePoolingClientConfiguration$LettucePoolingClientConfigurationBuilder.<init>(LettucePoolingClientConfiguration.java:94)
	at org.springframework.data.redis.connection.lettuce.LettucePoolingClientConfiguration.builder(LettucePoolingClientConfiguration.java:51)
	at org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration$PoolBuilderFactory.createBuilder(LettuceConnectionConfiguration.java:172)
	at org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration.createBuilder(LettuceConnectionConfiguration.java:110)
	at org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration.getLettuceClientConfiguration(LettuceConnectionConfiguration.java:95)
	at org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration.redisConnectionFactory(LettuceConnectionConfiguration.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 74 common frames omitted
Caused by: java.lang.ClassNotFoundException: org.apache.commons.pool2.impl.GenericObjectPoolConfig
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:355)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	... 85 common frames omitted
"2021-03-31 === [main] == INFO  == com.jonm.BlogApiApplication == Starting BlogApiApplication using Java 1.8.0_261 on Jonm with PID 14768 (D:\Users\lhz17\Desktop\01\NBlog-master\blog-api\target\classes started by lhz17 in D:\Users\lhz17\Desktop\01\NBlog-master\blog-api)
""2021-03-31 === [main] == DEBUG == com.jonm.BlogApiApplication == Running with Spring Boot v2.4.0, Spring v5.3.1
""2021-03-31 === [main] == INFO  == com.jonm.BlogApiApplication == The following profiles are active: dev
""2021-03-31 === [main] == INFO  == o.s.d.r.config.RepositoryConfigurationDelegate == Multiple Spring Data modules found, entering strict repository configuration mode!
""2021-03-31 === [main] == INFO  == o.s.d.r.config.RepositoryConfigurationDelegate == Bootstrapping Spring Data Redis repositories in DEFAULT mode.
""2021-03-31 === [main] == INFO  == o.s.d.r.config.RepositoryConfigurationDelegate == Finished Spring Data repository scanning in 90 ms. Found 0 Redis repository interfaces.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == INFO  == o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker == Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
""2021-03-31 === [main] == INFO  == o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker == Bean 'spring.datasource.druid-com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties' of type [com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
""2021-03-31 === [main] == INFO  == o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker == Bean 'advisor' of type [org.springframework.aop.support.RegexpMethodPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
""2021-03-31 === [main] == INFO  == o.s.boot.web.embedded.tomcat.TomcatWebServer == Tomcat initialized with port(s): 8090 (http)
""2021-03-31 === [main] == INFO  == org.apache.catalina.core.StandardService == Starting service [Tomcat]
""2021-03-31 === [main] == INFO  == org.apache.catalina.core.StandardEngine == Starting Servlet engine: [Apache Tomcat/9.0.39]
""2021-03-31 === [main] == INFO  == o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] == Initializing Spring embedded WebApplicationContext
""2021-03-31 === [main] == INFO  == o.s.b.w.s.c.ServletWebServerApplicationContext == Root WebApplicationContext: initialization completed in 2538 ms
""2021-03-31 === [main] == INFO  == n.b.p.useragent.AbstractUserAgentAnalyzerDirect == - Loaded 90 files in  609 msec using expression: classpath*:UserAgents/**/*.yaml
""2021-03-31 === [main] == INFO  == nl.basjes.parse.useragent.utils.YauaaVersion == 
""2021-03-31 === [main] == INFO  == nl.basjes.parse.useragent.utils.YauaaVersion == /-----------------------------------------------------------\
""2021-03-31 === [main] == INFO  == nl.basjes.parse.useragent.utils.YauaaVersion == | Yauaa 5.20 (v5.20 @ 2020-11-22T15:39:16Z)                 |
""2021-03-31 === [main] == INFO  == nl.basjes.parse.useragent.utils.YauaaVersion == +-----------------------------------------------------------+
""2021-03-31 === [main] == INFO  == nl.basjes.parse.useragent.utils.YauaaVersion == | For more information: https://yauaa.basjes.nl             |
""2021-03-31 === [main] == INFO  == nl.basjes.parse.useragent.utils.YauaaVersion == | Copyright (C) 2013-2020 Niels Basjes - License Apache 2.0 |
""2021-03-31 === [main] == INFO  == nl.basjes.parse.useragent.utils.YauaaVersion == \-----------------------------------------------------------/
""2021-03-31 === [main] == INFO  == nl.basjes.parse.useragent.utils.YauaaVersion == 
""2021-03-31 === [main] == INFO  == n.b.p.useragent.AbstractUserAgentAnalyzerDirect == Building all needed matchers for the requested 11 fields.
""2021-03-31 === [main] == INFO  == com.alibaba.druid.pool.DruidDataSource == {dataSource-1} inited
""2021-03-31 === [main] == DEBUG == com.jonm.dao.BlogMapper.getBlogViewsList == ==>  Preparing: select id, views from blog
""2021-03-31 === [main] == DEBUG == com.jonm.dao.BlogMapper.getBlogViewsList == ==> Parameters: 
""2021-03-31 === [main] == TRACE == com.jonm.dao.BlogMapper.getBlogViewsList == <==    Columns: id, views
""2021-03-31 === [main] == TRACE == com.jonm.dao.BlogMapper.getBlogViewsList == <==        Row: 1, 0
""2021-03-31 === [main] == DEBUG == com.jonm.dao.BlogMapper.getBlogViewsList == <==      Total: 1
""2021-03-31 === [main] == INFO  == org.quartz.impl.StdSchedulerFactory == Using default implementation for ThreadExecutor
""2021-03-31 === [main] == INFO  == org.quartz.core.SchedulerSignalerImpl == Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
""2021-03-31 === [main] == INFO  == org.quartz.core.QuartzScheduler == Quartz Scheduler v.2.3.2 created.
""2021-03-31 === [main] == INFO  == org.quartz.simpl.RAMJobStore == RAMJobStore initialized.
""2021-03-31 === [main] == INFO  == org.quartz.core.QuartzScheduler == Scheduler meta-data: Quartz Scheduler (v2.3.2) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

""2021-03-31 === [main] == INFO  == org.quartz.impl.StdSchedulerFactory == Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
""2021-03-31 === [main] == INFO  == org.quartz.impl.StdSchedulerFactory == Quartz scheduler version: 2.3.2
""2021-03-31 === [main] == INFO  == org.quartz.core.QuartzScheduler == JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@655e024
""2021-03-31 === [main] == DEBUG == com.jonm.dao.ScheduleJobMapper.getJobList == ==>  Preparing: select job_id, bean_name, method_name, params, cron, status, remark, create_time from schedule_job
""2021-03-31 === [main] == DEBUG == com.jonm.dao.ScheduleJobMapper.getJobList == ==> Parameters: 
""2021-03-31 === [main] == TRACE == com.jonm.dao.ScheduleJobMapper.getJobList == <==    Columns: job_id, bean_name, method_name, params, cron, status, remark, create_time
""2021-03-31 === [main] == TRACE == com.jonm.dao.ScheduleJobMapper.getJobList == <==        Row: 1, redisSyncScheduleTask, syncBlogViewsToDatabase, , 0 0 1 * * ?, 1, 每天凌晨一点，从Redis将博客浏览量同步到数据库, 2020-11-17 23:45:42
""2021-03-31 === [main] == TRACE == com.jonm.dao.ScheduleJobMapper.getJobList == <==        Row: 2, visitorSyncScheduleTask, syncVisitInfoToDatabase, , 0 0 0 * * ?, 1, 清空当天Redis访客标识，记录当天的PV和UV，更新当天所有访客的PV和最后访问时间，更新城市新增访客UV数, 2021-02-05 08:14:28
""2021-03-31 === [main] == DEBUG == com.jonm.dao.ScheduleJobMapper.getJobList == <==      Total: 2
""2021-03-31 === [main] == INFO  == s.d.s.w.PropertySourcedRequestMappingHandlerMapping == Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
""2021-03-31 === [main] == INFO  == o.s.scheduling.concurrent.ThreadPoolTaskExecutor == Initializing ExecutorService
""2021-03-31 === [main] == INFO  == o.s.scheduling.concurrent.ThreadPoolTaskExecutor == Initializing ExecutorService 'sendEmilTaskExecutor'
""2021-03-31 === [main] == INFO  == o.s.security.web.DefaultSecurityFilterChain == Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@fac6d4a, org.springframework.security.web.context.SecurityContextPersistenceFilter@45cfbfe9, org.springframework.security.web.header.HeaderWriterFilter@4b9fd79, org.springframework.web.filter.CorsFilter@57e15f2d, org.springframework.security.web.authentication.logout.LogoutFilter@725d3fcc, com.jonm.config.JwtLoginFilter@23b81002, com.jonm.config.JwtFilter@16043cb9, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@513babf3, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@b7da2c4, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7aaec50e, org.springframework.security.web.session.SessionManagementFilter@51e68bcd, org.springframework.security.web.access.ExceptionTranslationFilter@2be41d90, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@882c166]
""2021-03-31 === [main] == INFO  == o.s.boot.web.embedded.tomcat.TomcatWebServer == Tomcat started on port(s): 8090 (http) with context path ''
""2021-03-31 === [main] == INFO  == s.d.s.web.plugins.DocumentationPluginsBootstrapper == Context refreshed
""2021-03-31 === [main] == INFO  == s.d.s.web.plugins.DocumentationPluginsBootstrapper == Found 1 custom documentation plugin(s)
""2021-03-31 === [main] == INFO  == s.d.spring.web.scanners.ApiListingReferenceScanner == Scanning for api listing references
""2021-03-31 === [main] == INFO  == s.d.s.w.r.operation.CachingOperationNameGenerator == Generating unique operation named: aboutUsingGET_1
""2021-03-31 === [main] == INFO  == s.d.s.w.r.operation.CachingOperationNameGenerator == Generating unique operation named: blogsUsingGET_1
""2021-03-31 === [main] == INFO  == s.d.s.w.r.operation.CachingOperationNameGenerator == Generating unique operation named: getBlogUsingGET_1
""2021-03-31 === [main] == INFO  == s.d.s.w.r.operation.CachingOperationNameGenerator == Generating unique operation named: deleteUsingDELETE_1
""2021-03-31 === [main] == INFO  == s.d.s.w.r.operation.CachingOperationNameGenerator == Generating unique operation named: deleteUsingDELETE_2
""2021-03-31 === [main] == INFO  == s.d.s.w.r.operation.CachingOperationNameGenerator == Generating unique operation named: commentsUsingGET_1
""2021-03-31 === [main] == INFO  == s.d.s.w.r.operation.CachingOperationNameGenerator == Generating unique operation named: deleteUsingDELETE_3
""2021-03-31 === [main] == INFO  == s.d.s.w.r.operation.CachingOperationNameGenerator == Generating unique operation named: updatePublishedUsingPUT_1
""2021-03-31 === [main] == INFO  == s.d.s.w.r.operation.CachingOperationNameGenerator == Generating unique operation named: friendsUsingGET_1
""2021-03-31 === [main] == INFO  == s.d.s.w.r.operation.CachingOperationNameGenerator == Generating unique operation named: deleteUsingDELETE_4
""2021-03-31 === [main] == INFO  == s.d.s.w.r.operation.CachingOperationNameGenerator == Generating unique operation named: updatePublishedUsingPUT_2
""2021-03-31 === [main] == INFO  == s.d.s.w.r.operation.CachingOperationNameGenerator == Generating unique operation named: momentsUsingGET_1
""2021-03-31 === [main] == INFO  == s.d.s.w.r.operation.CachingOperationNameGenerator == Generating unique operation named: deleteUsingDELETE_5
""2021-03-31 === [main] == INFO  == s.d.s.w.r.operation.CachingOperationNameGenerator == Generating unique operation named: deleteUsingDELETE_6
""2021-03-31 === [main] == INFO  == s.d.s.w.r.operation.CachingOperationNameGenerator == Generating unique operation named: deleteUsingDELETE_7
""2021-03-31 === [main] == INFO  == s.d.s.w.r.operation.CachingOperationNameGenerator == Generating unique operation named: deleteUsingDELETE_8
""2021-03-31 === [main] == INFO  == s.d.s.w.r.operation.CachingOperationNameGenerator == Generating unique operation named: deleteUsingDELETE_9
""2021-03-31 === [main] == INFO  == o.s.scheduling.quartz.SchedulerFactoryBean == Starting Quartz Scheduler now
""2021-03-31 === [main] == INFO  == org.quartz.core.QuartzScheduler == Scheduler quartzScheduler_$_NON_CLUSTERED started.
""2021-03-31 === [main] == INFO  == com.jonm.BlogApiApplication == Started BlogApiApplication in 9.195 seconds (JVM running for 10.759)
""2021-03-31 === [http-nio-8090-exec-2] == INFO  == o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] == Initializing Spring DispatcherServlet 'dispatcherServlet'
""2021-03-31 === [http-nio-8090-exec-2] == INFO  == org.springframework.web.servlet.DispatcherServlet == Initializing Servlet 'dispatcherServlet'
""2021-03-31 === [http-nio-8090-exec-2] == INFO  == org.springframework.web.servlet.DispatcherServlet == Completed initialization in 1 ms
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == ==>  Preparing: select id,name_en,name_zh,value,type from site_setting
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==    Columns: id, name_en, name_zh, value, type
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 1, webTitleSuffix, 网页标题后缀, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 2, blogName, 博客名称, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 3, footerImgTitle, 页脚图片标题, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 4, footerImgUrl, 页脚图片路径, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 5, copyright, Copyright, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 6, beian, ICP备案号, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 7, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 8, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 9, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 10, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 11, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 12, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 13, badge, 徽标, <<BLOB>>, 2
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 14, avatar, 头像路径, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 15, name, 昵称, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 16, rollText, 滚动个签, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 17, github, GitHub地址, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 18, qq, QQ链接, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 19, bilibili, bilibili链接, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 20, netease, 网易云音乐, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 21, email, email, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 22, favorite, 自定义, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 24, favorite, 自定义, <<BLOB>>, 3
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 25, reward, 赞赏码路径, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 26, commentAdminFlag, 博主评论标识, <<BLOB>>, 1
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 27, friendContent, 友链页面信息, <<BLOB>>, 4
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.SiteSettingMapper.getList == <==        Row: 28, friendCommentEnabled, 友链页面评论开关, <<BLOB>>, 4
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.SiteSettingMapper.getList == <==      Total: 27
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == c.j.d.B.getBlogInfoListByIsPublished_COUNT == ==>  Preparing: SELECT count(0) FROM blog AS b LEFT JOIN category AS c ON b.category_id = c.id WHERE b.is_published = true
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == c.j.d.B.getBlogInfoListByIsPublished_COUNT == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == c.j.d.B.getBlogInfoListByIsPublished_COUNT == <==    Columns: count(0)
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == c.j.d.B.getBlogInfoListByIsPublished_COUNT == <==        Row: 1
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == c.j.d.B.getBlogInfoListByIsPublished_COUNT == <==      Total: 1
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == c.jonm.dao.BlogMapper.getBlogInfoListByIsPublished == ==>  Preparing: SELECT b.id, b.title, b.description, b.is_top, b.create_time, b.views, b.words, b.read_time, b.password, c.category_name FROM blog AS b LEFT JOIN category AS c ON b.category_id = c.id WHERE b.is_published = true order by is_top desc, create_time desc LIMIT ?
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == c.jonm.dao.BlogMapper.getBlogInfoListByIsPublished == ==> Parameters: 5(Integer)
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == c.jonm.dao.BlogMapper.getBlogInfoListByIsPublished == <==    Columns: id, title, description, is_top, create_time, views, words, read_time, password, category_name
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == c.jonm.dao.BlogMapper.getBlogInfoListByIsPublished == <==        Row: 1, Test, <<BLOB>>, 0, 2021-03-28 17:00:05, 0, 1413, 7, , 个人项目
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == c.jonm.dao.BlogMapper.getBlogInfoListByIsPublished == <==      Total: 1
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == c.j.d.B.getNewBlogListByIsPublishedAndIsRecommend_COUNT == ==>  Preparing: SELECT count(0) FROM blog WHERE is_published = true AND is_recommend = true
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == c.j.d.B.getNewBlogListByIsPublishedAndIsRecommend_COUNT == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == c.j.d.B.getNewBlogListByIsPublishedAndIsRecommend_COUNT == <==    Columns: count(0)
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == c.j.d.B.getNewBlogListByIsPublishedAndIsRecommend_COUNT == <==        Row: 1
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == c.j.d.B.getNewBlogListByIsPublishedAndIsRecommend_COUNT == <==      Total: 1
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == c.j.d.B.getNewBlogListByIsPublishedAndIsRecommend == ==>  Preparing: select id, title, password from blog where is_published=true and is_recommend=true order by create_time desc LIMIT ?
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == c.j.d.B.getNewBlogListByIsPublishedAndIsRecommend == ==> Parameters: 3(Integer)
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == c.j.d.B.getNewBlogListByIsPublishedAndIsRecommend == <==    Columns: id, title, password
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == c.j.d.B.getNewBlogListByIsPublishedAndIsRecommend == <==        Row: 1, Test, 
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == c.j.d.B.getNewBlogListByIsPublishedAndIsRecommend == <==      Total: 1
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.CategoryMapper.getCategoryNameList == ==>  Preparing: select category_name from category order by id desc
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.CategoryMapper.getCategoryNameList == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.CategoryMapper.getCategoryNameList == <==    Columns: category_name
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.CategoryMapper.getCategoryNameList == <==        Row: 个人项目
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.CategoryMapper.getCategoryNameList == <==        Row: 项目
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.CategoryMapper.getCategoryNameList == <==      Total: 2
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.TagMapper.getTagListNotId == ==>  Preparing: select tag_name, color from tag order by id desc
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.TagMapper.getTagListNotId == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.TagMapper.getTagListNotId == <==    Columns: tag_name, color
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.TagMapper.getTagListNotId == <==        Row: Mysql, null
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.TagMapper.getTagListNotId == <==        Row: Java, null
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.TagMapper.getTagListNotId == <==      Total: 2
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == ==>  Preparing: select b.id, b.title, b.password, c.category_name from blog as b left join category as c on b.category_id=c.id where b.is_published=true order by rand() limit ?
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == ==> Parameters: 5(Integer)
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == <==    Columns: id, title, password, category_name
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == <==        Row: 1, Test, , 个人项目
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == <==      Total: 1
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == ==>  Preparing: select t.tag_name, t.color from blog_tag as bt left join tag as t on bt.tag_id=t.id where bt.blog_id=?
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == ==> Parameters: 1(Long)
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == ==>  Preparing: select t.tag_name, t.color from blog_tag as bt left join tag as t on bt.tag_id=t.id where bt.blog_id=?
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == ==> Parameters: 1(Long)
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.TagMapper.getTagListByBlogId == <==    Columns: tag_name, color
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.TagMapper.getTagListByBlogId == <==        Row: Mysql, null
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == <==      Total: 1
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.TagMapper.getTagListByBlogId == <==    Columns: tag_name, color
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.TagMapper.getTagListByBlogId == <==        Row: Mysql, null
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == <==      Total: 1
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.VisitorMapper.hasUUID == ==>  Preparing: select ifnull((select 1 from visitor where uuid=? limit 1), 0)
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.VisitorMapper.hasUUID == ==> Parameters: 897815bc-568b-41f9-82ee-50639a7263a9(String)
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.VisitorMapper.hasUUID == <==    Columns: ifnull((select 1 from visitor where uuid='897815bc-568b-41f9-82ee-50639a7263a9' limit 1), 0)
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.VisitorMapper.hasUUID == <==        Row: 1
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.VisitorMapper.hasUUID == <==      Total: 1
""2021-03-31 === [sendSimpleMail-1] == INFO  == n.b.p.useragent.AbstractUserAgentAnalyzerDirect == Initializing Analyzer data structures
""2021-03-31 === [sendSimpleMail-1] == INFO  == n.b.p.useragent.AbstractUserAgentAnalyzerDirect == Built in 1784 msec : Hashmap 114881, Ranges map:2900
""2021-03-31 === [sendSimpleMail-1] == DEBUG == com.jonm.dao.VisitLogMapper.saveVisitLog == ==>  Preparing: insert into visit_log (uuid, uri, method, param, behavior, content, remark, ip, ip_source, os, browser, times, create_time, user_agent) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
""2021-03-31 === [sendSimpleMail-1] == DEBUG == com.jonm.dao.VisitLogMapper.saveVisitLog == ==> Parameters: 897815bc-568b-41f9-82ee-50639a7263a9(String), /blogs(String), GET(String), {"pageNum":1}(String), 访问页面(String), 首页(String), 第1页(String), 192.168.189.1(String), 内网IP|内网IP(String), Windows 10(String), Chrome 88.0.4324.182(String), 1292(Integer), 2021-03-31 19:34:51.041(Timestamp), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.182 Safari/537.36(String)
""2021-03-31 === [sendSimpleMail-1] == DEBUG == com.jonm.dao.VisitLogMapper.saveVisitLog == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-6] == DEBUG == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == ==>  Preparing: select b.id, b.title, b.password, c.category_name from blog as b left join category as c on b.category_id=c.id where b.is_published=true order by rand() limit ?
""2021-03-31 === [http-nio-8090-exec-6] == DEBUG == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == ==> Parameters: 5(Integer)
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == <==    Columns: id, title, password, category_name
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == <==        Row: 1, Test, , 个人项目
""2021-03-31 === [http-nio-8090-exec-6] == DEBUG == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == <==      Total: 1
""2021-03-31 === [http-nio-8090-exec-6] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == ==>  Preparing: select t.tag_name, t.color from blog_tag as bt left join tag as t on bt.tag_id=t.id where bt.blog_id=?
""2021-03-31 === [http-nio-8090-exec-6] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == ==> Parameters: 1(Long)
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.TagMapper.getTagListByBlogId == <==    Columns: tag_name, color
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.dao.TagMapper.getTagListByBlogId == <==        Row: Mysql, null
""2021-03-31 === [http-nio-8090-exec-6] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == <==      Total: 1
""2021-03-31 === [sendSimpleMail-2] == DEBUG == com.jonm.dao.VisitLogMapper.saveVisitLog == ==>  Preparing: insert into visit_log (uuid, uri, method, param, behavior, content, remark, ip, ip_source, os, browser, times, create_time, user_agent) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
""2021-03-31 === [sendSimpleMail-2] == DEBUG == com.jonm.dao.VisitLogMapper.saveVisitLog == ==> Parameters: 897815bc-568b-41f9-82ee-50639a7263a9(String), /blogs(String), GET(String), {"pageNum":1}(String), 访问页面(String), 首页(String), 第1页(String), 192.168.189.1(String), 内网IP|内网IP(String), Windows 10(String), Chrome 88.0.4324.182(String), 160(Integer), 2021-03-31 19:35:20.292(Timestamp), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.182 Safari/537.36(String)
""2021-03-31 === [sendSimpleMail-2] == DEBUG == com.jonm.dao.VisitLogMapper.saveVisitLog == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-2] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-1] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-2] == DEBUG == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == ==>  Preparing: select b.id, b.title, b.password, c.category_name from blog as b left join category as c on b.category_id=c.id where b.is_published=true order by rand() limit ?
""2021-03-31 === [http-nio-8090-exec-2] == DEBUG == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == ==> Parameters: 5(Integer)
""2021-03-31 === [http-nio-8090-exec-2] == TRACE == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == <==    Columns: id, title, password, category_name
""2021-03-31 === [http-nio-8090-exec-2] == TRACE == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == <==        Row: 1, Test, , 个人项目
""2021-03-31 === [http-nio-8090-exec-2] == DEBUG == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == <==      Total: 1
""2021-03-31 === [http-nio-8090-exec-2] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == ==>  Preparing: select t.tag_name, t.color from blog_tag as bt left join tag as t on bt.tag_id=t.id where bt.blog_id=?
""2021-03-31 === [http-nio-8090-exec-2] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == ==> Parameters: 1(Long)
""2021-03-31 === [http-nio-8090-exec-2] == TRACE == com.jonm.dao.TagMapper.getTagListByBlogId == <==    Columns: tag_name, color
""2021-03-31 === [http-nio-8090-exec-2] == TRACE == com.jonm.dao.TagMapper.getTagListByBlogId == <==        Row: Mysql, null
""2021-03-31 === [http-nio-8090-exec-2] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == <==      Total: 1
""2021-03-31 === [sendSimpleMail-3] == DEBUG == com.jonm.dao.VisitLogMapper.saveVisitLog == ==>  Preparing: insert into visit_log (uuid, uri, method, param, behavior, content, remark, ip, ip_source, os, browser, times, create_time, user_agent) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
""2021-03-31 === [sendSimpleMail-3] == DEBUG == com.jonm.dao.VisitLogMapper.saveVisitLog == ==> Parameters: 897815bc-568b-41f9-82ee-50639a7263a9(String), /blogs(String), GET(String), {"pageNum":1}(String), 访问页面(String), 首页(String), 第1页(String), 192.168.189.1(String), 内网IP|内网IP(String), Windows 10(String), Chrome 88.0.4324.182(String), 40(Integer), 2021-03-31 19:37:44.291(Timestamp), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.182 Safari/537.36(String)
""2021-03-31 === [sendSimpleMail-3] == DEBUG == com.jonm.dao.VisitLogMapper.saveVisitLog == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [sendSimpleMail-4] == DEBUG == com.jonm.dao.VisitLogMapper.saveVisitLog == ==>  Preparing: insert into visit_log (uuid, uri, method, param, behavior, content, remark, ip, ip_source, os, browser, times, create_time, user_agent) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
""2021-03-31 === [sendSimpleMail-4] == DEBUG == com.jonm.dao.VisitLogMapper.saveVisitLog == ==> Parameters: 897815bc-568b-41f9-82ee-50639a7263a9(String), /blogs(String), GET(String), {"pageNum":1}(String), 访问页面(String), 首页(String), 第1页(String), 192.168.189.1(String), 内网IP|内网IP(String), Windows 10(String), Chrome 88.0.4324.182(String), 35(Integer), 2021-03-31 19:38:43.154(Timestamp), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.182 Safari/537.36(String)
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == ==>  Preparing: select b.id, b.title, b.password, c.category_name from blog as b left join category as c on b.category_id=c.id where b.is_published=true order by rand() limit ?
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == ==> Parameters: 5(Integer)
""2021-03-31 === [sendSimpleMail-4] == DEBUG == com.jonm.dao.VisitLogMapper.saveVisitLog == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == <==    Columns: id, title, password, category_name
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == <==        Row: 1, Test, , 个人项目
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == <==      Total: 1
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == ==>  Preparing: select t.tag_name, t.color from blog_tag as bt left join tag as t on bt.tag_id=t.id where bt.blog_id=?
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == ==> Parameters: 1(Long)
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.TagMapper.getTagListByBlogId == <==    Columns: tag_name, color
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.TagMapper.getTagListByBlogId == <==        Row: Mysql, null
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == <==      Total: 1
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-5] == DEBUG == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == ==>  Preparing: select b.id, b.title, b.password, c.category_name from blog as b left join category as c on b.category_id=c.id where b.is_published=true order by rand() limit ?
""2021-03-31 === [http-nio-8090-exec-5] == DEBUG == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == ==> Parameters: 5(Integer)
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == <==    Columns: id, title, password, category_name
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == <==        Row: 1, Test, , 个人项目
""2021-03-31 === [http-nio-8090-exec-5] == DEBUG == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == <==      Total: 1
""2021-03-31 === [http-nio-8090-exec-5] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == ==>  Preparing: select t.tag_name, t.color from blog_tag as bt left join tag as t on bt.tag_id=t.id where bt.blog_id=?
""2021-03-31 === [http-nio-8090-exec-5] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == ==> Parameters: 1(Long)
""2021-03-31 === [sendSimpleMail-5] == DEBUG == com.jonm.dao.VisitLogMapper.saveVisitLog == ==>  Preparing: insert into visit_log (uuid, uri, method, param, behavior, content, remark, ip, ip_source, os, browser, times, create_time, user_agent) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
""2021-03-31 === [sendSimpleMail-5] == DEBUG == com.jonm.dao.VisitLogMapper.saveVisitLog == ==> Parameters: 897815bc-568b-41f9-82ee-50639a7263a9(String), /blogs(String), GET(String), {"pageNum":1}(String), 访问页面(String), 首页(String), 第1页(String), 192.168.189.1(String), 内网IP|内网IP(String), Windows 10(String), Chrome 88.0.4324.182(String), 40319(Integer), 2021-03-31 19:41:19.443(Timestamp), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.182 Safari/537.36(String)
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.TagMapper.getTagListByBlogId == <==    Columns: tag_name, color
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.TagMapper.getTagListByBlogId == <==        Row: Mysql, null
""2021-03-31 === [http-nio-8090-exec-5] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == <==      Total: 1
""2021-03-31 === [sendSimpleMail-5] == DEBUG == com.jonm.dao.VisitLogMapper.saveVisitLog == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-8] == DEBUG == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == ==>  Preparing: select b.id, b.title, b.password, c.category_name from blog as b left join category as c on b.category_id=c.id where b.is_published=true order by rand() limit ?
""2021-03-31 === [http-nio-8090-exec-8] == DEBUG == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == ==> Parameters: 5(Integer)
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == <==    Columns: id, title, password, category_name
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == <==        Row: 1, Test, , 个人项目
""2021-03-31 === [http-nio-8090-exec-8] == DEBUG == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == <==      Total: 1
""2021-03-31 === [sendSimpleMail-1] == DEBUG == com.jonm.dao.VisitLogMapper.saveVisitLog == ==>  Preparing: insert into visit_log (uuid, uri, method, param, behavior, content, remark, ip, ip_source, os, browser, times, create_time, user_agent) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
""2021-03-31 === [sendSimpleMail-1] == DEBUG == com.jonm.dao.VisitLogMapper.saveVisitLog == ==> Parameters: 897815bc-568b-41f9-82ee-50639a7263a9(String), /blogs(String), GET(String), {"pageNum":1}(String), 访问页面(String), 首页(String), 第1页(String), 192.168.189.1(String), 内网IP|内网IP(String), Windows 10(String), Chrome 88.0.4324.182(String), 2510(Integer), 2021-03-31 19:41:19.475(Timestamp), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.182 Safari/537.36(String)
""2021-03-31 === [http-nio-8090-exec-8] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == ==>  Preparing: select t.tag_name, t.color from blog_tag as bt left join tag as t on bt.tag_id=t.id where bt.blog_id=?
""2021-03-31 === [http-nio-8090-exec-8] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == ==> Parameters: 1(Long)
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.TagMapper.getTagListByBlogId == <==    Columns: tag_name, color
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.TagMapper.getTagListByBlogId == <==        Row: Mysql, null
""2021-03-31 === [http-nio-8090-exec-8] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == <==      Total: 1
""2021-03-31 === [sendSimpleMail-1] == DEBUG == com.jonm.dao.VisitLogMapper.saveVisitLog == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-2] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == ==>  Preparing: select b.id, b.title, b.password, c.category_name from blog as b left join category as c on b.category_id=c.id where b.is_published=true order by rand() limit ?
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == ==> Parameters: 5(Integer)
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == <==    Columns: id, title, password, category_name
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == <==        Row: 1, Test, , 个人项目
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == <==      Total: 1
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == ==>  Preparing: select t.tag_name, t.color from blog_tag as bt left join tag as t on bt.tag_id=t.id where bt.blog_id=?
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == ==> Parameters: 1(Long)
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.TagMapper.getTagListByBlogId == <==    Columns: tag_name, color
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.TagMapper.getTagListByBlogId == <==        Row: Mysql, null
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == <==      Total: 1
""2021-03-31 === [sendSimpleMail-2] == DEBUG == com.jonm.dao.VisitLogMapper.saveVisitLog == ==>  Preparing: insert into visit_log (uuid, uri, method, param, behavior, content, remark, ip, ip_source, os, browser, times, create_time, user_agent) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
""2021-03-31 === [sendSimpleMail-2] == DEBUG == com.jonm.dao.VisitLogMapper.saveVisitLog == ==> Parameters: 897815bc-568b-41f9-82ee-50639a7263a9(String), /blogs(String), GET(String), {"pageNum":1}(String), 访问页面(String), 首页(String), 第1页(String), 192.168.189.1(String), 内网IP|内网IP(String), Windows 10(String), Chrome 88.0.4324.182(String), 41(Integer), 2021-03-31 19:41:30.574(Timestamp), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.182 Safari/537.36(String)
""2021-03-31 === [sendSimpleMail-2] == DEBUG == com.jonm.dao.VisitLogMapper.saveVisitLog == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.TagMapper.getTagList_COUNT == ==>  Preparing: SELECT count(0) FROM tag
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.TagMapper.getTagList_COUNT == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.TagMapper.getTagList_COUNT == <==    Columns: count(0)
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.TagMapper.getTagList_COUNT == <==        Row: 2
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.TagMapper.getTagList_COUNT == <==      Total: 1
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.TagMapper.getTagList == ==>  Preparing: SELECT id, tag_name, color FROM tag order by id desc LIMIT ?
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.TagMapper.getTagList == ==> Parameters: 10(Integer)
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.TagMapper.getTagList == <==    Columns: id, tag_name, color
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.TagMapper.getTagList == <==        Row: 2, Mysql, null
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.TagMapper.getTagList == <==        Row: 1, Java, null
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.TagMapper.getTagList == <==      Total: 2
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-5] == DEBUG == com.jonm.dao.TagMapper.getTagByName == ==>  Preparing: select id, tag_name, color from tag where tag_name=?
""2021-03-31 === [http-nio-8090-exec-5] == DEBUG == com.jonm.dao.TagMapper.getTagByName == ==> Parameters: Mysql(String)
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.TagMapper.getTagByName == <==    Columns: id, tag_name, color
""2021-03-31 === [http-nio-8090-exec-5] == TRACE == com.jonm.dao.TagMapper.getTagByName == <==        Row: 2, Mysql, null
""2021-03-31 === [http-nio-8090-exec-5] == DEBUG == com.jonm.dao.TagMapper.getTagByName == <==      Total: 1
""2021-03-31 === [http-nio-8090-exec-5] == DEBUG == com.jonm.dao.TagMapper.updateTag == ==>  Preparing: update tag set tag_name=?, color=? where id=?
""2021-03-31 === [http-nio-8090-exec-5] == DEBUG == com.jonm.dao.TagMapper.updateTag == ==> Parameters: Mysql(String), red(String), 2(Long)
""2021-03-31 === [http-nio-8090-exec-5] == DEBUG == com.jonm.dao.TagMapper.updateTag == <==    Updates: 1
""2021-03-31 === [sendSimpleMail-3] == DEBUG == com.jonm.dao.OperationLogMapper.saveOperationLog == ==>  Preparing: insert into operation_log (username, uri, method, param, description, ip, ip_source, os, browser, times, create_time, user_agent) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
""2021-03-31 === [sendSimpleMail-3] == DEBUG == com.jonm.dao.OperationLogMapper.saveOperationLog == ==> Parameters: Admin(String), /admin/tag(String), PUT(String), {"tag":{"id":2,"name":"Mysql","color":"red","blogs":[]}}(String), 修改标签(String), 192.168.189.1(String), 内网IP|内网IP(String), Windows 10(String), Chrome 88.0.4324.182(String), 133(Integer), 2021-03-31 19:43:49.728(Timestamp), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.182 Safari/537.36(String)
""2021-03-31 === [sendSimpleMail-3] == DEBUG == com.jonm.dao.OperationLogMapper.saveOperationLog == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-10] == DEBUG == com.jonm.dao.TagMapper.getTagList_COUNT == ==>  Preparing: SELECT count(0) FROM tag
""2021-03-31 === [http-nio-8090-exec-10] == DEBUG == com.jonm.dao.TagMapper.getTagList_COUNT == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.TagMapper.getTagList_COUNT == <==    Columns: count(0)
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.TagMapper.getTagList_COUNT == <==        Row: 2
""2021-03-31 === [http-nio-8090-exec-10] == DEBUG == com.jonm.dao.TagMapper.getTagList_COUNT == <==      Total: 1
""2021-03-31 === [http-nio-8090-exec-10] == DEBUG == com.jonm.dao.TagMapper.getTagList == ==>  Preparing: SELECT id, tag_name, color FROM tag order by id desc LIMIT ?
""2021-03-31 === [http-nio-8090-exec-10] == DEBUG == com.jonm.dao.TagMapper.getTagList == ==> Parameters: 10(Integer)
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.TagMapper.getTagList == <==    Columns: id, tag_name, color
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.TagMapper.getTagList == <==        Row: 2, Mysql, red
""2021-03-31 === [http-nio-8090-exec-10] == TRACE == com.jonm.dao.TagMapper.getTagList == <==        Row: 1, Java, null
""2021-03-31 === [http-nio-8090-exec-10] == DEBUG == com.jonm.dao.TagMapper.getTagList == <==      Total: 2
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-8] == DEBUG == com.jonm.dao.TagMapper.getTagByName == ==>  Preparing: select id, tag_name, color from tag where tag_name=?
""2021-03-31 === [http-nio-8090-exec-8] == DEBUG == com.jonm.dao.TagMapper.getTagByName == ==> Parameters: Java(String)
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.TagMapper.getTagByName == <==    Columns: id, tag_name, color
""2021-03-31 === [http-nio-8090-exec-8] == TRACE == com.jonm.dao.TagMapper.getTagByName == <==        Row: 1, Java, null
""2021-03-31 === [http-nio-8090-exec-8] == DEBUG == com.jonm.dao.TagMapper.getTagByName == <==      Total: 1
""2021-03-31 === [http-nio-8090-exec-8] == DEBUG == com.jonm.dao.TagMapper.updateTag == ==>  Preparing: update tag set tag_name=?, color=? where id=?
""2021-03-31 === [http-nio-8090-exec-8] == DEBUG == com.jonm.dao.TagMapper.updateTag == ==> Parameters: Java(String), yellow(String), 1(Long)
""2021-03-31 === [http-nio-8090-exec-8] == DEBUG == com.jonm.dao.TagMapper.updateTag == <==    Updates: 1
""2021-03-31 === [sendSimpleMail-4] == DEBUG == com.jonm.dao.OperationLogMapper.saveOperationLog == ==>  Preparing: insert into operation_log (username, uri, method, param, description, ip, ip_source, os, browser, times, create_time, user_agent) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
""2021-03-31 === [sendSimpleMail-4] == DEBUG == com.jonm.dao.OperationLogMapper.saveOperationLog == ==> Parameters: Admin(String), /admin/tag(String), PUT(String), {"tag":{"id":1,"name":"Java","color":"yellow","blogs":[]}}(String), 修改标签(String), 192.168.189.1(String), 内网IP|内网IP(String), Windows 10(String), Chrome 88.0.4324.182(String), 139(Integer), 2021-03-31 19:43:55.99(Timestamp), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.182 Safari/537.36(String)
""2021-03-31 === [sendSimpleMail-4] == DEBUG == com.jonm.dao.OperationLogMapper.saveOperationLog == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-2] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-2] == DEBUG == com.jonm.dao.TagMapper.getTagList_COUNT == ==>  Preparing: SELECT count(0) FROM tag
""2021-03-31 === [http-nio-8090-exec-2] == DEBUG == com.jonm.dao.TagMapper.getTagList_COUNT == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-2] == TRACE == com.jonm.dao.TagMapper.getTagList_COUNT == <==    Columns: count(0)
""2021-03-31 === [http-nio-8090-exec-2] == TRACE == com.jonm.dao.TagMapper.getTagList_COUNT == <==        Row: 2
""2021-03-31 === [http-nio-8090-exec-2] == DEBUG == com.jonm.dao.TagMapper.getTagList_COUNT == <==      Total: 1
""2021-03-31 === [http-nio-8090-exec-2] == DEBUG == com.jonm.dao.TagMapper.getTagList == ==>  Preparing: SELECT id, tag_name, color FROM tag order by id desc LIMIT ?
""2021-03-31 === [http-nio-8090-exec-2] == DEBUG == com.jonm.dao.TagMapper.getTagList == ==> Parameters: 10(Integer)
""2021-03-31 === [http-nio-8090-exec-2] == TRACE == com.jonm.dao.TagMapper.getTagList == <==    Columns: id, tag_name, color
""2021-03-31 === [http-nio-8090-exec-2] == TRACE == com.jonm.dao.TagMapper.getTagList == <==        Row: 2, Mysql, red
""2021-03-31 === [http-nio-8090-exec-2] == TRACE == com.jonm.dao.TagMapper.getTagList == <==        Row: 1, Java, yellow
""2021-03-31 === [http-nio-8090-exec-2] == DEBUG == com.jonm.dao.TagMapper.getTagList == <==      Total: 2
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == c.j.d.B.getBlogInfoListByIsPublished_COUNT == ==>  Preparing: SELECT count(0) FROM blog AS b LEFT JOIN category AS c ON b.category_id = c.id WHERE b.is_published = true
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == c.j.d.B.getBlogInfoListByIsPublished_COUNT == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == c.j.d.B.getBlogInfoListByIsPublished_COUNT == <==    Columns: count(0)
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == c.j.d.B.getBlogInfoListByIsPublished_COUNT == <==        Row: 1
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == c.j.d.B.getBlogInfoListByIsPublished_COUNT == <==      Total: 1
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == c.jonm.dao.BlogMapper.getBlogInfoListByIsPublished == ==>  Preparing: SELECT b.id, b.title, b.description, b.is_top, b.create_time, b.views, b.words, b.read_time, b.password, c.category_name FROM blog AS b LEFT JOIN category AS c ON b.category_id = c.id WHERE b.is_published = true order by is_top desc, create_time desc LIMIT ?
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == c.jonm.dao.BlogMapper.getBlogInfoListByIsPublished == ==> Parameters: 5(Integer)
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.TagMapper.getTagListNotId == ==>  Preparing: select tag_name, color from tag order by id desc
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.TagMapper.getTagListNotId == ==> Parameters: 
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.TagMapper.getTagListNotId == <==    Columns: tag_name, color
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.TagMapper.getTagListNotId == <==        Row: Mysql, red
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.TagMapper.getTagListNotId == <==        Row: Java, yellow
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.TagMapper.getTagListNotId == <==      Total: 2
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == c.jonm.dao.BlogMapper.getBlogInfoListByIsPublished == <==    Columns: id, title, description, is_top, create_time, views, words, read_time, password, category_name
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == c.jonm.dao.BlogMapper.getBlogInfoListByIsPublished == <==        Row: 1, Test, <<BLOB>>, 0, 2021-03-28 17:00:05, 0, 1413, 7, , 个人项目
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == c.jonm.dao.BlogMapper.getBlogInfoListByIsPublished == <==      Total: 1
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == ==>  Preparing: select t.tag_name, t.color from blog_tag as bt left join tag as t on bt.tag_id=t.id where bt.blog_id=?
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == ==> Parameters: 1(Long)
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == ==>  Preparing: select b.id, b.title, b.password, c.category_name from blog as b left join category as c on b.category_id=c.id where b.is_published=true order by rand() limit ?
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == ==> Parameters: 5(Integer)
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.TagMapper.getTagListByBlogId == <==    Columns: tag_name, color
""2021-03-31 === [http-nio-8090-exec-4] == TRACE == com.jonm.dao.TagMapper.getTagListByBlogId == <==        Row: Mysql, red
""2021-03-31 === [http-nio-8090-exec-4] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == <==      Total: 1
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == <==    Columns: id, title, password, category_name
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == <==        Row: 1, Test, , 个人项目
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == <==      Total: 1
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == ==>  Preparing: select t.tag_name, t.color from blog_tag as bt left join tag as t on bt.tag_id=t.id where bt.blog_id=?
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == ==> Parameters: 1(Long)
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.TagMapper.getTagListByBlogId == <==    Columns: tag_name, color
""2021-03-31 === [http-nio-8090-exec-9] == TRACE == com.jonm.dao.TagMapper.getTagListByBlogId == <==        Row: Mysql, red
""2021-03-31 === [http-nio-8090-exec-9] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == <==      Total: 1
""2021-03-31 === [sendSimpleMail-5] == DEBUG == com.jonm.dao.VisitLogMapper.saveVisitLog == ==>  Preparing: insert into visit_log (uuid, uri, method, param, behavior, content, remark, ip, ip_source, os, browser, times, create_time, user_agent) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
""2021-03-31 === [sendSimpleMail-5] == DEBUG == com.jonm.dao.VisitLogMapper.saveVisitLog == ==> Parameters: 897815bc-568b-41f9-82ee-50639a7263a9(String), /blogs(String), GET(String), {"pageNum":1}(String), 访问页面(String), 首页(String), 第1页(String), 192.168.189.1(String), 内网IP|内网IP(String), Windows 10(String), Chrome 88.0.4324.182(String), 110(Integer), 2021-03-31 19:43:59.491(Timestamp), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.182 Safari/537.36(String)
""2021-03-31 === [sendSimpleMail-5] == DEBUG == com.jonm.dao.VisitLogMapper.saveVisitLog == <==    Updates: 1
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-6] == TRACE == com.jonm.config.JwtLoginFilter == Did not match request to Ant [pattern='/admin/login']
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == ==>  Preparing: select b.id, b.title, b.password, c.category_name from blog as b left join category as c on b.category_id=c.id where b.is_published=true order by rand() limit ?
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == ==> Parameters: 5(Integer)
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == <==    Columns: id, title, password, category_name
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == <==        Row: 1, Test, , 个人项目
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == c.j.d.B.getRandomBlogListByLimitNumAndIsPublished == <==      Total: 1
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == ==>  Preparing: select t.tag_name, t.color from blog_tag as bt left join tag as t on bt.tag_id=t.id where bt.blog_id=?
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == ==> Parameters: 1(Long)
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.TagMapper.getTagListByBlogId == <==    Columns: tag_name, color
""2021-03-31 === [http-nio-8090-exec-3] == TRACE == com.jonm.dao.TagMapper.getTagListByBlogId == <==        Row: Mysql, red
""2021-03-31 === [http-nio-8090-exec-3] == DEBUG == com.jonm.dao.TagMapper.getTagListByBlogId == <==      Total: 1
""2021-03-31 === [sendSimpleMail-1] == DEBUG == com.jonm.dao.VisitLogMapper.saveVisitLog == ==>  Preparing: insert into visit_log (uuid, uri, method, param, behavior, content, remark, ip, ip_source, os, browser, times, create_time, user_agent) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
""2021-03-31 === [sendSimpleMail-1] == DEBUG == com.jonm.dao.VisitLogMapper.saveVisitLog == ==> Parameters: 897815bc-568b-41f9-82ee-50639a7263a9(String), /blogs(String), GET(String), {"pageNum":1}(String), 访问页面(String), 首页(String), 第1页(String), 192.168.189.1(String), 内网IP|内网IP(String), Windows 10(String), Chrome 88.0.4324.182(String), 39(Integer), 2021-03-31 19:45:29.624(Timestamp), Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.182 Safari/537.36(String)
""2021-03-31 === [sendSimpleMail-1] == DEBUG == com.jonm.dao.VisitLogMapper.saveVisitLog == <==    Updates: 1
""2021-03-31 === [SpringContextShutdownHook] == INFO  == org.quartz.core.QuartzScheduler == Scheduler quartzScheduler_$_NON_CLUSTERED paused.
""2021-03-31 === [SpringContextShutdownHook] == INFO  == o.s.scheduling.concurrent.ThreadPoolTaskExecutor == Shutting down ExecutorService 'sendEmilTaskExecutor'
""2021-03-31 === [SpringContextShutdownHook] == INFO  == o.s.scheduling.quartz.SchedulerFactoryBean == Shutting down Quartz Scheduler
""2021-03-31 === [SpringContextShutdownHook] == INFO  == org.quartz.core.QuartzScheduler == Scheduler quartzScheduler_$_NON_CLUSTERED shutting down.
""2021-03-31 === [SpringContextShutdownHook] == INFO  == org.quartz.core.QuartzScheduler == Scheduler quartzScheduler_$_NON_CLUSTERED paused.
""2021-03-31 === [SpringContextShutdownHook] == INFO  == org.quartz.core.QuartzScheduler == Scheduler quartzScheduler_$_NON_CLUSTERED shutdown complete.
""2021-03-31 === [SpringContextShutdownHook] == INFO  == com.alibaba.druid.pool.DruidDataSource == {dataSource-1} closing ...
""2021-03-31 === [SpringContextShutdownHook] == INFO  == com.alibaba.druid.pool.DruidDataSource == {dataSource-1} closed
""2021-03-31 === [main] == INFO  == com.jonm.BlogApiApplication == Starting BlogApiApplication using Java 1.8.0_261 on Jonm with PID 6956 (D:\Users\lhz17\Desktop\01\NBlog-master\blog-api\target\classes started by lhz17 in D:\Users\lhz17\Desktop\01\NBlog-master\blog-api)
""2021-03-31 === [main] == DEBUG == com.jonm.BlogApiApplication == Running with Spring Boot v2.4.0, Spring v5.3.1
""2021-03-31 === [main] == INFO  == com.jonm.BlogApiApplication == The following profiles are active: dev
""2021-03-31 === [main] == INFO  == o.s.d.r.config.RepositoryConfigurationDelegate == Multiple Spring Data modules found, entering strict repository configuration mode!
""2021-03-31 === [main] == INFO  == o.s.d.r.config.RepositoryConfigurationDelegate == Bootstrapping Spring Data Redis repositories in DEFAULT mode.
""2021-03-31 === [main] == INFO  == o.s.d.r.config.RepositoryConfigurationDelegate == Finished Spring Data repository scanning in 111 ms. Found 0 Redis repository interfaces.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == WARN  == org.mybatis.spring.mapper.ClassPathMapperScanner == Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.
""2021-03-31 === [main] == INFO  == o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker == Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
""2021-03-31 === [main] == INFO  == o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker == Bean 'spring.datasource.druid-com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties' of type [com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
""2021-03-31 === [main] == INFO  == o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker == Bean 'advisor' of type [org.springframework.aop.support.RegexpMethodPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
""2021-03-31 === [main] == INFO  == o.s.boot.web.embedded.tomcat.TomcatWebServer == Tomcat initialized with port(s): 8090 (http)
""2021-03-31 === [main] == INFO  == org.apache.catalina.core.StandardService == Starting service [Tomcat]
""2021-03-31 === [main] == INFO  == org.apache.catalina.core.StandardEngine == Starting Servlet engine: [Apache Tomcat/9.0.39]
""2021-03-31 === [main] == INFO  == o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] == Initializing Spring embedded WebApplicationContext
""2021-03-31 === [main] == INFO  == o.s.b.w.s.c.ServletWebServerApplicationContext == Root WebApplicationContext: initialization completed in 4354 ms
""2021-03-31 === [main] == INFO  == n.b.p.useragent.AbstractUserAgentAnalyzerDirect == - Loaded 90 files in  880 msec using expression: classpath*:UserAgents/**/*.yaml
""2021-03-31 === [main] == INFO  == nl.basjes.parse.useragent.utils.YauaaVersion == 
""2021-03-31 === [main] == INFO  == nl.basjes.parse.useragent.utils.YauaaVersion == /-----------------------------------------------------------\
""2021-03-31 === [main] == INFO  == nl.basjes.parse.useragent.utils.YauaaVersion == | Yauaa 5.20 (v5.20 @ 2020-11-22T15:39:16Z)                 |
""2021-03-31 === [main] == INFO  == nl.basjes.parse.useragent.utils.YauaaVersion == +-----------------------------------------------------------+
""2021-03-31 === [main] == INFO  == nl.basjes.parse.useragent.utils.YauaaVersion == | For more information: https://yauaa.basjes.nl             |
""2021-03-31 === [main] == INFO  == nl.basjes.parse.useragent.utils.YauaaVersion == | Copyright (C) 2013-2020 Niels Basjes - License Apache 2.0 |
""2021-03-31 === [main] == INFO  == nl.basjes.parse.useragent.utils.YauaaVersion == \-----------------------------------------------------------/
""2021-03-31 === [main] == INFO  == nl.basjes.parse.useragent.utils.YauaaVersion == 
""2021-03-31 === [main] == INFO  == n.b.p.useragent.AbstractUserAgentAnalyzerDirect == Building all needed matchers for the requested 11 fields.
""2021-03-31 === [main] == INFO  == com.alibaba.druid.pool.DruidDataSource == {dataSource-1} inited
""2021-03-31 === [main] == DEBUG == com.jonm.dao.BlogMapper.getBlogViewsList == ==>  Preparing: select id, views from blog
""2021-03-31 === [main] == DEBUG == com.jonm.dao.BlogMapper.getBlogViewsList == ==> Parameters: 
""2021-03-31 === [main] == TRACE == com.jonm.dao.BlogMapper.getBlogViewsList == <==    Columns: id, views
""2021-03-31 === [main] == TRACE == com.jonm.dao.BlogMapper.getBlogViewsList == <==        Row: 1, 0
""2021-03-31 === [main] == DEBUG == com.jonm.dao.BlogMapper.getBlogViewsList == <==      Total: 1
""2021-03-31 === [main] == INFO  == org.quartz.impl.StdSchedulerFactory == Using default implementation for ThreadExecutor
""2021-03-31 === [main] == INFO  == org.quartz.core.SchedulerSignalerImpl == Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
""2021-03-31 === [main] == INFO  == org.quartz.core.QuartzScheduler == Quartz Scheduler v.2.3.2 created.
""2021-03-31 === [main] == INFO  == org.quartz.simpl.RAMJobStore == RAMJobStore initialized.
""2021-03-31 === [main] == INFO  == org.quartz.core.QuartzScheduler == Scheduler meta-data: Quartz Scheduler (v2.3.2) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

""2021-03-31 === [main] == INFO  == org.quartz.impl.StdSchedulerFactory == Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
""2021-03-31 === [main] == INFO  == org.quartz.impl.StdSchedulerFactory == Quartz scheduler version: 2.3.2
""2021-03-31 === [main] == INFO  == org.quartz.core.QuartzScheduler == JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@541c32de
""2021-03-31 === [main] == DEBUG == com.jonm.dao.ScheduleJobMapper.getJobList == ==>  Preparing: select job_id, bean_name, method_name, params, cron, status, remark, create_time from schedule_job
""2021-03-31 === [main] == DEBUG == com.jonm.dao.ScheduleJobMapper.getJobList == ==> Parameters: 
""2021-03-31 === [main] == TRACE == com.jonm.dao.ScheduleJobMapper.getJobList == <==    Columns: job_id, bean_name, method_name, params, cron, status, remark, create_time
""2021-03-31 === [main] == TRACE == com.jonm.dao.ScheduleJobMapper.getJobList == <==        Row: 1, redisSyncScheduleTask, syncBlogViewsToDatabase, , 0 0 1 * * ?, 1, 每天凌晨一点，从Redis将博客浏览量同步到数据库, 2020-11-17 23:45:42
""2021-03-31 === [main] == TRACE == com.jonm.dao.ScheduleJobMapper.getJobList == <==        Row: 2, visitorSyncScheduleTask, syncVisitInfoToDatabase, , 0 0 0 * * ?, 1, 清空当天Redis访客标识，记录当天的PV和UV，更新当天所有访客的PV和最后访问时间，更新城市新增访客UV数, 2021-02-05 08:14:28
""2021-03-31 === [main] == DEBUG == com.jonm.dao.ScheduleJobMapper.getJobList == <==      Total: 2
""2021-03-31 === [main] == INFO  == s.d.s.w.PropertySourcedRequestMappingHandlerMapping == Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
""2021-03-31 === [main] == INFO  == o.s.scheduling.concurrent.ThreadPoolTaskExecutor == Initializing ExecutorService
""2021-03-31 === [main] == INFO  == o.s.scheduling.concurrent.ThreadPoolTaskExecutor == Initializing ExecutorService 'sendEmilTaskExecutor'
""2021-03-31 === [main] == INFO  == o.s.security.web.DefaultSecurityFilterChain == Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@148a581e, org.springframework.security.web.context.SecurityContextPersistenceFilter@1ab64f66, org.springframework.security.web.header.HeaderWriterFilter@ffa60c9, org.springframework.web.filter.CorsFilter@59f4df4e, org.springframework.security.web.authentication.logout.LogoutFilter@65bf5c38, com.jonm.config.JwtLoginFilter@66113b7c, com.jonm.config.JwtFilter@7265db9d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2dc199d4, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4968deb9, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@34692767, org.springframework.security.web.session.SessionManagementFilter@41194707, org.springframework.security.web.access.ExceptionTranslationFilter@4a1bb556, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@ed5cf29]
""2021-03-31 === [main] == INFO  == o.s.boot.web.embedded.tomcat.TomcatWebServer == Tomcat started on port(s): 8090 (http) with context path ''
""2021-03-31 === [main] == INFO  == s.d.s.web.plugins.DocumentationPluginsBootstrapper == Context refreshed
""2021-03-31 === [main] == INFO  == s.d.s.web.plugins.DocumentationPluginsBootstrapper == Found 1 custom documentation plugin(s)
""2021-03-31 === [main] == INFO  == s.d.spring.web.scanners.ApiListingReferenceScanner == Scanning for api listing references
""2021-03-31 === [main] == INFO  == s.d.s.w.r.operation.CachingOperationNameGenerator == Generating unique operation named: aboutUsingGET_1
""2021-03-31 === [main] == INFO  == s.d.s.w.r.operation.CachingOperationNameGenerator == Generating unique operation named: blogsUsingGET_1
""2021-03-31 === [main] == INFO  == s.d.s.w.r.operation.CachingOperationNameGenerator == Generating unique operation named: getBlogUsingGET_1
""2021-03-31 === [main] == INFO  == s.d.s.w.r.operation.CachingOperationNameGenerator == Generating unique operation named: deleteUsingDELETE_1
""2021-03-31 === [main] == INFO  == s.d.s.w.r.operation.CachingOperationNameGenerator == Generating unique operation named: deleteUsingDELETE_2
""2021-03-31 === [main] == INFO  == s.d.s.w.r.operation.CachingOperationNameGenerator == Generating unique operation named: commentsUsingGET_1
""2021-03-31 === [main] == INFO  == s.d.s.w.r.operation.CachingOperationNameGenerator == Generating unique operation named: deleteUsingDELETE_3
""2021-03-31 === [main] == INFO  == s.d.s.w.r.operation.CachingOperationNameGenerator == Generating unique operation named: updatePublishedUsingPUT_1
""2021-03-31 === [main] == INFO  == s.d.s.w.r.operation.CachingOperationNameGenerator == Generating unique operation named: friendsUsingGET_1
""2021-03-31 === [main] == INFO  == s.d.s.w.r.operation.CachingOperationNameGenerator == Generating unique operation named: deleteUsingDELETE_4
""2021-03-31 === [main] == INFO  == s.d.s.w.r.operation.CachingOperationNameGenerator == Generating unique operation named: updatePublishedUsingPUT_2
""2021-03-31 === [main] == INFO  == s.d.s.w.r.operation.CachingOperationNameGenerator == Generating unique operation named: momentsUsingGET_1
""2021-03-31 === [main] == INFO  == s.d.s.w.r.operation.CachingOperationNameGenerator == Generating unique operation named: deleteUsingDELETE_5
""2021-03-31 === [main] == INFO  == s.d.s.w.r.operation.CachingOperationNameGenerator == Generating unique operation named: deleteUsingDELETE_6
""2021-03-31 === [main] == INFO  == s.d.s.w.r.operation.CachingOperationNameGenerator == Generating unique operation named: deleteUsingDELETE_7
""2021-03-31 === [main] == INFO  == s.d.s.w.r.operation.CachingOperationNameGenerator == Generating unique operation named: deleteUsingDELETE_8
""2021-03-31 === [main] == INFO  == s.d.s.w.r.operation.CachingOperationNameGenerator == Generating unique operation named: deleteUsingDELETE_9
""2021-03-31 === [main] == INFO  == o.s.scheduling.quartz.SchedulerFactoryBean == Starting Quartz Scheduler now
""2021-03-31 === [main] == INFO  == org.quartz.core.QuartzScheduler == Scheduler quartzScheduler_$_NON_CLUSTERED started.
""2021-03-31 === [main] == INFO  == com.jonm.BlogApiApplication == Started BlogApiApplication in 18.043 seconds (JVM running for 26.348)
""2021-03-31 === [SpringContextShutdownHook] == INFO  == org.quartz.core.QuartzScheduler == Scheduler quartzScheduler_$_NON_CLUSTERED paused.
""2021-03-31 === [SpringContextShutdownHook] == INFO  == o.s.scheduling.concurrent.ThreadPoolTaskExecutor == Shutting down ExecutorService 'sendEmilTaskExecutor'
""2021-03-31 === [SpringContextShutdownHook] == INFO  == o.s.scheduling.quartz.SchedulerFactoryBean == Shutting down Quartz Scheduler
""2021-03-31 === [SpringContextShutdownHook] == INFO  == org.quartz.core.QuartzScheduler == Scheduler quartzScheduler_$_NON_CLUSTERED shutting down.
""2021-03-31 === [SpringContextShutdownHook] == INFO  == org.quartz.core.QuartzScheduler == Scheduler quartzScheduler_$_NON_CLUSTERED paused.
""2021-03-31 === [SpringContextShutdownHook] == INFO  == org.quartz.core.QuartzScheduler == Scheduler quartzScheduler_$_NON_CLUSTERED shutdown complete.
""2021-03-31 === [SpringContextShutdownHook] == INFO  == com.alibaba.druid.pool.DruidDataSource == {dataSource-1} closing ...
""2021-03-31 === [SpringContextShutdownHook] == INFO  == com.alibaba.druid.pool.DruidDataSource == {dataSource-1} closed
"